From: <Saved by Blink>
Subject: ? Spring Data Jpa ???????????? - ??? - ???? - ITeye????
Date: Tue, 14 Sep 2015 09:21:38 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_F938_CCE8DF41.AF1B9EC5"

------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: text/html
Content-Transfer-Encoding: quoted-printable
Content-Location: http://someok.iteye.com/blog/1616651

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.=
w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns=3D"http://www.w3.=
org/1999/xhtml" xml:lang=3D"zh-CN" dir=3D"ltr"><head><meta http-equiv=3D"Co=
ntent-Type" content=3D"text/html; charset=3DUTF-8">
   =20
    <title>=E5=9C=A8 Spring Data Jpa =E4=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=
=E8=BE=91=E5=88=A0=E9=99=A4=E9=9C=80=E5=81=9A=E7=9A=84=E5=B7=A5=E4=BD=9C - =
=E9=83=81=E4=B9=9F=E9=A3=8E - =E6=8A=80=E6=9C=AF=E7=A2=8E=E7=89=87 - ITeye=
=E6=8A=80=E6=9C=AF=E7=BD=91=E7=AB=99</title>
    <meta name=3D"description" content=3D"Spring Data =E6=98=AF=E4=B8=AA=E5=
=A5=BD=E4=B8=9C=E8=A5=BF=EF=BC=8C=E6=9E=81=E5=A4=A7=E7=AE=80=E5=8C=96=E4=BA=
=86=E5=90=8E=E7=AB=AFdao=E7=9A=84=E6=93=8D=E4=BD=9C=EF=BC=8C=E5=8F=AA=E9=9C=
=80=E8=A6=81=E5=9C=A8 dao =E6=8E=A5=E5=8F=A3=E5=86=99=E4=B8=AA findByXXX =
=E7=9A=84=E6=96=B9=E6=B3=95=E5=B0=B1=E8=83=BD=E8=87=AA=E5=8A=A8=E5=AE=9E=E7=
=8E=B0=E6=8C=89=E6=9D=A1=E4=BB=B6=E6=9F=A5=E8=AF=A2=E8=BF=99=E4=B8=AA=E7=AE=
=80=E7=9B=B4=E5=A4=AA=E7=88=BD=E4=BA=86=E3=80=82  &nbsp;  =E4=B8=8D=E8=BF=
=87=E9=97=AE=E9=A2=98=E4=B9=9F=E5=87=BA=E7=8E=B0=E4=BA=86=EF=BC=8C=E6=88=91=
=E7=9A=84=E5=BA=94=E7=94=A8=E5=AF=B9=E4=BA=8E=E6=95=B0=E6=8D=AE=E7=9A=84=E6=
=93=8D=E4=BD=9C=E6=B2=A1=E6=9C=89=E7=89=A9=E7=90=86=E5=88=A0=E9=99=A4=EF=BC=
=8C=E5=85=A8=E6=98=AF=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=EF=BC=8C=E4=B9=9F=
=E5=B0=B1=E6=98=AF=E6=AF=8F=E4=B8=AA=E8=A1=A8=E9=83=BD=E6=9C=89=E4=B8=AA=E5=
=AD=97=E6=AE=B5 deleted=EF=BC=8C1=E8=A1=A8=E7=A4=BA=E6=AD=A4=E8=AE=B0=E5=BD=
=95=E5=B7=B2=E5=88=A0=E9=99=A4=EF=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E4=B8=BA=
 0 =E3=80=82=E8=BF=99=E5=B0=B1=E4=B8=8E spring data =E6=8F=90=E4=BE=9B=E7=
=9A=84=E6=A8=A1=E5=BC=8F=E6=9C=89=E5=86=B2=E7=AA=81=E4=BA=86=EF=BC=8C=E9=82=
=A3=E5=89=A9=E4=B8=8B=E7=9A=84=E5=B0=B1=E6=98=AF=EF=BC=9A=E6=94=B9=E4=B9=8B=
=E3=80=82  &nbsp;  CRUD  ...">
    <meta name=3D"keywords" content=3D"spring data =E5=9C=A8 Spring Data Jp=
a =E4=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E9=9C=80=
=E5=81=9A=E7=9A=84=E5=B7=A5=E4=BD=9C">
    <link rel=3D"shortcut icon" href=3D"http://someok.iteye.com/images/favi=
con.ico" type=3D"image/x-icon">
    <link rel=3D"search" type=3D"application/opensearchdescription+xml" hre=
f=3D"http://someok.iteye.com/open_search.xml" title=3D"ITeye">
    <link href=3D"http://someok.iteye.com/rss" rel=3D"alternate" title=3D"=
=E9=83=81=E4=B9=9F=E9=A3=8E - =E6=8A=80=E6=9C=AF=E7=A2=8E=E7=89=87" type=3D=
"application/rss+xml">
    <link href=3D"http://www.iteye.com/stylesheets/blog.css?1442202041" med=
ia=3D"screen" rel=3D"stylesheet" type=3D"text/css">
<link href=3D"http://www.iteye.com/stylesheets/themes/blog/blue.css?1326191=
326" media=3D"screen" rel=3D"stylesheet" type=3D"text/css">
   =20
   =20


      <link href=3D"http://www.iteye.com/javascripts/syntaxhighlighter/Synt=
axHighlighter.css?1348819953" media=3D"screen" rel=3D"stylesheet" type=3D"t=
ext/css">
 =20

 =20

  <style type=3D"text/css">.dp-j .annotation { color: #646464; }.dp-j .numb=
er { color: #C00000; }</style><style type=3D"text/css">.dp-j .annotation { =
color: #646464; }.dp-j .number { color: #C00000; }</style></head>
  <body>
    <div id=3D"header">
      <div id=3D"blog_site_nav">
  <a href=3D"http://www.iteye.com/" class=3D"homepage">=E9=A6=96=E9=A1=B5</=
a>
  <a href=3D"http://www.iteye.com/news">=E8=B5=84=E8=AE=AF</a>
  <a href=3D"http://www.iteye.com/magazines">=E7=B2=BE=E5=8D=8E</a>
  <a href=3D"http://www.iteye.com/forums">=E8=AE=BA=E5=9D=9B</a>
  <a href=3D"http://www.iteye.com/ask">=E9=97=AE=E7=AD=94</a>
  <a href=3D"http://www.iteye.com/blogs">=E5=8D=9A=E5=AE=A2</a>
  <a href=3D"http://www.iteye.com/blogs/subjects">=E4=B8=93=E6=A0=8F</a>
  <a href=3D"http://www.iteye.com/groups">=E7=BE=A4=E7=BB=84</a>
  <a href=3D"http://someok.iteye.com/blog/1616651#" onclick=3D"return false=
;" id=3D"msna"><u>=E6=9B=B4=E5=A4=9A</u> <small>=E2=96=BC</small></a>
  <div class=3D"quick_menu" style=3D"display:none;">
    <a target=3D"_blank" href=3D"http://job.iteye.com/iteye">=E6=8B=9B=E8=
=81=98</a>
    <a href=3D"http://www.iteye.com/search">=E6=90=9C=E7=B4=A2</a>
  </div>
</div>

      <div id=3D"user_nav">
      <a href=3D"http://someok.iteye.com/login" class=3D"welcome" title=3D"=
=E7=99=BB=E5=BD=95">=E6=82=A8=E8=BF=98=E6=9C=AA=E7=99=BB=E5=BD=95 !</a>
    <a href=3D"http://someok.iteye.com/login">=E7=99=BB=E5=BD=95</a>
    <a href=3D"http://someok.iteye.com/signup" class=3D"nobg">=E6=B3=A8=E5=
=86=8C</a>
  </div>

    </div>

    <div id=3D"page">
      <div id=3D"branding" class=3D"clearfix">
        <div id=3D"blog_name">
          <h1><a href=3D"http://someok.iteye.com/">=E9=83=81=E4=B9=9F=E9=A3=
=8E - =E6=8A=80=E6=9C=AF=E7=A2=8E=E7=89=87</a></h1>
        </div>
        <div id=3D"fd"></div>
        <div id=3D"blog_navbar">
          <ul>
            <li class=3D"blog_navbar_for"><a href=3D"http://someok.iteye.co=
m/"><strong>=E5=8D=9A=E5=AE=A2</strong></a></li>
            <li><a href=3D"http://someok.iteye.com/weibo">=E5=BE=AE=E5=8D=
=9A</a></li>
            <li><a href=3D"http://someok.iteye.com/album">=E7=9B=B8=E5=86=
=8C</a></li>
            <li><a href=3D"http://someok.iteye.com/link">=E6=94=B6=E8=97=8F=
</a></li>
            <li><a href=3D"http://someok.iteye.com/blog/guest_book">=E7=95=
=99=E8=A8=80</a></li>
            <li><a href=3D"http://someok.iteye.com/blog/profile">=E5=85=B3=
=E4=BA=8E=E6=88=91</a></li>
          </ul>
   =20
          <div class=3D"search">
            <form action=3D"http://someok.iteye.com/blog/search" method=3D"=
get">
              <input class=3D"search_text" id=3D"query" name=3D"query" styl=
e=3D"margin-left: 10px;width: 110px;" type=3D"text" value=3D"">
              <input class=3D"submit_search" type=3D"submit" value=3D"">
            </form>
          </div>=20
          <div id=3D"fd"></div>        =20
        </div>
      </div>
     =20
      <div id=3D"content" class=3D"clearfix">
        <div id=3D"main">
         =20



         =20


<div class=3D"h-entry" style=3D"display:none">
  <a href=3D"http://someok.iteye.com/" class=3D"p-author" target=3D"_blank"=
>wjx</a>
</div>


<div class=3D"blog_main">
  <div class=3D"blog_title">
    <h3>
      <a href=3D"http://someok.iteye.com/blog/1616651">=E5=9C=A8 Spring Dat=
a Jpa =E4=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E9=9C=
=80=E5=81=9A=E7=9A=84=E5=B7=A5=E4=BD=9C</a>
      <em class=3D"actions">      </em>
    </h3>
    <ul class=3D"blog_categories"><strong>=E5=8D=9A=E5=AE=A2=E5=88=86=E7=B1=
=BB=EF=BC=9A</strong> <li><a href=3D"http://someok.iteye.com/category/23647=
6">spring data</a></li><li><a href=3D"http://someok.iteye.com/category/1378=
8">open source</a></li> </ul>
        <div class=3D"news_tag"><a href=3D"http://www.iteye.com/blogs/tag/s=
pring%20data">spring data</a>&nbsp;</div>
  </div>

  <div id=3D"blog_content" class=3D"blog_content">
    <p>Spring Data =E6=98=AF=E4=B8=AA=E5=A5=BD=E4=B8=9C=E8=A5=BF=EF=BC=8C=
=E6=9E=81=E5=A4=A7=E7=AE=80=E5=8C=96=E4=BA=86=E5=90=8E=E7=AB=AFdao=E7=9A=84=
=E6=93=8D=E4=BD=9C=EF=BC=8C=E5=8F=AA=E9=9C=80=E8=A6=81=E5=9C=A8 dao =E6=8E=
=A5=E5=8F=A3=E5=86=99=E4=B8=AA findByXXX =E7=9A=84=E6=96=B9=E6=B3=95=E5=B0=
=B1=E8=83=BD=E8=87=AA=E5=8A=A8=E5=AE=9E=E7=8E=B0=E6=8C=89=E6=9D=A1=E4=BB=B6=
=E6=9F=A5=E8=AF=A2=E8=BF=99=E4=B8=AA=E7=AE=80=E7=9B=B4=E5=A4=AA=E7=88=BD=E4=
=BA=86=E3=80=82</p>
<p>&nbsp;</p>
<p>=E4=B8=8D=E8=BF=87=E9=97=AE=E9=A2=98=E4=B9=9F=E5=87=BA=E7=8E=B0=E4=BA=86=
=EF=BC=8C=E6=88=91=E7=9A=84=E5=BA=94=E7=94=A8=E5=AF=B9=E4=BA=8E=E6=95=B0=E6=
=8D=AE=E7=9A=84=E6=93=8D=E4=BD=9C=E6=B2=A1=E6=9C=89=E7=89=A9=E7=90=86=E5=88=
=A0=E9=99=A4=EF=BC=8C=E5=85=A8=E6=98=AF=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=
=EF=BC=8C=E4=B9=9F=E5=B0=B1=E6=98=AF=E6=AF=8F=E4=B8=AA=E8=A1=A8=E9=83=BD=E6=
=9C=89=E4=B8=AA=E5=AD=97=E6=AE=B5 deleted=EF=BC=8C1=E8=A1=A8=E7=A4=BA=E6=AD=
=A4=E8=AE=B0=E5=BD=95=E5=B7=B2=E5=88=A0=E9=99=A4=EF=BC=8C=E9=BB=98=E8=AE=A4=
=E5=80=BC=E4=B8=BA 0 =E3=80=82=E8=BF=99=E5=B0=B1=E4=B8=8E spring data =E6=
=8F=90=E4=BE=9B=E7=9A=84=E6=A8=A1=E5=BC=8F=E6=9C=89=E5=86=B2=E7=AA=81=E4=BA=
=86=EF=BC=8C=E9=82=A3=E5=89=A9=E4=B8=8B=E7=9A=84=E5=B0=B1=E6=98=AF=EF=BC=9A=
=E6=94=B9=E4=B9=8B=E3=80=82</p>
<p>&nbsp;</p>
<h2>CRUD =E6=93=8D=E4=BD=9C</h2>
<p>=E5=AF=B9=E4=BA=8E=E5=9F=BA=E7=A1=80=E7=9A=84CRUD =E6=93=8D=E4=BD=9C=E6=
=90=9E=E8=B5=B7=E6=9D=A5=E6=AF=94=E8=BE=83=E7=AE=80=E5=8D=95=EF=BC=8C=E6=8C=
=89=E7=85=A7=E5=85=B6=E5=AE=98=E6=96=B9=E6=96=87=E6=A1=A3=E9=87=8D=E6=96=B0=
=E5=AE=9E=E7=8E=B0=E4=B8=AA&nbsp;factory-class =E5=B0=B1ok=E4=BA=86=EF=BC=
=8C=E5=85=B7=E4=BD=93=E7=9A=84 repository =E7=B1=BB=E5=8F=AF=E4=BB=A5=E7=BB=
=A7=E6=89=BF&nbsp;org.springframework.data.jpa.repository.support.SimpleJpa=
Repository =E8=BF=9B=E8=A1=8C=E4=BF=AE=E6=94=B9=EF=BC=8C=E4=B8=8D=E8=BF=87=
=E6=88=91=E4=B8=BA=E4=BA=86=E7=9C=81=E4=BA=8B=EF=BC=8C=E7=9B=B4=E6=8E=A5=E6=
=8A=8A=E8=BF=99=E4=B8=AA=E7=B1=BB=E5=A4=8D=E5=88=B6=E8=BF=87=E6=9D=A5=E7=84=
=B6=E5=90=8E=E4=B8=8B=E6=89=8B=EF=BC=9A</p>
<p>&nbsp;</p>
<div class=3D"dp-highlighter" id=3D""><div class=3D"bar"><div class=3D"tool=
s">Java=E4=BB=A3=E7=A0=81 <embed wmode=3D"transparent" src=3D"http://someok=
.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf" width=3D"14" he=
ight=3D"15" flashvars=3D"clipboard=3D%2F*%0A%20*%20%24Id%24%0A%20*%2F%0Apac=
kage%20com.someok.common.base.spring.data%3B%0A%0Aimport%20static%20org.spr=
ingframework.data.jpa.repository.query.QueryUtils.DELETE_ALL_QUERY_STRING%3=
B%0Aimport%20static%20org.springframework.data.jpa.repository.query.QueryUt=
ils.applyAndBind%3B%0Aimport%20static%20org.springframework.data.jpa.reposi=
tory.query.QueryUtils.getQueryString%3B%0Aimport%20static%20org.springframe=
work.data.jpa.repository.query.QueryUtils.toOrders%3B%0A%0Aimport%20java.io=
.Serializable%3B%0Aimport%20java.util.ArrayList%3B%0Aimport%20java.util.Col=
lections%3B%0Aimport%20java.util.List%3B%0A%0Aimport%20javax.persistence.En=
tityManager%3B%0Aimport%20javax.persistence.LockModeType%3B%0Aimport%20java=
x.persistence.NoResultException%3B%0Aimport%20javax.persistence.TypedQuery%=
3B%0Aimport%20javax.persistence.criteria.CriteriaBuilder%3B%0Aimport%20java=
x.persistence.criteria.CriteriaQuery%3B%0Aimport%20javax.persistence.criter=
ia.Path%3B%0Aimport%20javax.persistence.criteria.Predicate%3B%0Aimport%20ja=
vax.persistence.criteria.Root%3B%0A%0Aimport%20org.springframework.dao.Empt=
yResultDataAccessException%3B%0Aimport%20org.springframework.data.domain.Pa=
ge%3B%0Aimport%20org.springframework.data.domain.PageImpl%3B%0Aimport%20org=
.springframework.data.domain.Pageable%3B%0Aimport%20org.springframework.dat=
a.domain.Sort%3B%0Aimport%20org.springframework.data.jpa.domain.Specificati=
on%3B%0Aimport%20org.springframework.data.jpa.repository.support.JpaEntityI=
nformation%3B%0Aimport%20org.springframework.data.jpa.repository.support.Jp=
aEntityInformationSupport%3B%0Aimport%20org.springframework.data.jpa.reposi=
tory.support.LockMetadataProvider%3B%0Aimport%20org.springframework.data.jp=
a.repository.support.SimpleJpaRepository%3B%0Aimport%20org.springframework.=
transaction.annotation.Transactional%3B%0Aimport%20org.springframework.util=
.Assert%3B%0A%0Aimport%20com.someok.common.base.mvc.BaseDao%3B%0Aimport%20c=
om.someok.common.base.mvc.BaseDefaultModel%3B%0Aimport%20com.someok.common.=
utils.StringUtil%3B%0A%0A%2F**%0A%20*%20%E4%BF%AE%E6%94%B9%E8%87%AA%0A%20*%=
20%7B%40link%20org.springframework.data.jpa.repository.support.SimpleJpaRep=
ository%7D%2C%0A%20*%20%E6%8F%90%E4%BE%9B%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%=
A4%E5%8A%9F%E8%83%BD%EF%BC%88logicDelete%EF%BC%89%EF%BC%8C%E4%B8%BA%E9%80%8=
2%E5%BA%94%E8%BF%99%E4%B8%AA%E8%A6%81%E6%B1%82%EF%BC%8C%E7%9B%B8%E5%85%B3%E=
7%9A%84%E6%9F%A5%E8%AF%A2%E4%B9%9F%E9%83%BD%E5%81%9A%E4%BA%86%E4%BF%AE%E6%9=
4%B9%E3%80%82%0A%20*%20%0A%20*%20%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A=
%84%E6%98%AF%E9%82%A3%E4%BA%9B%20delete%20%E6%96%B9%E6%B3%95%E4%BB%8D%E7%84=
%B6%E6%98%AF%E7%89%A9%E7%90%86%E5%88%A0%E9%99%A4%EF%BC%8C%E8%80%8C%E6%96%B0=
%E5%A2%9E%E7%9A%84%E9%82%A3%E4%BA%9B%20logic%20%E5%BC%80%E5%A4%B4%E7%9A%84%=
E6%96%B9%E6%B3%95%E6%89%8D%E6%98%AF%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%EF%=
BC%8C%20%E7%94%A8%E6%97%B6%E5%80%99%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E8%=
BF%99%E7%82%B9.%0A%20*%20%0A%20*%20%40author%20wangjxe%0A%20*%20%0A%20*%2F%=
0A%40org.springframework.stereotype.Repository%0A%40Transactional(readOnly%=
20%3D%20true)%0Apublic%20class%20CustomSimpleJpaRepository%3CT%2C%20ID%20ex=
tends%20Serializable%3E%20implements%0A%09%09BaseDao%3CT%2C%20ID%3E%20%7B%0=
A%0A%09%2F**%0A%09%20*%20%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E5%AD%97%E6%A=
E%B5%E5%90%8D.%0A%09%20*%2F%0A%09public%20final%20static%20String%20DELETEE=
D_FIELD%20%3D%20%22deleted%22%3B%0A%0A%09public%20static%20final%20String%2=
0COUNT_QUERY_STRING%20%3D%20%22select%20count(%25s)%20from%20%25s%20x%20whe=
re%20x.deleted%20%3D%20false%22%3B%0A%09public%20static%20final%20String%20=
EXISTS_QUERY_STRING%20%3D%20%22select%20count(%25s)%20from%20%25s%20x%20whe=
re%20x.%25s%20%3D%20%3Aid%20and%20x.deleted%20%3D%20false%22%3B%0A%0A%09pri=
vate%20final%20JpaEntityInformation%3CT%2C%20%3F%3E%20entityInformation%3B%=
0A%09private%20final%20EntityManager%20em%3B%0A%09%2F%2F%20private%20final%=
20PersistenceProvider%20provider%3B%0A%0A%09private%20LockMetadataProvider%=
20lockMetadataProvider%3B%0A%0A%09%2F**%0A%09%20*%20Creates%20a%20new%20%7B=
%40link%20SimpleJpaRepository%7D%20to%20manage%20objects%20of%20the%20given=
%0A%09%20*%20%7B%40link%20JpaEntityInformation%7D.%0A%09%20*%20%0A%09%20*%2=
0%40param%20entityInformation%0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20=
must%20not%20be%20%7B%40literal%20null%7D.%0A%09%20*%20%40param%20entityMan=
ager%0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20must%20not%20be%20%7B%40l=
iteral%20null%7D.%0A%09%20*%2F%0A%09public%20CustomSimpleJpaRepository(%0A%=
09%09%09JpaEntityInformation%3CT%2C%20%3F%3E%20entityInformation%2C%0A%09%0=
9%09EntityManager%20entityManager)%20%7B%0A%0A%09%09Assert.notNull(entityIn=
formation)%3B%0A%09%09Assert.notNull(entityManager)%3B%0A%0A%09%09this.enti=
tyInformation%20%3D%20entityInformation%3B%0A%09%09this.em%20%3D%20entityMa=
nager%3B%0A%09%09%2F%2F%20this.provider%20%3D%20PersistenceProvider.fromEnt=
ityManager(entityManager)%3B%0A%09%7D%0A%0A%09%2F**%0A%09%20*%20Creates%20a=
%20new%20%7B%40link%20SimpleJpaRepository%7D%20to%20manage%20objects%20of%2=
0the%20given%0A%09%20*%20domain%20type.%0A%09%20*%20%0A%09%20*%20%40param%2=
0domainClass%0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20must%20not%20be%2=
0%7B%40literal%20null%7D.%0A%09%20*%20%40param%20em%0A%09%20*%20%20%20%20%2=
0%20%20%20%20%20%20%20must%20not%20be%20%7B%40literal%20null%7D.%0A%09%20*%=
2F%0A%09public%20CustomSimpleJpaRepository(Class%3CT%3E%20domainClass%2C%20=
EntityManager%20em)%20%7B%0A%09%09this(JpaEntityInformationSupport.getMetad=
ata(domainClass%2C%20em)%2C%20em)%3B%0A%09%7D%0A%0A%09%2F**%0A%09%20*%20Con=
figures%20a%20custom%20%7B%40link%20LockMetadataProvider%7D%20to%20be%20use=
d%20to%20detect%0A%09%20*%20%7B%40link%20LockModeType%7Ds%20to%20be%20appli=
ed%20to%20queries.%0A%09%20*%20%0A%09%20*%20%40param%20lockMetadataProvider=
%0A%09%20*%2F%0A%09public%20void%20setLockMetadataProvider(%0A%09%09%09Lock=
MetadataProvider%20lockMetadataProvider)%20%7B%0A%09%09this.lockMetadataPro=
vider%20%3D%20lockMetadataProvider%3B%0A%09%7D%0A%0A%09private%20Class%3CT%=
3E%20getDomainClass()%20%7B%0A%09%09return%20entityInformation.getJavaType(=
)%3B%0A%09%7D%0A%0A%09private%20String%20getDeleteAllQueryString()%20%7B%0A=
%09%09return%20getQueryString(DELETE_ALL_QUERY_STRING%2C%0A%09%09%09%09enti=
tyInformation.getEntityName())%3B%0A%09%7D%0A%0A%09private%20String%20getCo=
untQueryString()%20%7B%0A%0A%09%09String%20countQuery%20%3D%20String.format=
(COUNT_QUERY_STRING%2C%0A%09%09%09%09getCountQueryPlaceholder()%2C%20%22%25=
s%22)%3B%0A%09%09return%20getQueryString(countQuery%2C%20entityInformation.=
getEntityName())%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%2=
0*%20%0A%09%20*%20%40see%20org.springframework.data.repository.CrudReposito=
ry%23delete(java.io.%0A%09%20*%20Serializable)%0A%09%20*%2F%0A%09%40Transac=
tional%0A%09public%20void%20delete(ID%20id)%20%7B%0A%0A%09%09Assert.notNull=
(id%2C%20%22The%20given%20id%20must%20not%20be%20null!%22)%3B%0A%0A%09%09if=
%20(!exists(id))%20%7B%0A%09%09%09throw%20new%20EmptyResultDataAccessExcept=
ion(String.format(%0A%09%09%09%09%09%22No%20%25s%20entity%20with%20id%20%25=
s%20exists!%22%2C%0A%09%09%09%09%09entityInformation.getJavaType()%2C%20id)=
%2C%201)%3B%0A%09%09%7D%0A%0A%09%09delete(findOne(id))%3B%0A%09%7D%0A%0A%09=
%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%0A%09%20*%20=
org.springframework.data.repository.CrudRepository%23delete(java.lang.Objec=
t%0A%09%20*%20)%0A%09%20*%2F%0A%09%40Transactional%0A%09public%20void%20del=
ete(T%20entity)%20%7B%0A%0A%09%09Assert.notNull(entity%2C%20%22The%20entity=
%20must%20not%20be%20null!%22)%3B%0A%09%09em.remove(em.contains(entity)%20%=
3F%20entity%20%3A%20em.merge(entity))%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20=
(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%0A%09%20*%20org.springframewo=
rk.data.repository.CrudRepository%23delete(java.lang.Iterable%0A%09%20*%20)=
%0A%09%20*%2F%0A%09%40Transactional%0A%09public%20void%20delete(Iterable%3C=
%3F%20extends%20T%3E%20entities)%20%7B%0A%0A%09%09Assert.notNull(entities%2=
C%20%22The%20given%20Iterable%20of%20entities%20not%20be%20null!%22)%3B%0A%=
0A%09%09for%20(T%20entity%20%3A%20entities)%20%7B%0A%09%09%09delete(entity)=
%3B%0A%09%09%7D%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%2=
0%0A%09%20*%20%40see%0A%09%20*%20org.springframework.data.jpa.repository.Jp=
aRepository%23deleteInBatch(java%0A%09%20*%20.lang.Iterable)%0A%09%20*%2F%0=
A%09%40Transactional%0A%09public%20void%20deleteInBatch(Iterable%3CT%3E%20e=
ntities)%20%7B%0A%0A%09%09Assert.notNull(entities%2C%20%22The%20given%20Ite=
rable%20of%20entities%20not%20be%20null!%22)%3B%0A%0A%09%09if%20(!entities.=
iterator().hasNext())%20%7B%0A%09%09%09return%3B%0A%09%09%7D%0A%0A%09%09app=
lyAndBind(%0A%09%09%09%09getQueryString(DELETE_ALL_QUERY_STRING%2C%0A%09%09=
%09%09%09%09entityInformation.getEntityName())%2C%20entities%2C%20em)%0A%09=
%09%09%09.executeUpdate()%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc=
)%0A%09%20*%20%0A%09%20*%20%40see%20org.springframework.data.repository.Rep=
ository%23deleteAll()%0A%09%20*%2F%0A%09%40Transactional%0A%09public%20void=
%20deleteAll()%20%7B%0A%0A%09%09for%20(T%20element%20%3A%20findAll())%20%7B=
%0A%09%09%09delete(element)%3B%0A%09%09%7D%0A%09%7D%0A%0A%09%2F*%0A%09%20*%=
20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%0A%09%20*%20org.springframe=
work.data.jpa.repository.JpaRepository%23deleteAllInBatch()%0A%09%20*%2F%0A=
%09%40Transactional%0A%09public%20void%20deleteAllInBatch()%20%7B%0A%09%09e=
m.createQuery(getDeleteAllQueryString()).executeUpdate()%3B%0A%09%7D%0A%0A%=
09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%0A%09%20*%=
20org.springframework.data.repository.Repository%23readById(java.io.Seriali=
zable%0A%09%20*%20)%0A%09%20*%2F%0A%09public%20T%20findOne(ID%20id)%20%7B%0=
A%0A%09%09Assert.notNull(id%2C%20%22The%20given%20id%20must%20not%20be%20nu=
ll!%22)%3B%0A%09%09return%20em.find(getDomainClass()%2C%20id)%3B%0A%09%7D%0=
A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%20org=
.springframework.data.repository.CrudRepository%23exists(java.io.%0A%09%20*=
%20Serializable)%0A%09%20*%2F%0A%09public%20boolean%20exists(ID%20id)%20%7B=
%0A%0A%09%09Assert.notNull(id%2C%20%22The%20given%20id%20must%20not%20be%20=
null!%22)%3B%0A%0A%09%09if%20(entityInformation.getIdAttribute()%20!%3D%20n=
ull)%20%7B%0A%0A%09%09%09String%20placeholder%20%3D%20getCountQueryPlacehol=
der()%3B%0A%09%09%09String%20entityName%20%3D%20entityInformation.getEntity=
Name()%3B%0A%09%09%09String%20idAttributeName%20%3D%20entityInformation.get=
IdAttribute()%0A%09%09%09%09%09.getName()%3B%0A%09%09%09String%20existsQuer=
y%20%3D%20String.format(EXISTS_QUERY_STRING%2C%0A%09%09%09%09%09placeholder=
%2C%20entityName%2C%20idAttributeName)%3B%0A%0A%09%09%09TypedQuery%3CLong%3=
E%20query%20%3D%20em.createQuery(existsQuery%2C%20Long.class)%3B%0A%09%09%0=
9query.setParameter(%22id%22%2C%20id)%3B%0A%0A%09%09%09return%20query.getSi=
ngleResult()%20%3D%3D%201%3B%0A%09%09%7D%20else%20%7B%0A%09%09%09return%20f=
indOne(id)%20!%3D%20null%3B%0A%09%09%7D%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(=
non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%20org.springframework.data.jpa=
.repository.JpaRepository%23findAll()%0A%09%20*%2F%0A%09public%20List%3CT%3=
E%20findAll()%20%7B%0A%09%09return%20getQuery(null%2C%20(Sort)%20null).getR=
esultList()%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20=
%0A%09%20*%20%40see%20org.springframework.data.repository.CrudRepository%23=
findAll(ID%5B%5D)%0A%09%20*%2F%0A%09public%20List%3CT%3E%20findAll(Iterable=
%3CID%3E%20ids)%20%7B%0A%0A%09%09return%20getQuery(new%20Specification%3CT%=
3E()%20%7B%0A%09%09%09public%20Predicate%20toPredicate(Root%3CT%3E%20root%2=
C%20CriteriaQuery%3C%3F%3E%20query%2C%0A%09%09%09%09%09CriteriaBuilder%20cb=
)%20%7B%0A%09%09%09%09Path%3C%3F%3E%20path%20%3D%20root.get(entityInformati=
on.getIdAttribute())%3B%0A%09%09%09%09return%20path.in(cb.parameter(List.cl=
ass%2C%20%22ids%22))%3B%0A%09%09%09%7D%0A%09%09%7D%2C%20(Sort)%20null).setP=
arameter(%22ids%22%2C%20ids).getResultList()%3B%0A%09%7D%0A%0A%09%2F*%0A%09=
%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%20org.springframework.=
data.jpa.repository.JpaRepository%23findAll(org.%0A%09%20*%20springframewor=
k.data.domain.Sort)%0A%09%20*%2F%0A%09public%20List%3CT%3E%20findAll(Sort%2=
0sort)%20%7B%0A%09%09return%20getQuery(null%2C%20sort).getResultList()%3B%0=
A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40=
see%0A%09%20*%20org.springframework.data.repository.PagingAndSortingReposit=
ory%23findAll%0A%09%20*%20(org.springframework.data.domain.Pageable)%0A%09%=
20*%2F%0A%09public%20Page%3CT%3E%20findAll(Pageable%20pageable)%20%7B%0A%0A=
%09%09if%20(null%20%3D%3D%20pageable)%20%7B%0A%09%09%09return%20new%20PageI=
mpl%3CT%3E(findAll())%3B%0A%09%09%7D%0A%0A%09%09return%20findAll(null%2C%20=
pageable)%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0=
A%09%20*%20%40see%0A%09%20*%20org.springframework.data.jpa.repository.JpaSp=
ecificationExecutor%23findOne%0A%09%20*%20(org.springframework.data.jpa.dom=
ain.Specification)%0A%09%20*%2F%0A%09public%20T%20findOne(Specification%3CT=
%3E%20spec)%20%7B%0A%0A%09%09try%20%7B%0A%09%09%09return%20getQuery(spec%2C=
%20(Sort)%20null).getSingleResult()%3B%0A%09%09%7D%20catch%20(NoResultExcep=
tion%20e)%20%7B%0A%09%09%09return%20null%3B%0A%09%09%7D%0A%09%7D%0A%0A%09%2=
F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%0A%09%20*%20or=
g.springframework.data.jpa.repository.JpaSpecificationExecutor%23findAll%0A=
%09%20*%20(org.springframework.data.jpa.domain.Specification)%0A%09%20*%2F%=
0A%09public%20List%3CT%3E%20findAll(Specification%3CT%3E%20spec)%20%7B%0A%0=
9%09return%20getQuery(spec%2C%20(Sort)%20null).getResultList()%3B%0A%09%7D%=
0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%0A%0=
9%20*%20org.springframework.data.jpa.repository.JpaSpecificationExecutor%23=
findAll%0A%09%20*%20(org.springframework.data.jpa.domain.Specification%2C%0=
A%09%20*%20org.springframework.data.domain.Pageable)%0A%09%20*%2F%0A%09publ=
ic%20Page%3CT%3E%20findAll(Specification%3CT%3E%20spec%2C%20Pageable%20page=
able)%20%7B%0A%0A%09%09TypedQuery%3CT%3E%20query%20%3D%20getQuery(spec%2C%2=
0pageable)%3B%0A%09%09return%20pageable%20%3D%3D%20null%20%3F%20new%20PageI=
mpl%3CT%3E(query.getResultList())%0A%09%09%09%09%3A%20readPage(query%2C%20p=
ageable%2C%20spec)%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09=
%20*%20%0A%09%20*%20%40see%0A%09%20*%20org.springframework.data.jpa.reposit=
ory.JpaSpecificationExecutor%23findAll%0A%09%20*%20(org.springframework.dat=
a.jpa.domain.Specification%2C%0A%09%20*%20org.springframework.data.domain.S=
ort)%0A%09%20*%2F%0A%09public%20List%3CT%3E%20findAll(Specification%3CT%3E%=
20spec%2C%20Sort%20sort)%20%7B%0A%0A%09%09return%20getQuery(spec%2C%20sort)=
.getResultList()%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%2=
0*%20%0A%09%20*%20%40see%20org.springframework.data.repository.CrudReposito=
ry%23count()%0A%09%20*%2F%0A%09public%20long%20count()%20%7B%0A%09%09return=
%20em.createQuery(getCountQueryString()%2C%20Long.class)%0A%09%09%09%09.get=
SingleResult()%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*=
%20%0A%09%20*%20%40see%0A%09%20*%20org.springframework.data.jpa.repository.=
JpaSpecificationExecutor%23count%0A%09%20*%20(org.springframework.data.jpa.=
domain.Specification)%0A%09%20*%2F%0A%09public%20long%20count(Specification=
%3CT%3E%20spec)%20%7B%0A%0A%09%09return%20getCountQuery(spec).getSingleResu=
lt()%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%=
20*%20%40see%0A%09%20*%20org.springframework.data.repository.CrudRepository=
%23save(java.lang.Object)%0A%09%20*%2F%0A%09%40Transactional%0A%09public%20=
%3CS%20extends%20T%3E%20S%20save(S%20entity)%20%7B%0A%0A%09%09if%20(entityI=
nformation.isNew(entity))%20%7B%0A%09%09%09em.persist(entity)%3B%0A%09%09%0=
9return%20entity%3B%0A%09%09%7D%20else%20%7B%0A%09%09%09return%20em.merge(e=
ntity)%3B%0A%09%09%7D%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09=
%20*%20%0A%09%20*%20%40see%0A%09%20*%20org.springframework.data.jpa.reposit=
ory.JpaRepository%23saveAndFlush(java%0A%09%20*%20.lang.Object)%0A%09%20*%2=
F%0A%09%40Transactional%0A%09public%20T%20saveAndFlush(T%20entity)%20%7B%0A=
%0A%09%09T%20result%20%3D%20save(entity)%3B%0A%09%09flush()%3B%0A%0A%09%09r=
eturn%20result%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*=
%20%0A%09%20*%20%40see%0A%09%20*%20org.springframework.data.jpa.repository.=
JpaRepository%23save(java.lang.%0A%09%20*%20Iterable)%0A%09%20*%2F%0A%09%40=
Transactional%0A%09public%20%3CS%20extends%20T%3E%20List%3CS%3E%20save(Iter=
able%3CS%3E%20entities)%20%7B%0A%0A%09%09List%3CS%3E%20result%20%3D%20new%2=
0ArrayList%3CS%3E()%3B%0A%0A%09%09if%20(entities%20%3D%3D%20null)%20%7B%0A%=
09%09%09return%20result%3B%0A%09%09%7D%0A%0A%09%09for%20(S%20entity%20%3A%2=
0entities)%20%7B%0A%09%09%09result.add(save(entity))%3B%0A%09%09%7D%0A%0A%0=
9%09return%20result%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%0=
9%20*%20%0A%09%20*%20%40see%20org.springframework.data.jpa.repository.JpaRe=
pository%23flush()%0A%09%20*%2F%0A%09%40Transactional%0A%09public%20void%20=
flush()%20%7B%0A%0A%09%09em.flush()%3B%0A%09%7D%0A%0A%09%2F**%0A%09%20*%20R=
eads%20the%20given%20%7B%40link%20TypedQuery%7D%20into%20a%20%7B%40link%20P=
age%7D%20applying%20the%20given%0A%09%20*%20%7B%40link%20Pageable%7D%20and%=
20%7B%40link%20Specification%7D.%0A%09%20*%20%0A%09%20*%20%40param%20query%=
0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20must%20not%20be%20%7B%40litera=
l%20null%7D.%0A%09%20*%20%40param%20spec%0A%09%20*%20%20%20%20%20%20%20%20%=
20%20%20%20can%20be%20%7B%40literal%20null%7D.%0A%09%20*%20%40param%20pagea=
ble%0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20can%20be%20%7B%40literal%2=
0null%7D.%0A%09%20*%20%40return%0A%09%20*%2F%0A%09private%20Page%3CT%3E%20r=
eadPage(TypedQuery%3CT%3E%20query%2C%20Pageable%20pageable%2C%0A%09%09%09Sp=
ecification%3CT%3E%20spec)%20%7B%0A%0A%09%09query.setFirstResult(pageable.g=
etOffset())%3B%0A%09%09query.setMaxResults(pageable.getPageSize())%3B%0A%0A=
%09%09Long%20total%20%3D%20getCountQuery(spec).getSingleResult()%3B%0A%09%0=
9List%3CT%3E%20content%20%3D%20total%20%3E%20pageable.getOffset()%20%3F%20q=
uery.getResultList()%0A%09%09%09%09%3A%20Collections.%3CT%3E%20emptyList()%=
3B%0A%0A%09%09return%20new%20PageImpl%3CT%3E(content%2C%20pageable%2C%20tot=
al)%3B%0A%09%7D%0A%0A%09%2F**%0A%09%20*%20Creates%20a%20new%20%7B%40link%20=
TypedQuery%7D%20from%20the%20given%20%7B%40link%20Specification%7D.%0A%09%2=
0*%20%0A%09%20*%20%40param%20spec%0A%09%20*%20%20%20%20%20%20%20%20%20%20%2=
0%20can%20be%20%7B%40literal%20null%7D.%0A%09%20*%20%40param%20pageable%0A%=
09%20*%20%20%20%20%20%20%20%20%20%20%20%20can%20be%20%7B%40literal%20null%7=
D.%0A%09%20*%20%40return%0A%09%20*%2F%0A%09private%20TypedQuery%3CT%3E%20ge=
tQuery(Specification%3CT%3E%20spec%2C%20Pageable%20pageable)%20%7B%0A%0A%09=
%09Sort%20sort%20%3D%20pageable%20%3D%3D%20null%20%3F%20null%20%3A%20pageab=
le.getSort()%3B%0A%09%09return%20getQuery(spec%2C%20sort)%3B%0A%09%7D%0A%0A=
%09%2F**%0A%09%20*%20Creates%20a%20%7B%40link%20TypedQuery%7D%20for%20the%2=
0given%20%7B%40link%20Specification%7D%20and%0A%09%20*%20%7B%40link%20Sort%=
7D.%0A%09%20*%20%0A%09%20*%20%40param%20spec%0A%09%20*%20%20%20%20%20%20%20=
%20%20%20%20%20can%20be%20%7B%40literal%20null%7D.%0A%09%20*%20%40param%20s=
ort%0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20can%20be%20%7B%40literal%2=
0null%7D.%0A%09%20*%20%40return%0A%09%20*%2F%0A%09private%20TypedQuery%3CT%=
3E%20getQuery(Specification%3CT%3E%20spec%2C%20Sort%20sort)%20%7B%0A%0A%09%=
09CriteriaBuilder%20builder%20%3D%20em.getCriteriaBuilder()%3B%0A%09%09Crit=
eriaQuery%3CT%3E%20query%20%3D%20builder.createQuery(getDomainClass())%3B%0=
A%0A%09%09Root%3CT%3E%20root%20%3D%20applySpecificationToCriteria(spec%2C%2=
0query)%3B%0A%09%09query.select(root)%3B%0A%0A%09%09if%20(sort%20!%3D%20nul=
l)%20%7B%0A%09%09%09query.orderBy(toOrders(sort%2C%20root%2C%20builder))%3B=
%0A%09%09%7D%0A%0A%09%09return%20applyLockMode(em.createQuery(query))%3B%0A=
%09%7D%0A%0A%09%2F**%0A%09%20*%20Creates%20a%20new%20count%20query%20for%20=
the%20given%20%7B%40link%20Specification%7D.%0A%09%20*%20%0A%09%20*%20%40pa=
ram%20spec%0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20can%20be%20%7B%40li=
teral%20null%7D.%0A%09%20*%20%40return%0A%09%20*%2F%0A%09private%20TypedQue=
ry%3CLong%3E%20getCountQuery(Specification%3CT%3E%20spec)%20%7B%0A%0A%09%09=
CriteriaBuilder%20builder%20%3D%20em.getCriteriaBuilder()%3B%0A%09%09Criter=
iaQuery%3CLong%3E%20query%20%3D%20builder.createQuery(Long.class)%3B%0A%0A%=
09%09Root%3CT%3E%20root%20%3D%20applySpecificationToCriteria(spec%2C%20quer=
y)%3B%0A%09%09query.select(builder.count(root))%3B%0A%0A%09%09return%20em.c=
reateQuery(query)%3B%0A%09%7D%0A%0A%09%2F**%0A%09%20*%20Applies%20the%20giv=
en%20%7B%40link%20Specification%7D%20to%20the%20given%0A%09%20*%20%7B%40lin=
k%20CriteriaQuery%7D.%0A%09%20*%20%0A%09%20*%20%40param%20spec%0A%09%20*%20=
%20%20%20%20%20%20%20%20%20%20%20can%20be%20%7B%40literal%20null%7D.%0A%09%=
20*%20%40param%20query%0A%09%20*%20%20%20%20%20%20%20%20%20%20%20%20must%20=
not%20be%20%7B%40literal%20null%7D.%0A%09%20*%20%40return%0A%09%20*%2F%0A%0=
9private%20%3CS%3E%20Root%3CT%3E%20applySpecificationToCriteria(Specificati=
on%3CT%3E%20spec%2C%0A%09%09%09CriteriaQuery%3CS%3E%20query)%20%7B%0A%0A%09=
%09Assert.notNull(query)%3B%0A%09%09Root%3CT%3E%20root%20%3D%20query.from(g=
etDomainClass())%3B%0A%0A%09%09CriteriaBuilder%20builder%20%3D%20em.getCrit=
eriaBuilder()%3B%0A%0A%09%09%2F%2F%20%E5%A2%9E%E5%8A%A0%E4%BA%86%E5%88%A0%E=
9%99%A4%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%EF%BC%8C%E4%BB%8E%E8%80%8C%E5%B=
0%86%E8%A2%AB%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E7%9A%84%E6%95%B0%E6%8D%A=
E%E8%BF%87%E6%BB%A4%E6%8E%89%0A%09%09Predicate%20deletedPredicate%20%3D%20n=
ull%3B%0A%09%09if%20(BaseDefaultModel.class.isAssignableFrom(getDomainClass=
()))%20%7B%0A%09%09%09Path%3CBoolean%3E%20deletedPath%20%3D%20root.%3CBoole=
an%3E%20get(DELETEED_FIELD)%3B%0A%09%09%09deletedPredicate%20%3D%20builder.=
isFalse(deletedPath)%3B%0A%09%09%7D%0A%09%09%0A%09%09if%20(spec%20%3D%3D%20=
null)%20%7B%0A%09%09%09%2F%2F%20%E6%B2%A1%E6%9C%89%E5%85%B6%E5%AE%83%E6%9D%=
A1%E4%BB%B6%E7%9A%84%E6%97%B6%E5%80%99%E5%8F%AA%E5%88%A4%E6%96%ADdeleted%E5=
%AD%97%E6%AE%B5%0A%09%09%09query.where(deletedPredicate)%3B%0A%09%09%09%0A%=
09%09%09return%20root%3B%0A%09%09%7D%0A%09%09%0A%09%09Predicate%20predicate=
%20%3D%20spec.toPredicate(root%2C%20query%2C%20builder)%3B%0A%0A%09%09if%20=
(predicate%20!%3D%20null)%20%7B%0A%09%09%09%2F%2F%20%E5%AD%98%E5%9C%A8%E5%8=
5%B6%E5%AE%83%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%97%B6%E5%80%99%E8%BF%98%E9%9C%8=
0%E8%A6%81%E7%BB%84%E5%90%88%E4%B8%80%E4%B8%8B%20deleted%20%E6%9D%A1%E4%BB%=
B6%0A%09%09%09if%20(null%20!%3D%20deletedPredicate)%20%7B%0A%09%09%09%09pre=
dicate%20%3D%20builder.and(predicate%2C%20deletedPredicate)%3B%0A%09%09%09%=
7D%0A%09%09%09query.where(predicate)%3B%0A%09%09%7D%0A%0A%09%09return%20roo=
t%3B%0A%09%7D%0A%0A%09private%20TypedQuery%3CT%3E%20applyLockMode(TypedQuer=
y%3CT%3E%20query)%20%7B%0A%0A%09%09LockModeType%20type%20%3D%20lockMetadata=
Provider%20%3D%3D%20null%20%3F%20null%0A%09%09%09%09%3A%20lockMetadataProvi=
der.getLockModeType()%3B%0A%09%09return%20type%20%3D%3D%20null%20%3F%20quer=
y%20%3A%20query.setLockMode(type)%3B%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non=
-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%20com.someok.common.base.mvc.Base=
Dao%23logicDelete(java.io.Serializable)%0A%09%20*%2F%0A%09%40Override%0A%09=
public%20void%20logicDelete(ID%20id)%20%7B%0A%09%09T%20entity%20%3D%20findO=
ne(id)%3B%0A%09%09if%20(null%20%3D%3D%20entity%20%7C%7C%20!(entity%20instan=
ceof%20BaseDefaultModel))%20%7B%0A%09%09%09return%3B%0A%09%09%7D%0A%09%09Ba=
seDefaultModel%20model%20%3D%20(BaseDefaultModel)%20entity%3B%0A%09%09model=
.setDeleted(true)%3B%0A%0A%09%09this.em.merge(model)%3B%0A%09%7D%0A%0A%09%2=
F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%09%20*%20%40see%20com.someok.c=
ommon.base.mvc.BaseDao%23logicDelete(java.lang.Object)%0A%09%20*%2F%0A%09%4=
0Override%0A%09public%20void%20logicDelete(T%20entity)%20%7B%0A%09%09if%20(=
null%20%3D%3D%20entity%20%7C%7C%20!(entity%20instanceof%20BaseDefaultModel)=
)%20%7B%0A%09%09%09return%3B%0A%09%09%7D%0A%0A%09%09BaseDefaultModel%20mode=
l%20%3D%20(BaseDefaultModel)%20entity%3B%0A%09%09model.setDeleted(true)%3B%=
0A%0A%09%09if%20(StringUtil.isBlank(model.getId()))%20%7B%0A%09%09%09em.per=
sist(model)%3B%0A%09%09%7D%20else%20%7B%0A%09%09%09em.merge(model)%3B%0A%09=
%09%7D%0A%0A%09%7D%0A%0A%09%2F*%0A%09%20*%20(non-Javadoc)%0A%09%20*%20%0A%0=
9%20*%20%40see%20com.someok.common.base.mvc.BaseDao%23logicDelete(java.lang=
.Iterable)%0A%09%20*%2F%0A%09%40Override%0A%09public%20void%20logicDelete(I=
terable%3C%3F%20extends%20T%3E%20entities)%20%7B%0A%09%09if%20(null%20%3D%3=
D%20entities)%20%7B%0A%09%09%09return%3B%0A%09%09%7D%0A%0A%09%09for%20(T%20=
entity%20%3A%20entities)%20%7B%0A%09%09%09logicDelete(entity)%3B%0A%09%09%7=
D%0A%09%7D%0A%0A%09protected%20String%20getCountQueryPlaceholder()%20%7B%0A=
%0A%09%09return%20%22x%22%3B%0A%09%7D%0A%7D%0A" quality=3D"high" allowscrip=
taccess=3D"always" type=3D"application/x-shockwave-flash" pluginspage=3D"ht=
tp://www.macromedia.com/go/getflashplayer">&nbsp;<a href=3D"javascript:void=
()" title=3D"=E6=94=B6=E8=97=8F=E8=BF=99=E6=AE=B5=E4=BB=A3=E7=A0=81" onclic=
k=3D"code_favorites_do_favorite(this);return false;"><img class=3D"star" sr=
c=3D"http://someok.iteye.com/images/icon_star.png" alt=3D"=E6=94=B6=E8=97=
=8F=E4=BB=A3=E7=A0=81"><img class=3D"spinner" src=3D"http://someok.iteye.co=
m/images/spinner.gif" style=3D"display:none"></a></div></div><ol start=3D"1=
" class=3D"dp-j"><li><span><span class=3D"comment">/*</span>&nbsp;</span></=
li><li><span><span class=3D"comment">&nbsp;*&nbsp;$Id$</span>&nbsp;</span><=
/li><li><span><span class=3D"comment">&nbsp;*/</span><span>&nbsp;&nbsp;</sp=
an></span></li><li><span><span class=3D"keyword">package</span><span>&nbsp;=
com.someok.common.base.spring.data;&nbsp;&nbsp;</span></span></li><li><span=
>&nbsp;&nbsp;</span></li><li><span><span class=3D"keyword">import</span><sp=
an>&nbsp;</span><span class=3D"keyword">static</span><span>&nbsp;org.spring=
framework.data.jpa.repository.query.QueryUtils.DELETE_ALL_QUERY_STRING;&nbs=
p;&nbsp;</span></span></li><li><span><span class=3D"keyword">import</span><=
span>&nbsp;</span><span class=3D"keyword">static</span><span>&nbsp;org.spri=
ngframework.data.jpa.repository.query.QueryUtils.applyAndBind;&nbsp;&nbsp;<=
/span></span></li><li><span><span class=3D"keyword">import</span><span>&nbs=
p;</span><span class=3D"keyword">static</span><span>&nbsp;org.springframewo=
rk.data.jpa.repository.query.QueryUtils.getQueryString;&nbsp;&nbsp;</span><=
/span></li><li><span><span class=3D"keyword">import</span><span>&nbsp;</spa=
n><span class=3D"keyword">static</span><span>&nbsp;org.springframework.data=
.jpa.repository.query.QueryUtils.toOrders;&nbsp;&nbsp;</span></span></li><l=
i><span>&nbsp;&nbsp;</span></li><li><span><span class=3D"keyword">import</s=
pan><span>&nbsp;java.io.Serializable;&nbsp;&nbsp;</span></span></li><li><sp=
an><span class=3D"keyword">import</span><span>&nbsp;java.util.ArrayList;&nb=
sp;&nbsp;</span></span></li><li><span><span class=3D"keyword">import</span>=
<span>&nbsp;java.util.Collections;&nbsp;&nbsp;</span></span></li><li><span>=
<span class=3D"keyword">import</span><span>&nbsp;java.util.List;&nbsp;&nbsp=
;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span><span class=
=3D"keyword">import</span><span>&nbsp;javax.persistence.EntityManager;&nbsp=
;&nbsp;</span></span></li><li><span><span class=3D"keyword">import</span><s=
pan>&nbsp;javax.persistence.LockModeType;&nbsp;&nbsp;</span></span></li><li=
><span><span class=3D"keyword">import</span><span>&nbsp;javax.persistence.N=
oResultException;&nbsp;&nbsp;</span></span></li><li><span><span class=3D"ke=
yword">import</span><span>&nbsp;javax.persistence.TypedQuery;&nbsp;&nbsp;</=
span></span></li><li><span><span class=3D"keyword">import</span><span>&nbsp=
;javax.persistence.criteria.CriteriaBuilder;&nbsp;&nbsp;</span></span></li>=
<li><span><span class=3D"keyword">import</span><span>&nbsp;javax.persistenc=
e.criteria.CriteriaQuery;&nbsp;&nbsp;</span></span></li><li><span><span cla=
ss=3D"keyword">import</span><span>&nbsp;javax.persistence.criteria.Path;&nb=
sp;&nbsp;</span></span></li><li><span><span class=3D"keyword">import</span>=
<span>&nbsp;javax.persistence.criteria.Predicate;&nbsp;&nbsp;</span></span>=
</li><li><span><span class=3D"keyword">import</span><span>&nbsp;javax.persi=
stence.criteria.Root;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;<=
/span></li><li><span><span class=3D"keyword">import</span><span>&nbsp;org.s=
pringframework.dao.EmptyResultDataAccessException;&nbsp;&nbsp;</span></span=
></li><li><span><span class=3D"keyword">import</span><span>&nbsp;org.spring=
framework.data.domain.Page;&nbsp;&nbsp;</span></span></li><li><span><span c=
lass=3D"keyword">import</span><span>&nbsp;org.springframework.data.domain.P=
ageImpl;&nbsp;&nbsp;</span></span></li><li><span><span class=3D"keyword">im=
port</span><span>&nbsp;org.springframework.data.domain.Pageable;&nbsp;&nbsp=
;</span></span></li><li><span><span class=3D"keyword">import</span><span>&n=
bsp;org.springframework.data.domain.Sort;&nbsp;&nbsp;</span></span></li><li=
><span><span class=3D"keyword">import</span><span>&nbsp;org.springframework=
.data.jpa.domain.Specification;&nbsp;&nbsp;</span></span></li><li><span><sp=
an class=3D"keyword">import</span><span>&nbsp;org.springframework.data.jpa.=
repository.support.JpaEntityInformation;&nbsp;&nbsp;</span></span></li><li>=
<span><span class=3D"keyword">import</span><span>&nbsp;org.springframework.=
data.jpa.repository.support.JpaEntityInformationSupport;&nbsp;&nbsp;</span>=
</span></li><li><span><span class=3D"keyword">import</span><span>&nbsp;org.=
springframework.data.jpa.repository.support.LockMetadataProvider;&nbsp;&nbs=
p;</span></span></li><li><span><span class=3D"keyword">import</span><span>&=
nbsp;org.springframework.data.jpa.repository.support.SimpleJpaRepository;&n=
bsp;&nbsp;</span></span></li><li><span><span class=3D"keyword">import</span=
><span>&nbsp;org.springframework.transaction.annotation.Transactional;&nbsp=
;&nbsp;</span></span></li><li><span><span class=3D"keyword">import</span><s=
pan>&nbsp;org.springframework.util.Assert;&nbsp;&nbsp;</span></span></li><l=
i><span>&nbsp;&nbsp;</span></li><li><span><span class=3D"keyword">import</s=
pan><span>&nbsp;com.someok.common.base.mvc.BaseDao;&nbsp;&nbsp;</span></spa=
n></li><li><span><span class=3D"keyword">import</span><span>&nbsp;com.someo=
k.common.base.mvc.BaseDefaultModel;&nbsp;&nbsp;</span></span></li><li><span=
><span class=3D"keyword">import</span><span>&nbsp;com.someok.common.utils.S=
tringUtil;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li>=
<li><span><span class=3D"comment">/**</span>&nbsp;</span></li><li><span><sp=
an class=3D"comment">&nbsp;*&nbsp;=E4=BF=AE=E6=94=B9=E8=87=AA</span>&nbsp;<=
/span></li><li><span><span class=3D"comment">&nbsp;*&nbsp;{@link&nbsp;org.s=
pringframework.data.jpa.repository.support.SimpleJpaRepository},</span>&nbs=
p;</span></li><li><span><span class=3D"comment">&nbsp;*&nbsp;=E6=8F=90=E4=
=BE=9B=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E5=8A=9F=E8=83=BD=EF=BC=88logicD=
elete=EF=BC=89=EF=BC=8C=E4=B8=BA=E9=80=82=E5=BA=94=E8=BF=99=E4=B8=AA=E8=A6=
=81=E6=B1=82=EF=BC=8C=E7=9B=B8=E5=85=B3=E7=9A=84=E6=9F=A5=E8=AF=A2=E4=B9=9F=
=E9=83=BD=E5=81=9A=E4=BA=86=E4=BF=AE=E6=94=B9=E3=80=82</span>&nbsp;</span><=
/li><li><span><span class=3D"comment">&nbsp;*&nbsp;</span>&nbsp;</span></li=
><li><span><span class=3D"comment">&nbsp;*&nbsp;=E9=9C=80=E8=A6=81=E6=B3=A8=
=E6=84=8F=E7=9A=84=E6=98=AF=E9=82=A3=E4=BA=9B&nbsp;delete&nbsp;=E6=96=B9=E6=
=B3=95=E4=BB=8D=E7=84=B6=E6=98=AF=E7=89=A9=E7=90=86=E5=88=A0=E9=99=A4=EF=BC=
=8C=E8=80=8C=E6=96=B0=E5=A2=9E=E7=9A=84=E9=82=A3=E4=BA=9B&nbsp;logic&nbsp;=
=E5=BC=80=E5=A4=B4=E7=9A=84=E6=96=B9=E6=B3=95=E6=89=8D=E6=98=AF=E9=80=BB=E8=
=BE=91=E5=88=A0=E9=99=A4=EF=BC=8C&nbsp;=E7=94=A8=E6=97=B6=E5=80=99=E9=9C=80=
=E8=A6=81=E6=B3=A8=E6=84=8F=E8=BF=99=E7=82=B9.</span>&nbsp;</span></li><li>=
<span><span class=3D"comment">&nbsp;*&nbsp;</span>&nbsp;</span></li><li><sp=
an><span class=3D"comment">&nbsp;*&nbsp;@author&nbsp;wangjxe</span>&nbsp;</=
span></li><li><span><span class=3D"comment">&nbsp;*&nbsp;</span>&nbsp;</spa=
n></li><li><span><span class=3D"comment">&nbsp;*/</span><span>&nbsp;&nbsp;<=
/span></span></li><li><span><span class=3D"annotation">@org</span><span>.sp=
ringframework.stereotype.Repository&nbsp;&nbsp;</span></span></li><li><span=
><span class=3D"annotation">@Transactional</span><span>(readOnly&nbsp;=3D&n=
bsp;</span><span class=3D"keyword">true</span><span>)&nbsp;&nbsp;</span></s=
pan></li><li><span><span class=3D"keyword">public</span><span>&nbsp;</span>=
<span class=3D"keyword">class</span><span>&nbsp;CustomSimpleJpaRepository&l=
t;T,&nbsp;ID&nbsp;</span><span class=3D"keyword">extends</span><span>&nbsp;=
Serializable&gt;&nbsp;</span><span class=3D"keyword">implements</span><span=
>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;BaseDao&lt;T,&nbsp;ID&gt;&nbsp;{&nbsp;&nbsp;</span></li><li>=
<span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"comment">/**</span>&nbsp;</span></li><li><span><span class=3D"comment">=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=
=E5=AD=97=E6=AE=B5=E5=90=8D.</span>&nbsp;</span></li><li><span><span class=
=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</spa=
n></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">pub=
lic</span><span>&nbsp;</span><span class=3D"keyword">final</span><span>&nbs=
p;</span><span class=3D"keyword">static</span><span>&nbsp;String&nbsp;DELET=
EED_FIELD&nbsp;=3D&nbsp;</span><span class=3D"string">"deleted"</span><span=
>;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><spa=
n>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;=
</span><span class=3D"keyword">static</span><span>&nbsp;</span><span class=
=3D"keyword">final</span><span>&nbsp;String&nbsp;COUNT_QUERY_STRING&nbsp;=
=3D&nbsp;</span><span class=3D"string">"select&nbsp;count(%s)&nbsp;from&nbs=
p;%s&nbsp;x&nbsp;where&nbsp;x.deleted&nbsp;=3D&nbsp;false"</span><span>;&nb=
sp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"keyword">public</span><span>&nbsp;</span><span class=3D"keyword">static=
</span><span>&nbsp;</span><span class=3D"keyword">final</span><span>&nbsp;S=
tring&nbsp;EXISTS_QUERY_STRING&nbsp;=3D&nbsp;</span><span class=3D"string">=
"select&nbsp;count(%s)&nbsp;from&nbsp;%s&nbsp;x&nbsp;where&nbsp;x.%s&nbsp;=
=3D&nbsp;:id&nbsp;and&nbsp;x.deleted&nbsp;=3D&nbsp;false"</span><span>;&nbs=
p;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbs=
p;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">private</span><span>&nbsp;</spa=
n><span class=3D"keyword">final</span><span>&nbsp;JpaEntityInformation&lt;T=
,&nbsp;?&gt;&nbsp;entityInformation;&nbsp;&nbsp;</span></span></li><li><spa=
n>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">private</span><span>&nbsp=
;</span><span class=3D"keyword">final</span><span>&nbsp;EntityManager&nbsp;=
em;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span c=
lass=3D"comment">//&nbsp;private&nbsp;final&nbsp;PersistenceProvider&nbsp;p=
rovider;</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;<=
/span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">privat=
e</span><span>&nbsp;LockMetadataProvider&nbsp;lockMetadataProvider;&nbsp;&n=
bsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"comment">/**</span>&nbsp;</span></li><li><sp=
an><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Creates&nbs=
p;a&nbsp;new&nbsp;{@link&nbsp;SimpleJpaRepository}&nbsp;to&nbsp;manage&nbsp=
;objects&nbsp;of&nbsp;the&nbsp;given</span>&nbsp;</span></li><li><span><spa=
n class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;{@link&nbsp;JpaEnt=
ityInformation}.</span>&nbsp;</span></li><li><span><span class=3D"comment">=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><sp=
an class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;entit=
yInformation</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;must&nbsp;not&nbsp;be&nbsp;{@literal&nbsp;null}.</s=
pan>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;*&nbsp;@param&nbsp;entityManager</span>&nbsp;</span></li><li><sp=
an><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;must&nbsp;not&nbsp;b=
e&nbsp;{@literal&nbsp;null}.</span>&nbsp;</span></li><li><span><span class=
=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</spa=
n></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">pub=
lic</span><span>&nbsp;CustomSimpleJpaRepository(&nbsp;&nbsp;</span></span><=
/li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;JpaEntityInformation&lt;T,&nbsp;?&gt;&nbsp;entityInformation,&nb=
sp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;EntityManager&nbsp;entityManager)&nbsp;{&nbsp;&=
nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.notNull(entityInformation);&nbsp;&=
nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
Assert.notNull(entityManager);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp=
;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"keyword">this</span><span>.entityInformation&nbsp;=3D&nbsp;entit=
yInformation;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">this</span><span>.em&nbs=
p;=3D&nbsp;entityManager;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">//&nbsp;this=
.provider&nbsp;=3D&nbsp;PersistenceProvider.fromEntityManager(entityManager=
);</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&=
nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/**</span>&nbsp;</span></li>=
<li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Crea=
tes&nbsp;a&nbsp;new&nbsp;{@link&nbsp;SimpleJpaRepository}&nbsp;to&nbsp;mana=
ge&nbsp;objects&nbsp;of&nbsp;the&nbsp;given</span>&nbsp;</span></li><li><sp=
an><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;domain&nbsp=
;type.</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span class=
=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;domainClass</=
span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;must&nbsp;not&nbsp;be&nbsp;{@literal&nbsp;null}.</span>&nbsp;</sp=
an></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&n=
bsp;@param&nbsp;em</span>&nbsp;</span></li><li><span><span class=3D"comment=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;must&nbsp;not&nbsp;be&nbsp;{@literal&nbsp;nul=
l}.</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;Cust=
omSimpleJpaRepository(Class&lt;T&gt;&nbsp;domainClass,&nbsp;EntityManager&n=
bsp;em)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">this</span><span>(JpaEn=
tityInformationSupport.getMetadata(domainClass,&nbsp;em),&nbsp;em);&nbsp;&n=
bsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</spa=
n></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"comment">/**</span>&nbsp;</span></li><li><span><span class=
=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Configures&nbsp;a&nbsp;cu=
stom&nbsp;{@link&nbsp;LockMetadataProvider}&nbsp;to&nbsp;be&nbsp;used&nbsp;=
to&nbsp;detect</span>&nbsp;</span></li><li><span><span class=3D"comment">&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;{@link&nbsp;LockModeType}s&nbsp;to&nbsp;=
be&nbsp;applied&nbsp;to&nbsp;queries.</span>&nbsp;</span></li><li><span><sp=
an class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</sp=
an></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&n=
bsp;@param&nbsp;lockMetadataProvider</span>&nbsp;</span></li><li><span><spa=
n class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbs=
p;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keywo=
rd">public</span><span>&nbsp;</span><span class=3D"keyword">void</span><spa=
n>&nbsp;setLockMetadataProvider(&nbsp;&nbsp;</span></span></li><li><span>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LockM=
etadataProvider&nbsp;lockMetadataProvider)&nbsp;{&nbsp;&nbsp;</span></li><l=
i><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyw=
ord">this</span><span>.lockMetadataProvider&nbsp;=3D&nbsp;lockMetadataProvi=
der;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp=
;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"keyword">private</span><span>&nbsp;Class&lt;T&gt=
;&nbsp;getDomainClass()&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return<=
/span><span>&nbsp;entityInformation.getJavaType();&nbsp;&nbsp;</span></span=
></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>=
&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"ke=
yword">private</span><span>&nbsp;String&nbsp;getDeleteAllQueryString()&nbsp=
;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&nbsp;getQuerySt=
ring(DELETE_ALL_QUERY_STRING,&nbsp;&nbsp;</span></span></li><li><span>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;entityInformation.getEntityName());&nbsp;&nbsp;</span></li>=
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;=
&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword"=
>private</span><span>&nbsp;String&nbsp;getCountQueryString()&nbsp;{&nbsp;&n=
bsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;countQuery&nbsp;=3D&nbs=
p;String.format(COUNT_QUERY_STRING,&nbsp;&nbsp;</span></li><li><span>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;getCountQueryPlaceholder(),&nbsp;<span class=3D"string">"%s"=
</span><span>);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&nb=
sp;getQueryString(countQuery,&nbsp;entityInformation.getEntityName());&nbsp=
;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</=
span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nb=
sp;<span class=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=
=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp=
;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;*&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;org.springframework.data.repository=
.CrudRepository#delete(java.io.</span>&nbsp;</span></li><li><span><span cla=
ss=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Serializable)</span>&nb=
sp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"annotation">@Transactional</span><span>&nbsp;&nbsp;=
</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword=
">public</span><span>&nbsp;</span><span class=3D"keyword">void</span><span>=
&nbsp;delete(ID&nbsp;id)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nb=
sp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;Assert.notNull(id,&nbsp;<span class=3D"string">"The&nbsp;given&nbsp;id&=
nbsp;must&nbsp;not&nbsp;be&nbsp;null!"</span><span>);&nbsp;&nbsp;</span></s=
pan></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">if</span><span>&nbsp;(!ex=
ists(id))&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keywor=
d">throw</span><span>&nbsp;</span><span class=3D"keyword">new</span><span>&=
nbsp;EmptyResultDataAccessException(String.format(&nbsp;&nbsp;</span></span=
></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"string">"No&nbsp;%s&nbsp;entity&nbsp;with&nbsp;id&nbsp;%s&nbsp;exists!"</s=
pan><span>,&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;entityInformation.getJavaType(),&nbsp;id),&nbsp;<span=
 class=3D"number">1</span><span>);&nbsp;&nbsp;</span></span></li><li><span>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><l=
i><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;delete(findOne(id));&nbsp;&nbsp;</span></li><li><span>&nbsp;=
&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></l=
i><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp;=
</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D"comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><spa=
n><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see</span>&=
nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;*&nbsp;org.springframework.data.repository.CrudRepository#delete(java=
.lang.Object</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;)</span>&nbsp;</span></li><li><span><span =
class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;=
</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"annotat=
ion">@Transactional</span><span>&nbsp;&nbsp;</span></span></li><li><span>&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;</sp=
an><span class=3D"keyword">void</span><span>&nbsp;delete(T&nbsp;entity)&nbs=
p;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.notNull(entity,&n=
bsp;<span class=3D"string">"The&nbsp;entity&nbsp;must&nbsp;not&nbsp;be&nbsp=
;null!"</span><span>);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;em.remove(em.contains(entity)&nbsp;?&nb=
sp;entity&nbsp;:&nbsp;em.merge(entity));&nbsp;&nbsp;</span></li><li><span>&=
nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</spa=
n></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&=
nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D=
"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li=
><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see</s=
pan>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;*&nbsp;org.springframework.data.repository.CrudRepository#delete=
(java.lang.Iterable</span>&nbsp;</span></li><li><span><span class=3D"commen=
t">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;)</span>&nbsp;</span></li><li><span=
><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp=
;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
annotation">@Transactional</span><span>&nbsp;&nbsp;</span></span></li><li><=
span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nb=
sp;</span><span class=3D"keyword">void</span><span>&nbsp;delete(Iterable&lt=
;?&nbsp;</span><span class=3D"keyword">extends</span><span>&nbsp;T&gt;&nbsp=
;entities)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</spa=
n></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.not=
Null(entities,&nbsp;<span class=3D"string">"The&nbsp;given&nbsp;Iterable&nb=
sp;of&nbsp;entities&nbsp;not&nbsp;be&nbsp;null!"</span><span>);&nbsp;&nbsp;=
</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">for</span><span=
>&nbsp;(T&nbsp;entity&nbsp;:&nbsp;entities)&nbsp;{&nbsp;&nbsp;</span></span=
></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;delete(entity);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp=
;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></=
li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp=
;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D"com=
ment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><sp=
an><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see</span>=
&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;*&nbsp;org.springframework.data.jpa.repository.JpaRepository#deleteI=
nBatch(java</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;.lang.Iterable)</span>&nbsp;</span></li><li=
><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span=
>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"annotation">@Transactional</span><span>&nbsp;&nbsp;</span></span></li=
><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><sp=
an>&nbsp;</span><span class=3D"keyword">void</span><span>&nbsp;deleteInBatc=
h(Iterable&lt;T&gt;&nbsp;entities)&nbsp;{&nbsp;&nbsp;</span></span></li><li=
><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;Assert.notNull(entities,&nbsp;<span class=3D"string">"The&nbs=
p;given&nbsp;Iterable&nbsp;of&nbsp;entities&nbsp;not&nbsp;be&nbsp;null!"</s=
pan><span>);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></l=
i><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
keyword">if</span><span>&nbsp;(!entities.iterator().hasNext())&nbsp;{&nbsp;=
&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>=
;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><=
li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyAndBind(&nbsp=
;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getQueryString(DELETE_ALL=
_QUERY_STRING,&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityInformation.getEntityName()=
),&nbsp;entities,&nbsp;em)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;.executeUpdate();&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp;</span></li>=
<li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non=
-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span clas=
s=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;org.springfram=
ework.data.repository.Repository#deleteAll()</span>&nbsp;</span></li><li><s=
pan><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&n=
bsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"annotation">@Transactional</span><span>&nbsp;&nbsp;</span></span></li><=
li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span=
>&nbsp;</span><span class=3D"keyword">void</span><span>&nbsp;deleteAll()&nb=
sp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><s=
pan>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword"=
>for</span><span>&nbsp;(T&nbsp;element&nbsp;:&nbsp;findAll())&nbsp;{&nbsp;&=
nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete(element);&nbsp;&nbsp;</span></li><li>=
<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span><=
/li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&n=
bsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comm=
ent">/*</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span=
><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;=
</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;*&nbsp;@see</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.data.jpa.repository.Jp=
aRepository#deleteAllInBatch()</span>&nbsp;</span></li><li><span><span clas=
s=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</sp=
an></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"annotation"=
>@Transactional</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;</span><=
span class=3D"keyword">void</span><span>&nbsp;deleteAllInBatch()&nbsp;{&nbs=
p;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;em.createQuery(getDeleteAllQueryString()).executeUpdate();&nbsp;&=
nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li=
><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=3D"comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span><=
/li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;=
</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;*&nbsp;@see</span>&nbsp;</span></li><li><span><span class=3D"=
comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.data.repo=
sitory.Repository#readById(java.io.Serializable</span>&nbsp;</span></li><li=
><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;)</span=
>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;T&nbsp;findOn=
e(ID&nbsp;id)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</=
span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.=
notNull(id,&nbsp;<span class=3D"string">"The&nbsp;given&nbsp;id&nbsp;must&n=
bsp;not&nbsp;be&nbsp;null!"</span><span>);&nbsp;&nbsp;</span></span></li><l=
i><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyw=
ord">return</span><span>&nbsp;em.find(getDomainClass(),&nbsp;id);&nbsp;&nbs=
p;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span>=
</li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<s=
pan class=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=3D"c=
omment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</sp=
an></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&n=
bsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;org.springframework.data.repository.Crud=
Repository#exists(java.io.</span>&nbsp;</span></li><li><span><span class=3D=
"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Serializable)</span>&nbsp;</=
span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*=
/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"keyword">public</span><span>&nbsp;</span><span class=3D"=
keyword">boolean</span><span>&nbsp;exists(ID&nbsp;id)&nbsp;{&nbsp;&nbsp;</s=
pan></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.notNull(id,&nbsp;<span class=3D"str=
ing">"The&nbsp;given&nbsp;id&nbsp;must&nbsp;not&nbsp;be&nbsp;null!"</span><=
span>);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li=
><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keywo=
rd">if</span><span>&nbsp;(entityInformation.getIdAttribute()&nbsp;!=3D&nbsp=
;</span><span class=3D"keyword">null</span><span>)&nbsp;{&nbsp;&nbsp;</span=
></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;placehold=
er&nbsp;=3D&nbsp;getCountQueryPlaceholder();&nbsp;&nbsp;</span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
String&nbsp;entityName&nbsp;=3D&nbsp;entityInformation.getEntityName();&nbs=
p;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;idAttributeName&nbsp;=3D&nbsp;entity=
Information.getIdAttribute()&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.getName();&nbsp;&nbsp;</span></li><li><spa=
n>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S=
tring&nbsp;existsQuery&nbsp;=3D&nbsp;String.format(EXISTS_QUERY_STRING,&nbs=
p;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
placeholder,&nbsp;entityName,&nbsp;idAttributeName);&nbsp;&nbsp;</span></li=
><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TypedQuery&lt;Long&gt;&nbsp;query=
&nbsp;=3D&nbsp;em.createQuery(existsQuery,&nbsp;Long.<span class=3D"keyword=
">class</span><span>);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query.setParame=
ter(<span class=3D"string">"id"</span><span>,&nbsp;id);&nbsp;&nbsp;</span><=
/span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword"=
>return</span><span>&nbsp;query.getSingleResult()&nbsp;=3D=3D&nbsp;</span><=
span class=3D"number">1</span><span>;&nbsp;&nbsp;</span></span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=3D"ke=
yword">else</span><span>&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"keyword">return</span><span>&nbsp;findOne(id)&nbsp;!=3D&nbsp;</spa=
n><span class=3D"keyword">null</span><span>;&nbsp;&nbsp;</span></span></li>=
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</sp=
an></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><spa=
n>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
comment">/*</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><=
span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&n=
bsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;*&nbsp;@see&nbsp;org.springframework.data.jpa.repository.JpaRepository=
#findAll()</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><=
span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nb=
sp;List&lt;T&gt;&nbsp;findAll()&nbsp;{&nbsp;&nbsp;</span></span></li><li><s=
pan>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword"=
>return</span><span>&nbsp;getQuery(</span><span class=3D"keyword">null</spa=
n><span>,&nbsp;(Sort)&nbsp;</span><span class=3D"keyword">null</span><span>=
).getResultList();&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbs=
p;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><spa=
n>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp;</span></l=
i><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(n=
on-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span cl=
ass=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;org.springfr=
amework.data.repository.CrudRepository#findAll(ID[])</span>&nbsp;</span></l=
i><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span>=
<span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"keyword">public</span><span>&nbsp;List&lt;T&gt;&nbsp;findAll(Ite=
rable&lt;ID&gt;&nbsp;ids)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&n=
bsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"keyword">return</span><span>&nbsp;getQuery(</span><span=
 class=3D"keyword">new</span><span>&nbsp;Specification&lt;T&gt;()&nbsp;{&nb=
sp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><sp=
an>&nbsp;Predicate&nbsp;toPredicate(Root&lt;T&gt;&nbsp;root,&nbsp;CriteriaQ=
uery&lt;?&gt;&nbsp;query,&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CriteriaBuilder&nbsp;cb)&nbsp;{&nbsp;&n=
bsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Path&lt;?&gt;&nbsp;path&nbsp=
;=3D&nbsp;root.get(entityInformation.getIdAttribute());&nbsp;&nbsp;</span><=
/li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><sp=
an>&nbsp;path.in(cb.parameter(List.</span><span class=3D"keyword">class</sp=
an><span>,&nbsp;</span><span class=3D"string">"ids"</span><span>));&nbsp;&n=
bsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;(Sort)&nbsp;<span class=3D"ke=
yword">null</span><span>).setParameter(</span><span class=3D"string">"ids"<=
/span><span>,&nbsp;ids).getResultList();&nbsp;&nbsp;</span></span></li><li>=
<span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbs=
p;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*<=
/span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span c=
lass=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span><=
/li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;=
@see&nbsp;org.springframework.data.jpa.repository.JpaRepository#findAll(org=
.</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;*&nbsp;springframework.data.domain.Sort)</span>&nbsp;</span>=
</li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</sp=
an><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"keyword">public</span><span>&nbsp;List&lt;T&gt;&nbsp;findAll(=
Sort&nbsp;sort)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><s=
pan>&nbsp;getQuery(</span><span class=3D"keyword">null</span><span>,&nbsp;s=
ort).getResultList();&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&=
nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><=
span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp;</span>=
</li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp=
;(non-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D"comment">&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span=
 class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see</span>&nbsp;</=
span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*=
&nbsp;org.springframework.data.repository.PagingAndSortingRepository#findAl=
l</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;*&nbsp;(org.springframework.data.domain.Pageable)</span>&nbs=
p;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;Page&lt;T&gt;&nbsp=
;findAll(Pageable&nbsp;pageable)&nbsp;{&nbsp;&nbsp;</span></span></li><li><=
span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"keyword">if</span><span>&nbsp;(</span><span clas=
s=3D"keyword">null</span><span>&nbsp;=3D=3D&nbsp;pageable)&nbsp;{&nbsp;&nbs=
p;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&nbs=
p;</span><span class=3D"keyword">new</span><span>&nbsp;PageImpl&lt;T&gt;(fi=
ndAll());&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</spa=
n></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"keyword">return</span><span>&nbsp;findAll(</span><span class=3D"keywor=
d">null</span><span>,&nbsp;pageable);&nbsp;&nbsp;</span></span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;<=
/span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</sp=
an>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span clas=
s=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li=
><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@se=
e</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;*&nbsp;org.springframework.data.jpa.repository.JpaSpecificat=
ionExecutor#findOne</span>&nbsp;</span></li><li><span><span class=3D"commen=
t">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(org.springframework.data.jpa.domai=
n.Specification)</span>&nbsp;</span></li><li><span><span class=3D"comment">=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li=
><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><sp=
an>&nbsp;T&nbsp;findOne(Specification&lt;T&gt;&nbsp;spec)&nbsp;{&nbsp;&nbsp=
;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">try</span><spa=
n>&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">retu=
rn</span><span>&nbsp;getQuery(spec,&nbsp;(Sort)&nbsp;</span><span class=3D"=
keyword">null</span><span>).getSingleResult();&nbsp;&nbsp;</span></span></l=
i><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span cl=
ass=3D"keyword">catch</span><span>&nbsp;(NoResultException&nbsp;e)&nbsp;{&n=
bsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><s=
pan>&nbsp;</span><span class=3D"keyword">null</span><span>;&nbsp;&nbsp;</sp=
an></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&=
nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</spa=
n></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=3D=
"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</=
span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*=
&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;*&nbsp;@see</span>&nbsp;</span></li><li><span><span cla=
ss=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.dat=
a.jpa.repository.JpaSpecificationExecutor#findAll</span>&nbsp;</span></li><=
li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(org.=
springframework.data.jpa.domain.Specification)</span>&nbsp;</span></li><li>=
<span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>=
&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"keyword">public</span><span>&nbsp;List&lt;T&gt;&nbsp;findAll(Specifica=
tion&lt;T&gt;&nbsp;spec)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return=
</span><span>&nbsp;getQuery(spec,&nbsp;(Sort)&nbsp;</span><span class=3D"ke=
yword">null</span><span>).getResultList();&nbsp;&nbsp;</span></span></li><l=
i><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&n=
bsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/=
*</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span=
 class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span=
></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbs=
p;@see</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.data.jpa.repository.JpaSpeci=
ficationExecutor#findAll</span>&nbsp;</span></li><li><span><span class=3D"c=
omment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(org.springframework.data.jpa.=
domain.Specification,</span>&nbsp;</span></li><li><span><span class=3D"comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.data.domain.P=
ageable)</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp=
;Page&lt;T&gt;&nbsp;findAll(Specification&lt;T&gt;&nbsp;spec,&nbsp;Pageable=
&nbsp;pageable)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;=
</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Typed=
Query&lt;T&gt;&nbsp;query&nbsp;=3D&nbsp;getQuery(spec,&nbsp;pageable);&nbsp=
;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"keyword">return</span><span>&nbsp;pageable&nbsp;=3D=3D&nbs=
p;</span><span class=3D"keyword">null</span><span>&nbsp;?&nbsp;</span><span=
 class=3D"keyword">new</span><span>&nbsp;PageImpl&lt;T&gt;(query.getResultL=
ist())&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;=
readPage(query,&nbsp;pageable,&nbsp;spec);&nbsp;&nbsp;</span></li><li><span=
>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</s=
pan></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span=
>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span class=
=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li>=
<li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see=
</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;*&nbsp;org.springframework.data.jpa.repository.JpaSpecificati=
onExecutor#findAll</span>&nbsp;</span></li><li><span><span class=3D"comment=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(org.springframework.data.jpa.domain=
.Specification,</span>&nbsp;</span></li><li><span><span class=3D"comment">&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.data.domain.Sort)</=
span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;List&lt;T=
&gt;&nbsp;findAll(Specification&lt;T&gt;&nbsp;spec,&nbsp;Sort&nbsp;sort)&nb=
sp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><s=
pan>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword"=
>return</span><span>&nbsp;getQuery(spec,&nbsp;sort).getResultList();&nbsp;&=
nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</sp=
an></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=
=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp=
;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;*&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;org.springframework.data.repository=
.CrudRepository#count()</span>&nbsp;</span></li><li><span><span class=3D"co=
mment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></sp=
an></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</s=
pan><span>&nbsp;</span><span class=3D"keyword">long</span><span>&nbsp;count=
()&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&nbsp;em.=
createQuery(getCountQueryString(),&nbsp;Long.</span><span class=3D"keyword"=
>class</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;.getSingleResult();&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp;</span></=
li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(=
non-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span c=
lass=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see</span>&nbsp;</sp=
an></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&n=
bsp;org.springframework.data.jpa.repository.JpaSpecificationExecutor#count<=
/span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;*&nbsp;(org.springframework.data.jpa.domain.Specification)</sp=
an>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nb=
sp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;</span><spa=
n class=3D"keyword">long</span><span>&nbsp;count(Specification&lt;T&gt;&nbs=
p;spec)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span><=
/li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"keyword">return</span><span>&nbsp;getCountQuery(spec).getSingleResult()=
;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&n=
bsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"comment">/*</span>&nbsp;</span></li><li><span><span=
 class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span=
>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see</span>&nbsp;</span></li><li><span>=
<span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springfram=
ework.data.repository.CrudRepository#save(java.lang.Object)</span>&nbsp;</s=
pan></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/=
</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nb=
sp;<span class=3D"annotation">@Transactional</span><span>&nbsp;&nbsp;</span=
></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">publ=
ic</span><span>&nbsp;&lt;S&nbsp;</span><span class=3D"keyword">extends</spa=
n><span>&nbsp;T&gt;&nbsp;S&nbsp;save(S&nbsp;entity)&nbsp;{&nbsp;&nbsp;</spa=
n></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">if</span><span>&nbsp=
;(entityInformation.isNew(entity))&nbsp;{&nbsp;&nbsp;</span></span></li><li=
><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;em.persist(entity);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keywor=
d">return</span><span>&nbsp;entity;&nbsp;&nbsp;</span></span></li><li><span=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=3D"keyw=
ord">else</span><span>&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"keyword">return</span><span>&nbsp;em.merge(entity);&nbsp;&nbsp;</spa=
n></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&n=
bsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span=
></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=3D"=
comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</s=
pan></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&=
nbsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;*&nbsp;@see</span>&nbsp;</span></li><li><span><span clas=
s=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.data=
.jpa.repository.JpaRepository#saveAndFlush(java</span>&nbsp;</span></li><li=
><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;.lang.O=
bject)</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span=
>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"annotation">@Transactional</span><s=
pan>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"keyword">public</span><span>&nbsp;T&nbsp;saveAndFlush(T&nbsp;entit=
y)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><=
li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T&nbsp;result&nbsp=
;=3D&nbsp;save(entity);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flush();&nbsp;&nbsp;</span></li><li><span>&nb=
sp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"keyword">return</span><span>&nbsp;result;&nbsp;&nbsp;</s=
pan></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>=
<li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span c=
lass=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=3D"commen=
t">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></=
li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;<=
/span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;*&nbsp;@see</span>&nbsp;</span></li><li><span><span class=3D"c=
omment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;org.springframework.data.jpa.r=
epository.JpaRepository#save(java.lang.</span>&nbsp;</span></li><li><span><=
span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Iterable)</span=
>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;<span class=3D"annotation">@Transactional</span><span>&nbsp;&n=
bsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"key=
word">public</span><span>&nbsp;&lt;S&nbsp;</span><span class=3D"keyword">ex=
tends</span><span>&nbsp;T&gt;&nbsp;List&lt;S&gt;&nbsp;save(Iterable&lt;S&gt=
;&nbsp;entities)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp=
;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List=
&lt;S&gt;&nbsp;result&nbsp;=3D&nbsp;<span class=3D"keyword">new</span><span=
>&nbsp;ArrayList&lt;S&gt;();&nbsp;&nbsp;</span></span></li><li><span>&nbsp;=
&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"keyword">if</span><span>&nbsp;(entities&nbsp;=3D=3D&nbsp;</=
span><span class=3D"keyword">null</span><span>)&nbsp;{&nbsp;&nbsp;</span></=
span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&nbsp;result;&n=
bsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li>=
<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keywor=
d">for</span><span>&nbsp;(S&nbsp;entity&nbsp;:&nbsp;entities)&nbsp;{&nbsp;&=
nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.add(save(entity));&nbsp;&nbsp;</span>=
</li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp=
;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&n=
bsp;result;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp=
;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp;</span></li><li><=
span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Java=
doc)</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"=
comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;org.springframework=
.data.jpa.repository.JpaRepository#flush()</span>&nbsp;</span></li><li><spa=
n><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbs=
p;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"annotation">@Transactional</span><span>&nbsp;&nbsp;</span></span></li><li>=
<span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</span><span>&n=
bsp;</span><span class=3D"keyword">void</span><span>&nbsp;flush()&nbsp;{&nb=
sp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;em.flush();&nbsp;&nbsp;</span>=
</li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&=
nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"com=
ment">/**</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Reads&nbsp;the&nbsp;given&nbsp;{@link&nbsp;Ty=
pedQuery}&nbsp;into&nbsp;a&nbsp;{@link&nbsp;Page}&nbsp;applying&nbsp;the&nb=
sp;given</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;*&nbsp;{@link&nbsp;Pageable}&nbsp;and&nbsp;{@link&nbs=
p;Specification}.</span>&nbsp;</span></li><li><span><span class=3D"comment"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><s=
pan class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;quer=
y</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;must&nbsp;not&nbsp;be&nbsp;{@literal&nbsp;null}.</span>&nbsp;<=
/span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
*&nbsp;@param&nbsp;spec</span>&nbsp;</span></li><li><span><span class=3D"co=
mment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;can&nbsp;be&nbsp;{@literal&nbsp;null}.</=
span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;*&nbsp;@param&nbsp;pageable</span>&nbsp;</span></li><li><span><=
span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;can&nbsp;be&nbsp;{@liter=
al&nbsp;null}.</span>&nbsp;</span></li><li><span><span class=3D"comment">&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return</span>&nbsp;</span></li><li><spa=
n><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbs=
p;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"keyword">private</span><span>&nbsp;Page&lt;T&gt;&nbsp;readPage(TypedQuery&=
lt;T&gt;&nbsp;query,&nbsp;Pageable&nbsp;pageable,&nbsp;&nbsp;</span></span>=
</li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;Specification&lt;T&gt;&nbsp;spec)&nbsp;{&nbsp;&nbsp;</span></li=
><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;query.setFirstResult(pageable.getOffset());&nbsp;&nbsp;</=
span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query.s=
etMaxResults(pageable.getPageSize());&nbsp;&nbsp;</span></li><li><span>&nbs=
p;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;Long&nbsp;total&nbsp;=3D&nbsp;getCountQuery(spec).getSingleResult();&nbs=
p;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;List&lt;T&gt;&nbsp;content&nbsp;=3D&nbsp;total&nbsp;&gt;&nbsp;pageable.g=
etOffset()&nbsp;?&nbsp;query.getResultList()&nbsp;&nbsp;</span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Collections.&lt;T&gt;&nbsp;emptyList();&nbsp=
;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><s=
pan>&nbsp;</span><span class=3D"keyword">new</span><span>&nbsp;PageImpl&lt;=
T&gt;(content,&nbsp;pageable,&nbsp;total);&nbsp;&nbsp;</span></span></li><l=
i><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&n=
bsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/=
**</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;*&nbsp;Creates&nbsp;a&nbsp;new&nbsp;{@link&nbsp;TypedQuery}=
&nbsp;from&nbsp;the&nbsp;given&nbsp;{@link&nbsp;Specification}.</span>&nbsp=
;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;*&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;spec</span>&nbsp;</span></li><li>=
<span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;can&nbsp;be&nbsp;=
{@literal&nbsp;null}.</span>&nbsp;</span></li><li><span><span class=3D"comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;pageable</span>&nbsp;=
</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=
an&nbsp;be&nbsp;{@literal&nbsp;null}.</span>&nbsp;</span></li><li><span><sp=
an class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return</span>&nb=
sp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"keyword">private</span><span>&nbsp;TypedQuery&lt;T&=
gt;&nbsp;getQuery(Specification&lt;T&gt;&nbsp;spec,&nbsp;Pageable&nbsp;page=
able)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></l=
i><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sort&nbsp;sort&=
nbsp;=3D&nbsp;pageable&nbsp;=3D=3D&nbsp;<span class=3D"keyword">null</span>=
<span>&nbsp;?&nbsp;</span><span class=3D"keyword">null</span><span>&nbsp;:&=
nbsp;pageable.getSort();&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span>=
<span>&nbsp;getQuery(spec,&nbsp;sort);&nbsp;&nbsp;</span></span></li><li><s=
pan>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;=
</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/**</=
span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;*&nbsp;Creates&nbsp;a&nbsp;{@link&nbsp;TypedQuery}&nbsp;for&nbs=
p;the&nbsp;given&nbsp;{@link&nbsp;Specification}&nbsp;and</span>&nbsp;</spa=
n></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nb=
sp;{@link&nbsp;Sort}.</span>&nbsp;</span></li><li><span><span class=3D"comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><spa=
n><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;=
spec</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;can&nbsp;be&nbsp;{@literal&nbsp;null}.</span>&nbsp;</span><=
/li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;=
@param&nbsp;sort</span>&nbsp;</span></li><li><span><span class=3D"comment">=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;can&nbsp;be&nbsp;{@literal&nbsp;null}.</span>&n=
bsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;*&nbsp;@return</span>&nbsp;</span></li><li><span><span class=3D"commen=
t">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span><=
/li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">private</span=
><span>&nbsp;TypedQuery&lt;T&gt;&nbsp;getQuery(Specification&lt;T&gt;&nbsp;=
spec,&nbsp;Sort&nbsp;sort)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&=
nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;CriteriaBuilder&nbsp;builder&nbsp;=3D&nbsp;em.getCriteriaBuilder();&n=
bsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;CriteriaQuery&lt;T&gt;&nbsp;query&nbsp;=3D&nbsp;builder.createQuery(ge=
tDomainClass());&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><=
li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Root&lt;T&gt;&nbsp=
;root&nbsp;=3D&nbsp;applySpecificationToCriteria(spec,&nbsp;query);&nbsp;&n=
bsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q=
uery.select(root);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li=
><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"k=
eyword">if</span><span>&nbsp;(sort&nbsp;!=3D&nbsp;</span><span class=3D"key=
word">null</span><span>)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query.=
orderBy(toOrders(sort,&nbsp;root,&nbsp;builder));&nbsp;&nbsp;</span></li><l=
i><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span=
></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&nbsp;app=
lyLockMode(em.createQuery(query));&nbsp;&nbsp;</span></span></li><li><span>=
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</sp=
an></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/**</span=
>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;*&nbsp;Creates&nbsp;a&nbsp;new&nbsp;count&nbsp;query&nbsp;for&nbsp;=
the&nbsp;given&nbsp;{@link&nbsp;Specification}.</span>&nbsp;</span></li><li=
><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>=
&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;*&nbsp;@param&nbsp;spec</span>&nbsp;</span></li><li><span><span clas=
s=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;can&nbsp;be&nbsp;{@literal&nbsp;n=
ull}.</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;*&nbsp;@return</span>&nbsp;</span></li><li><span><span c=
lass=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;<=
/span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword"=
>private</span><span>&nbsp;TypedQuery&lt;Long&gt;&nbsp;getCountQuery(Specif=
ication&lt;T&gt;&nbsp;spec)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>=
&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;CriteriaBuilder&nbsp;builder&nbsp;=3D&nbsp;em.getCriteriaBuilder();&=
nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;CriteriaQuery&lt;Long&gt;&nbsp;query&nbsp;=3D&nbsp;builder.createQuer=
y(Long.<span class=3D"keyword">class</span><span>);&nbsp;&nbsp;</span></spa=
n></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;Root&lt;T&gt;&nbsp;root&nbsp;=3D&nbsp;applySpecific=
ationToCriteria(spec,&nbsp;query);&nbsp;&nbsp;</span></li><li><span>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query.select(builder.count(root));=
&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</sp=
an><span>&nbsp;em.createQuery(query);&nbsp;&nbsp;</span></span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;<=
/span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/**</s=
pan>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;*&nbsp;Applies&nbsp;the&nbsp;given&nbsp;{@link&nbsp;Specificatio=
n}&nbsp;to&nbsp;the&nbsp;given</span>&nbsp;</span></li><li><span><span clas=
s=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;{@link&nbsp;CriteriaQuer=
y}.</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"c=
omment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;spec</span>&nbsp;<=
/span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ca=
n&nbsp;be&nbsp;{@literal&nbsp;null}.</span>&nbsp;</span></li><li><span><spa=
n class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;query<=
/span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;must&nbsp;not&nbsp;be&nbsp;{@literal&nbsp;null}.</span>&nbsp;</s=
pan></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&=
nbsp;@return</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li=
><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">private</span><span>=
&nbsp;&lt;S&gt;&nbsp;Root&lt;T&gt;&nbsp;applySpecificationToCriteria(Specif=
ication&lt;T&gt;&nbsp;spec,&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CriteriaQu=
ery&lt;S&gt;&nbsp;query)&nbsp;{&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbs=
p;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ass=
ert.notNull(query);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;Root&lt;T&gt;&nbsp;root&nbsp;=3D&nbsp;query.from(=
getDomainClass());&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li=
><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CriteriaBuilder&=
nbsp;builder&nbsp;=3D&nbsp;em.getCriteriaBuilder();&nbsp;&nbsp;</span></li>=
<li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"comment">//&nbsp;=E5=A2=9E=E5=8A=A0=E4=BA=
=86=E5=88=A0=E9=99=A4=E6=9D=A1=E4=BB=B6=E5=88=A4=E6=96=AD=EF=BC=8C=E4=BB=8E=
=E8=80=8C=E5=B0=86=E8=A2=AB=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E7=9A=84=E6=
=95=B0=E6=8D=AE=E8=BF=87=E6=BB=A4=E6=8E=89</span><span>&nbsp;&nbsp;</span><=
/span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Predic=
ate&nbsp;deletedPredicate&nbsp;=3D&nbsp;<span class=3D"keyword">null</span>=
<span>;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">if</span><span>&nbsp;(BaseDefa=
ultModel.</span><span class=3D"keyword">class</span><span>.isAssignableFrom=
(getDomainClass()))&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Path&lt;Boo=
lean&gt;&nbsp;deletedPath&nbsp;=3D&nbsp;root.&lt;Boolean&gt;&nbsp;get(DELET=
EED_FIELD);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deletedPredicate&nbsp;=3D&nbsp;bu=
ilder.isFalse(deletedPath);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li><span=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">if=
</span><span>&nbsp;(spec&nbsp;=3D=3D&nbsp;</span><span class=3D"keyword">nu=
ll</span><span>)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"comment">//&nbsp;=E6=B2=A1=E6=9C=89=E5=85=B6=E5=AE=83=E6=9D=A1=E4=BB=B6=E7=
=9A=84=E6=97=B6=E5=80=99=E5=8F=AA=E5=88=A4=E6=96=ADdeleted=E5=AD=97=E6=AE=
=B5</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query.where(deletedPr=
edicate);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li><span>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"keyword">return</span><span>&nbsp;root;&nbsp;&nbsp;</span></span=
></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbs=
p;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;Predicate&nbsp;predicate&nbsp;=3D&nbsp;spec.toPredicate(root,&nbsp;quer=
y,&nbsp;builder);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li>=
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"ke=
yword">if</span><span>&nbsp;(predicate&nbsp;!=3D&nbsp;</span><span class=3D=
"keyword">null</span><span>)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<s=
pan class=3D"comment">//&nbsp;=E5=AD=98=E5=9C=A8=E5=85=B6=E5=AE=83=E6=9D=A1=
=E4=BB=B6=E7=9A=84=E6=97=B6=E5=80=99=E8=BF=98=E9=9C=80=E8=A6=81=E7=BB=84=E5=
=90=88=E4=B8=80=E4=B8=8B&nbsp;deleted&nbsp;=E6=9D=A1=E4=BB=B6</span><span>&=
nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">if</span><span=
>&nbsp;(</span><span class=3D"keyword">null</span><span>&nbsp;!=3D&nbsp;del=
etedPredicate)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;predicate&nbsp;=3D&nbsp;builder.and(predicate,&nbsp;deletedPredicat=
e);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query.whe=
re(predicate);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span>=
</li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"keyword">return</span><span>&nbsp;root;&nbsp;&nbsp;</span></span></li><=
li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&=
nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">=
private</span><span>&nbsp;TypedQuery&lt;T&gt;&nbsp;applyLockMode(TypedQuery=
&lt;T&gt;&nbsp;query)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;=
&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;LockModeType&nbsp;type&nbsp;=3D&nbsp;lockMetadataProvider&nbsp;=3D=3D&nbsp=
;<span class=3D"keyword">null</span><span>&nbsp;?&nbsp;</span><span class=
=3D"keyword">null</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;:&nbsp;lockMetadataProvider.getLockModeType();&nbsp;&nbsp;=
</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"keyword">return</span><span>&nbsp;type&nbsp;=3D=3D&nbsp;</span><s=
pan class=3D"keyword">null</span><span>&nbsp;?&nbsp;query&nbsp;:&nbsp;query=
.setLockMode(type);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</span>&nbsp;</span></=
li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(=
non-Javadoc)</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li><li><span><span c=
lass=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;com.someok.=
common.base.mvc.BaseDao#logicDelete(java.io.Serializable)</span>&nbsp;</spa=
n></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</=
span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"annotation">@Override</span><span>&nbsp;&nbsp;</span></span=
></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">public</spa=
n><span>&nbsp;</span><span class=3D"keyword">void</span><span>&nbsp;logicDe=
lete(ID&nbsp;id)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T&nbsp;entity&nbsp;=3D&nbsp;findOne(id=
);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"keyword">if</span><span>&nbsp;(</span><span class=
=3D"keyword">null</span><span>&nbsp;=3D=3D&nbsp;entity&nbsp;||&nbsp;!(entit=
y&nbsp;</span><span class=3D"keyword">instanceof</span><span>&nbsp;BaseDefa=
ultModel))&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keywo=
rd">return</span><span>;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BaseDefaultModel&nbsp;model&n=
bsp;=3D&nbsp;(BaseDefaultModel)&nbsp;entity;&nbsp;&nbsp;</span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.setDeleted(<span c=
lass=3D"keyword">true</span><span>);&nbsp;&nbsp;</span></span></li><li><spa=
n>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"keyword">this</span><span>.em.merge(model);&nbsp;&n=
bsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</spa=
n></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"comment">/*</span>&nbsp;</span></li><li><span><span class=3D=
"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</=
span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*=
&nbsp;</span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;com.someok.common.base.mvc.BaseDao#log=
icDelete(java.lang.Object)</span>&nbsp;</span></li><li><span><span class=3D=
"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span><=
/span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"annotation">@Ov=
erride</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"keyword">public</span><span>&nbsp;</span><span clas=
s=3D"keyword">void</span><span>&nbsp;logicDelete(T&nbsp;entity)&nbsp;{&nbsp=
;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"keyword">if</span><span>&nbsp;(</span><span class=
=3D"keyword">null</span><span>&nbsp;=3D=3D&nbsp;entity&nbsp;||&nbsp;!(entit=
y&nbsp;</span><span class=3D"keyword">instanceof</span><span>&nbsp;BaseDefa=
ultModel))&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keywo=
rd">return</span><span>;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&n=
bsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;BaseDefaultModel&nbsp;model&nbsp;=3D&nbsp;(BaseDefaultModel)&nbsp;enti=
ty;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;model.setDeleted(<span class=3D"keyword">true</span><span>);&nbsp=
;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">if</span=
><span>&nbsp;(StringUtil.isBlank(model.getId()))&nbsp;{&nbsp;&nbsp;</span><=
/span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;em.persist(model);&nbsp;&nbsp;</span></li><li><span>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=3D"keyword">e=
lse</span><span>&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;em.merge(model=
);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><sp=
an>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;<=
/span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">/*</sp=
an>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;*&nbsp;(non-Javadoc)</span>&nbsp;</span></li><li><span><span clas=
s=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span></li=
><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@se=
e&nbsp;com.someok.common.base.mvc.BaseDao#logicDelete(java.lang.Iterable)</=
span>&nbsp;</span></li><li><span><span class=3D"comment">&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"annotation">@Override</span><span>&nbsp;&nb=
sp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyw=
ord">public</span><span>&nbsp;</span><span class=3D"keyword">void</span><sp=
an>&nbsp;logicDelete(Iterable&lt;?&nbsp;</span><span class=3D"keyword">exte=
nds</span><span>&nbsp;T&gt;&nbsp;entities)&nbsp;{&nbsp;&nbsp;</span></span>=
</li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"keyword">if</span><span>&nbsp;(</span><span class=3D"keyword">null</spa=
n><span>&nbsp;=3D=3D&nbsp;entities)&nbsp;{&nbsp;&nbsp;</span></span></li><l=
i><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"keyword">return</span><span>;&nbsp;&nbsp;</span></span>=
</li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp=
;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">for</span><span>&nbsp=
;(T&nbsp;entity&nbsp;:&nbsp;entities)&nbsp;{&nbsp;&nbsp;</span></span></li>=
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;logicDelete(entity);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;=
&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></l=
i><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">protected</span=
><span>&nbsp;String&nbsp;getCountQueryPlaceholder()&nbsp;{&nbsp;&nbsp;</spa=
n></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&=
nbsp;</span><span class=3D"string">"x"</span><span>;&nbsp;&nbsp;</span></sp=
an></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><spa=
n>}&nbsp;&nbsp;</span></li></ol></div><pre class=3D"java" name=3D"code" cod=
eable_id=3D"1616651" codeable_type=3D"Blog" source_url=3D"http://someok.ite=
ye.com/blog/1616651" pre_index=3D"0" title=3D"=E5=9C=A8 Spring Data Jpa =E4=
=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E9=9C=80=E5=81=
=9A=E7=9A=84=E5=B7=A5=E4=BD=9C" style=3D"display: none;">/*
 * $Id$
 */
package com.someok.common.base.spring.data;

import static org.springframework.data.jpa.repository.query.QueryUtils.DELE=
TE_ALL_QUERY_STRING;
import static org.springframework.data.jpa.repository.query.QueryUtils.appl=
yAndBind;
import static org.springframework.data.jpa.repository.query.QueryUtils.getQ=
ueryString;
import static org.springframework.data.jpa.repository.query.QueryUtils.toOr=
ders;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.LockModeType;
import javax.persistence.NoResultException;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Path;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.data.jpa.repository.support.JpaEntityInformation=
;
import org.springframework.data.jpa.repository.support.JpaEntityInformation=
Support;
import org.springframework.data.jpa.repository.support.LockMetadataProvider=
;
import org.springframework.data.jpa.repository.support.SimpleJpaRepository;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;

import com.someok.common.base.mvc.BaseDao;
import com.someok.common.base.mvc.BaseDefaultModel;
import com.someok.common.utils.StringUtil;

/**
 * =E4=BF=AE=E6=94=B9=E8=87=AA
 * {@link org.springframework.data.jpa.repository.support.SimpleJpaReposito=
ry},
 * =E6=8F=90=E4=BE=9B=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E5=8A=9F=E8=83=BD=
=EF=BC=88logicDelete=EF=BC=89=EF=BC=8C=E4=B8=BA=E9=80=82=E5=BA=94=E8=BF=99=
=E4=B8=AA=E8=A6=81=E6=B1=82=EF=BC=8C=E7=9B=B8=E5=85=B3=E7=9A=84=E6=9F=A5=E8=
=AF=A2=E4=B9=9F=E9=83=BD=E5=81=9A=E4=BA=86=E4=BF=AE=E6=94=B9=E3=80=82
 *=20
 * =E9=9C=80=E8=A6=81=E6=B3=A8=E6=84=8F=E7=9A=84=E6=98=AF=E9=82=A3=E4=BA=9B=
 delete =E6=96=B9=E6=B3=95=E4=BB=8D=E7=84=B6=E6=98=AF=E7=89=A9=E7=90=86=E5=
=88=A0=E9=99=A4=EF=BC=8C=E8=80=8C=E6=96=B0=E5=A2=9E=E7=9A=84=E9=82=A3=E4=BA=
=9B logic =E5=BC=80=E5=A4=B4=E7=9A=84=E6=96=B9=E6=B3=95=E6=89=8D=E6=98=AF=
=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=EF=BC=8C =E7=94=A8=E6=97=B6=E5=80=99=
=E9=9C=80=E8=A6=81=E6=B3=A8=E6=84=8F=E8=BF=99=E7=82=B9.
 *=20
 * @author wangjxe
 *=20
 */
@org.springframework.stereotype.Repository
@Transactional(readOnly =3D true)
public class CustomSimpleJpaRepository&lt;T, ID extends Serializable&gt; im=
plements
		BaseDao&lt;T, ID&gt; {

	/**
	 * =E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E5=AD=97=E6=AE=B5=E5=90=8D.
	 */
	public final static String DELETEED_FIELD =3D "deleted";

	public static final String COUNT_QUERY_STRING =3D "select count(%s) from %=
s x where x.deleted =3D false";
	public static final String EXISTS_QUERY_STRING =3D "select count(%s) from =
%s x where x.%s =3D :id and x.deleted =3D false";

	private final JpaEntityInformation&lt;T, ?&gt; entityInformation;
	private final EntityManager em;
	// private final PersistenceProvider provider;

	private LockMetadataProvider lockMetadataProvider;

	/**
	 * Creates a new {@link SimpleJpaRepository} to manage objects of the give=
n
	 * {@link JpaEntityInformation}.
	 *=20
	 * @param entityInformation
	 *            must not be {@literal null}.
	 * @param entityManager
	 *            must not be {@literal null}.
	 */
	public CustomSimpleJpaRepository(
			JpaEntityInformation&lt;T, ?&gt; entityInformation,
			EntityManager entityManager) {

		Assert.notNull(entityInformation);
		Assert.notNull(entityManager);

		this.entityInformation =3D entityInformation;
		this.em =3D entityManager;
		// this.provider =3D PersistenceProvider.fromEntityManager(entityManager)=
;
	}

	/**
	 * Creates a new {@link SimpleJpaRepository} to manage objects of the give=
n
	 * domain type.
	 *=20
	 * @param domainClass
	 *            must not be {@literal null}.
	 * @param em
	 *            must not be {@literal null}.
	 */
	public CustomSimpleJpaRepository(Class&lt;T&gt; domainClass, EntityManager=
 em) {
		this(JpaEntityInformationSupport.getMetadata(domainClass, em), em);
	}

	/**
	 * Configures a custom {@link LockMetadataProvider} to be used to detect
	 * {@link LockModeType}s to be applied to queries.
	 *=20
	 * @param lockMetadataProvider
	 */
	public void setLockMetadataProvider(
			LockMetadataProvider lockMetadataProvider) {
		this.lockMetadataProvider =3D lockMetadataProvider;
	}

	private Class&lt;T&gt; getDomainClass() {
		return entityInformation.getJavaType();
	}

	private String getDeleteAllQueryString() {
		return getQueryString(DELETE_ALL_QUERY_STRING,
				entityInformation.getEntityName());
	}

	private String getCountQueryString() {

		String countQuery =3D String.format(COUNT_QUERY_STRING,
				getCountQueryPlaceholder(), "%s");
		return getQueryString(countQuery, entityInformation.getEntityName());
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.repository.CrudRepository#delete(java.io.
	 * Serializable)
	 */
	@Transactional
	public void delete(ID id) {

		Assert.notNull(id, "The given id must not be null!");

		if (!exists(id)) {
			throw new EmptyResultDataAccessException(String.format(
					"No %s entity with id %s exists!",
					entityInformation.getJavaType(), id), 1);
		}

		delete(findOne(id));
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.repository.CrudRepository#delete(java.lang.Obj=
ect
	 * )
	 */
	@Transactional
	public void delete(T entity) {

		Assert.notNull(entity, "The entity must not be null!");
		em.remove(em.contains(entity) ? entity : em.merge(entity));
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.repository.CrudRepository#delete(java.lang.Ite=
rable
	 * )
	 */
	@Transactional
	public void delete(Iterable&lt;? extends T&gt; entities) {

		Assert.notNull(entities, "The given Iterable of entities not be null!");

		for (T entity : entities) {
			delete(entity);
		}
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaRepository#deleteInBatch(jav=
a
	 * .lang.Iterable)
	 */
	@Transactional
	public void deleteInBatch(Iterable&lt;T&gt; entities) {

		Assert.notNull(entities, "The given Iterable of entities not be null!");

		if (!entities.iterator().hasNext()) {
			return;
		}

		applyAndBind(
				getQueryString(DELETE_ALL_QUERY_STRING,
						entityInformation.getEntityName()), entities, em)
				.executeUpdate();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.repository.Repository#deleteAll()
	 */
	@Transactional
	public void deleteAll() {

		for (T element : findAll()) {
			delete(element);
		}
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaRepository#deleteAllInBatch(=
)
	 */
	@Transactional
	public void deleteAllInBatch() {
		em.createQuery(getDeleteAllQueryString()).executeUpdate();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.repository.Repository#readById(java.io.Seriali=
zable
	 * )
	 */
	public T findOne(ID id) {

		Assert.notNull(id, "The given id must not be null!");
		return em.find(getDomainClass(), id);
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.repository.CrudRepository#exists(java.io.
	 * Serializable)
	 */
	public boolean exists(ID id) {

		Assert.notNull(id, "The given id must not be null!");

		if (entityInformation.getIdAttribute() !=3D null) {

			String placeholder =3D getCountQueryPlaceholder();
			String entityName =3D entityInformation.getEntityName();
			String idAttributeName =3D entityInformation.getIdAttribute()
					.getName();
			String existsQuery =3D String.format(EXISTS_QUERY_STRING,
					placeholder, entityName, idAttributeName);

			TypedQuery&lt;Long&gt; query =3D em.createQuery(existsQuery, Long.class)=
;
			query.setParameter("id", id);

			return query.getSingleResult() =3D=3D 1;
		} else {
			return findOne(id) !=3D null;
		}
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.jpa.repository.JpaRepository#findAll()
	 */
	public List&lt;T&gt; findAll() {
		return getQuery(null, (Sort) null).getResultList();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.repository.CrudRepository#findAll(ID[])
	 */
	public List&lt;T&gt; findAll(Iterable&lt;ID&gt; ids) {

		return getQuery(new Specification&lt;T&gt;() {
			public Predicate toPredicate(Root&lt;T&gt; root, CriteriaQuery&lt;?&gt; =
query,
					CriteriaBuilder cb) {
				Path&lt;?&gt; path =3D root.get(entityInformation.getIdAttribute());
				return path.in(cb.parameter(List.class, "ids"));
			}
		}, (Sort) null).setParameter("ids", ids).getResultList();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.jpa.repository.JpaRepository#findAll(org.
	 * springframework.data.domain.Sort)
	 */
	public List&lt;T&gt; findAll(Sort sort) {
		return getQuery(null, sort).getResultList();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.repository.PagingAndSortingRepository#findAll
	 * (org.springframework.data.domain.Pageable)
	 */
	public Page&lt;T&gt; findAll(Pageable pageable) {

		if (null =3D=3D pageable) {
			return new PageImpl&lt;T&gt;(findAll());
		}

		return findAll(null, pageable);
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaSpecificationExecutor#findOn=
e
	 * (org.springframework.data.jpa.domain.Specification)
	 */
	public T findOne(Specification&lt;T&gt; spec) {

		try {
			return getQuery(spec, (Sort) null).getSingleResult();
		} catch (NoResultException e) {
			return null;
		}
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaSpecificationExecutor#findAl=
l
	 * (org.springframework.data.jpa.domain.Specification)
	 */
	public List&lt;T&gt; findAll(Specification&lt;T&gt; spec) {
		return getQuery(spec, (Sort) null).getResultList();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaSpecificationExecutor#findAl=
l
	 * (org.springframework.data.jpa.domain.Specification,
	 * org.springframework.data.domain.Pageable)
	 */
	public Page&lt;T&gt; findAll(Specification&lt;T&gt; spec, Pageable pageabl=
e) {

		TypedQuery&lt;T&gt; query =3D getQuery(spec, pageable);
		return pageable =3D=3D null ? new PageImpl&lt;T&gt;(query.getResultList()=
)
				: readPage(query, pageable, spec);
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaSpecificationExecutor#findAl=
l
	 * (org.springframework.data.jpa.domain.Specification,
	 * org.springframework.data.domain.Sort)
	 */
	public List&lt;T&gt; findAll(Specification&lt;T&gt; spec, Sort sort) {

		return getQuery(spec, sort).getResultList();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.repository.CrudRepository#count()
	 */
	public long count() {
		return em.createQuery(getCountQueryString(), Long.class)
				.getSingleResult();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaSpecificationExecutor#count
	 * (org.springframework.data.jpa.domain.Specification)
	 */
	public long count(Specification&lt;T&gt; spec) {

		return getCountQuery(spec).getSingleResult();
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.repository.CrudRepository#save(java.lang.Objec=
t)
	 */
	@Transactional
	public &lt;S extends T&gt; S save(S entity) {

		if (entityInformation.isNew(entity)) {
			em.persist(entity);
			return entity;
		} else {
			return em.merge(entity);
		}
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaRepository#saveAndFlush(java
	 * .lang.Object)
	 */
	@Transactional
	public T saveAndFlush(T entity) {

		T result =3D save(entity);
		flush();

		return result;
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see
	 * org.springframework.data.jpa.repository.JpaRepository#save(java.lang.
	 * Iterable)
	 */
	@Transactional
	public &lt;S extends T&gt; List&lt;S&gt; save(Iterable&lt;S&gt; entities) =
{

		List&lt;S&gt; result =3D new ArrayList&lt;S&gt;();

		if (entities =3D=3D null) {
			return result;
		}

		for (S entity : entities) {
			result.add(save(entity));
		}

		return result;
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see org.springframework.data.jpa.repository.JpaRepository#flush()
	 */
	@Transactional
	public void flush() {

		em.flush();
	}

	/**
	 * Reads the given {@link TypedQuery} into a {@link Page} applying the giv=
en
	 * {@link Pageable} and {@link Specification}.
	 *=20
	 * @param query
	 *            must not be {@literal null}.
	 * @param spec
	 *            can be {@literal null}.
	 * @param pageable
	 *            can be {@literal null}.
	 * @return
	 */
	private Page&lt;T&gt; readPage(TypedQuery&lt;T&gt; query, Pageable pageabl=
e,
			Specification&lt;T&gt; spec) {

		query.setFirstResult(pageable.getOffset());
		query.setMaxResults(pageable.getPageSize());

		Long total =3D getCountQuery(spec).getSingleResult();
		List&lt;T&gt; content =3D total &gt; pageable.getOffset() ? query.getResu=
ltList()
				: Collections.&lt;T&gt; emptyList();

		return new PageImpl&lt;T&gt;(content, pageable, total);
	}

	/**
	 * Creates a new {@link TypedQuery} from the given {@link Specification}.
	 *=20
	 * @param spec
	 *            can be {@literal null}.
	 * @param pageable
	 *            can be {@literal null}.
	 * @return
	 */
	private TypedQuery&lt;T&gt; getQuery(Specification&lt;T&gt; spec, Pageable=
 pageable) {

		Sort sort =3D pageable =3D=3D null ? null : pageable.getSort();
		return getQuery(spec, sort);
	}

	/**
	 * Creates a {@link TypedQuery} for the given {@link Specification} and
	 * {@link Sort}.
	 *=20
	 * @param spec
	 *            can be {@literal null}.
	 * @param sort
	 *            can be {@literal null}.
	 * @return
	 */
	private TypedQuery&lt;T&gt; getQuery(Specification&lt;T&gt; spec, Sort sor=
t) {

		CriteriaBuilder builder =3D em.getCriteriaBuilder();
		CriteriaQuery&lt;T&gt; query =3D builder.createQuery(getDomainClass());

		Root&lt;T&gt; root =3D applySpecificationToCriteria(spec, query);
		query.select(root);

		if (sort !=3D null) {
			query.orderBy(toOrders(sort, root, builder));
		}

		return applyLockMode(em.createQuery(query));
	}

	/**
	 * Creates a new count query for the given {@link Specification}.
	 *=20
	 * @param spec
	 *            can be {@literal null}.
	 * @return
	 */
	private TypedQuery&lt;Long&gt; getCountQuery(Specification&lt;T&gt; spec) =
{

		CriteriaBuilder builder =3D em.getCriteriaBuilder();
		CriteriaQuery&lt;Long&gt; query =3D builder.createQuery(Long.class);

		Root&lt;T&gt; root =3D applySpecificationToCriteria(spec, query);
		query.select(builder.count(root));

		return em.createQuery(query);
	}

	/**
	 * Applies the given {@link Specification} to the given
	 * {@link CriteriaQuery}.
	 *=20
	 * @param spec
	 *            can be {@literal null}.
	 * @param query
	 *            must not be {@literal null}.
	 * @return
	 */
	private &lt;S&gt; Root&lt;T&gt; applySpecificationToCriteria(Specification=
&lt;T&gt; spec,
			CriteriaQuery&lt;S&gt; query) {

		Assert.notNull(query);
		Root&lt;T&gt; root =3D query.from(getDomainClass());

		CriteriaBuilder builder =3D em.getCriteriaBuilder();

		// =E5=A2=9E=E5=8A=A0=E4=BA=86=E5=88=A0=E9=99=A4=E6=9D=A1=E4=BB=B6=E5=88=
=A4=E6=96=AD=EF=BC=8C=E4=BB=8E=E8=80=8C=E5=B0=86=E8=A2=AB=E9=80=BB=E8=BE=91=
=E5=88=A0=E9=99=A4=E7=9A=84=E6=95=B0=E6=8D=AE=E8=BF=87=E6=BB=A4=E6=8E=89
		Predicate deletedPredicate =3D null;
		if (BaseDefaultModel.class.isAssignableFrom(getDomainClass())) {
			Path&lt;Boolean&gt; deletedPath =3D root.&lt;Boolean&gt; get(DELETEED_FI=
ELD);
			deletedPredicate =3D builder.isFalse(deletedPath);
		}
	=09
		if (spec =3D=3D null) {
			// =E6=B2=A1=E6=9C=89=E5=85=B6=E5=AE=83=E6=9D=A1=E4=BB=B6=E7=9A=84=E6=97=
=B6=E5=80=99=E5=8F=AA=E5=88=A4=E6=96=ADdeleted=E5=AD=97=E6=AE=B5
			query.where(deletedPredicate);
		=09
			return root;
		}
	=09
		Predicate predicate =3D spec.toPredicate(root, query, builder);

		if (predicate !=3D null) {
			// =E5=AD=98=E5=9C=A8=E5=85=B6=E5=AE=83=E6=9D=A1=E4=BB=B6=E7=9A=84=E6=97=
=B6=E5=80=99=E8=BF=98=E9=9C=80=E8=A6=81=E7=BB=84=E5=90=88=E4=B8=80=E4=B8=8B=
 deleted =E6=9D=A1=E4=BB=B6
			if (null !=3D deletedPredicate) {
				predicate =3D builder.and(predicate, deletedPredicate);
			}
			query.where(predicate);
		}

		return root;
	}

	private TypedQuery&lt;T&gt; applyLockMode(TypedQuery&lt;T&gt; query) {

		LockModeType type =3D lockMetadataProvider =3D=3D null ? null
				: lockMetadataProvider.getLockModeType();
		return type =3D=3D null ? query : query.setLockMode(type);
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see com.someok.common.base.mvc.BaseDao#logicDelete(java.io.Serializabl=
e)
	 */
	@Override
	public void logicDelete(ID id) {
		T entity =3D findOne(id);
		if (null =3D=3D entity || !(entity instanceof BaseDefaultModel)) {
			return;
		}
		BaseDefaultModel model =3D (BaseDefaultModel) entity;
		model.setDeleted(true);

		this.em.merge(model);
	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see com.someok.common.base.mvc.BaseDao#logicDelete(java.lang.Object)
	 */
	@Override
	public void logicDelete(T entity) {
		if (null =3D=3D entity || !(entity instanceof BaseDefaultModel)) {
			return;
		}

		BaseDefaultModel model =3D (BaseDefaultModel) entity;
		model.setDeleted(true);

		if (StringUtil.isBlank(model.getId())) {
			em.persist(model);
		} else {
			em.merge(model);
		}

	}

	/*
	 * (non-Javadoc)
	 *=20
	 * @see com.someok.common.base.mvc.BaseDao#logicDelete(java.lang.Iterable)
	 */
	@Override
	public void logicDelete(Iterable&lt;? extends T&gt; entities) {
		if (null =3D=3D entities) {
			return;
		}

		for (T entity : entities) {
			logicDelete(entity);
		}
	}

	protected String getCountQueryPlaceholder() {

		return "x";
	}
}
</pre>
<p>&nbsp;</p>
<p>&nbsp;=E4=B8=BB=E8=A6=81=E7=9A=84=E6=94=B9=E5=8A=A8=E6=98=AF&nbsp;applyS=
pecificationToCriteria =E6=96=B9=E6=B3=95=EF=BC=8C=E4=B8=8E SimpleJpaReposi=
tory =E6=AF=94=E5=AF=B9=E4=B8=8B=E5=B0=B1=E7=9F=A5=E9=81=93=E6=94=B9=E4=BA=
=86=E5=95=A5=E4=BA=86=E3=80=82</p>
<p>&nbsp;</p>
<h2>findByXXX =E6=93=8D=E4=BD=9C</h2>
<p>CURD =E7=9A=84=E4=BF=AE=E6=94=B9=E8=BF=98=E6=98=AF=E6=AF=94=E8=BE=83=E7=
=AE=80=E5=8D=95=E7=9A=84=EF=BC=8C=E4=B8=8D=E8=BF=87=E9=82=A3=E4=BA=9B=E6=A0=
=B9=E6=8D=AE=E6=8E=A5=E5=8F=A3=E6=96=B9=E6=B3=95=E8=87=AA=E5=8A=A8=E5=AE=9E=
=E7=8E=B0=E6=9F=A5=E8=AF=A2=E4=BF=AE=E6=94=B9=E8=B5=B7=E6=9D=A5=E5=B0=B1=E6=
=AF=94=E8=BE=83=E9=BA=BB=E7=83=A6=E4=BA=86=E3=80=82=E5=BD=93=E7=84=B6=EF=BC=
=8C=E4=B8=8D=E5=81=9A=E4=BB=BB=E4=BD=95=E4=BF=AE=E6=94=B9=E4=B9=9F=E5=8F=AF=
=E4=BB=A5=E7=94=A8=EF=BC=8C=E5=8F=AA=E9=9C=80=E8=A6=81=E5=9C=A8dao=E6=8E=A5=
=E5=8F=A3=E7=9A=84=E6=96=B9=E6=B3=95=E4=B8=8A=E9=9D=A2=E5=8A=A0=E4=B8=AA @Q=
uery =E5=B0=B1=E8=A1=8C=E4=BA=86=EF=BC=8C=E4=BD=86=E6=98=AF=E8=BF=99=E6=A0=
=B7=E5=B0=B1=E9=9C=80=E8=A6=81=E5=86=99=E5=A4=A7=E9=87=8F=E7=9A=84jpql=E4=
=BA=86=EF=BC=8C=E4=B8=8E=E9=87=87=E7=94=A8 spring data=E7=9A=84=E5=8E=9F=E6=
=84=8F=E4=B8=8D=E7=AC=A6=EF=BC=8C=E5=92=B1=E7=94=A8=E8=BF=99=E7=8E=A9=E6=84=
=8F=E7=9B=AE=E7=9A=84=E4=B8=8D=E5=B0=B1=E6=98=AF=E4=B8=BA=E4=BA=86=E4=B8=AA=
=E7=AE=80=E5=8D=95=E5=98=9B=E3=80=82</p>
<p>&nbsp;</p>
<p>=E6=9C=AC=E6=9D=A5=E7=9A=84=E6=83=B3=E6=B3=95=E6=98=AF=E7=BB=A7=E6=89=BF=
=E6=9F=90=E4=BA=9B=E7=B1=BB=E6=9D=A5=E5=AF=B9=E9=9C=80=E8=A6=81=E8=B0=83=E6=
=95=B4=E7=9A=84=E6=96=B9=E6=B3=95=E9=87=8D=E6=96=B0=E5=AE=9E=E7=8E=B0=E5=B0=
=B1ok=E4=BA=86=EF=BC=8C=E5=8F=AF=E6=83=9Cspring data =E8=BF=99=E5=9D=97=E7=
=9A=84=E5=AE=9E=E7=8E=B0=E6=9C=89=E7=82=B9=E5=A4=AA=E5=B0=81=E9=97=AD=E4=BA=
=86=EF=BC=8C=E5=A4=9A=E4=B8=AA=E7=B1=BB=E6=B2=A1=E6=9C=89 public=EF=BC=8C=
=E5=8F=AA=E8=83=BD=E5=8C=85=E5=86=85=E5=8F=AF=E8=A7=81=EF=BC=8C=E6=9B=B4=E5=
=A4=9A=E7=9A=84=E9=9C=80=E8=A6=81=E7=9A=84=E6=96=B9=E6=B3=95=E5=8F=AA=E6=8F=
=90=E4=BE=9B=E4=BA=86 private =E5=B1=9E=E6=80=A7=E3=80=82=E6=B2=A1=E5=8A=9E=
=E6=B3=95=EF=BC=8C=E5=8F=AA=E5=A5=BD=E6=8A=8A&nbsp;org.springframework.data=
.jpa.repository.query =E5=8C=85=E5=86=85=E7=9A=84=E4=BB=A3=E7=A0=81=E9=83=
=BD=E6=8B=B7=E8=B4=9D=E8=BF=87=E6=9D=A5=EF=BC=8C=E5=85=B6=E5=AE=9E=E7=9C=9F=
=E6=AD=A3=E9=9C=80=E8=A6=81=E6=94=B9=E5=8A=A8=E7=9A=84=E5=9C=B0=E6=96=B9=E5=
=8F=AA=E6=9C=89=E4=B8=80=E5=A4=84=EF=BC=9A</p>
<p>&nbsp;</p>
<p>com.someok.common.base.spring.data.query.JpaQueryCreator.complete(Predic=
ate, Sort, CriteriaQuery&lt;Object&gt;, CriteriaBuilder, Root&lt;?&gt;)</p>
<p>&nbsp;</p>
<p>=E5=85=B7=E4=BD=93=E4=BF=AE=E6=94=B9=E6=96=B9=E6=B3=95=E5=A6=82=E4=B8=8B=
=EF=BC=9A</p>
<p>&nbsp;</p>
<div class=3D"dp-highlighter" id=3D""><div class=3D"bar"><div class=3D"tool=
s">Java=E4=BB=A3=E7=A0=81 <embed wmode=3D"transparent" src=3D"http://someok=
.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf" width=3D"14" he=
ight=3D"15" flashvars=3D"clipboard=3D%09protected%20CriteriaQuery%3CObject%=
3E%20complete(Predicate%20predicate%2C%20Sort%20sort%2C%0A%09%09%09Criteria=
Query%3CObject%3E%20query%2C%20CriteriaBuilder%20builder%2C%20Root%3C%3F%3E=
%20root)%20%7B%0A%09%09%0A%09%09%2F%2F%20%E5%A2%9E%E5%8A%A0%E4%BA%86%E5%88%=
A0%E9%99%A4%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%EF%BC%8C%E4%BB%8E%E8%80%8C%=
E5%B0%86%E8%A2%AB%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E7%9A%84%E6%95%B0%E6%=
8D%AE%E8%BF%87%E6%BB%A4%E6%8E%89%0A%09%09Predicate%20deletedPredicate%20%3D=
%20null%3B%0A%09%09if%20(BaseDefaultModel.class.isAssignableFrom(this.domai=
nClass))%20%7B%0A%09%09%09Path%3CBoolean%3E%20deletedPath%20%3D%20root.%3CB=
oolean%3E%20get(CustomSimpleJpaRepository.DELETEED_FIELD)%3B%0A%09%09%09del=
etedPredicate%20%3D%20builder.isFalse(deletedPath)%3B%0A%09%09%7D%0A%09%09%=
2F%2F%20%E5%9C%A8%E5%8E%9F%E6%9C%89%E6%9D%A1%E4%BB%B6%E5%9F%BA%E7%A1%80%E4%=
B8%8A%E7%BB%84%E5%90%88%20deleted%20%E6%9D%A1%E4%BB%B6%0A%09%09if%20(null%2=
0!%3D%20deletedPredicate)%20%7B%0A%09%09%09predicate%20%3D%20builder.and(pr=
edicate%2C%20deletedPredicate)%3B%0A%09%09%7D%0A%09%09%0A%09%09return%20thi=
s.query.select(root).where(predicate)%0A%09%09%09%09.orderBy(QueryUtils.toO=
rders(sort%2C%20root%2C%20builder))%3B%0A%09%7D%0A" quality=3D"high" allows=
criptaccess=3D"always" type=3D"application/x-shockwave-flash" pluginspage=
=3D"http://www.macromedia.com/go/getflashplayer">&nbsp;<a href=3D"javascrip=
t:void()" title=3D"=E6=94=B6=E8=97=8F=E8=BF=99=E6=AE=B5=E4=BB=A3=E7=A0=81" =
onclick=3D"code_favorites_do_favorite(this);return false;"><img class=3D"st=
ar" src=3D"http://someok.iteye.com/images/icon_star.png" alt=3D"=E6=94=B6=
=E8=97=8F=E4=BB=A3=E7=A0=81"><img class=3D"spinner" src=3D"http://someok.it=
eye.com/images/spinner.gif" style=3D"display:none"></a></div></div><ol star=
t=3D"1" class=3D"dp-j"><li><span><span class=3D"keyword">protected</span><s=
pan>&nbsp;CriteriaQuery&lt;Object&gt;&nbsp;complete(Predicate&nbsp;predicat=
e,&nbsp;Sort&nbsp;sort,&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CriteriaQuery&lt;Object&gt;&nbsp;query=
,&nbsp;CriteriaBuilder&nbsp;builder,&nbsp;Root&lt;?&gt;&nbsp;root)&nbsp;{&n=
bsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>=
</li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"comment">//&nbsp;=E5=
=A2=9E=E5=8A=A0=E4=BA=86=E5=88=A0=E9=99=A4=E6=9D=A1=E4=BB=B6=E5=88=A4=E6=96=
=AD=EF=BC=8C=E4=BB=8E=E8=80=8C=E5=B0=86=E8=A2=AB=E9=80=BB=E8=BE=91=E5=88=A0=
=E9=99=A4=E7=9A=84=E6=95=B0=E6=8D=AE=E8=BF=87=E6=BB=A4=E6=8E=89</span><span=
>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;Predicate=
&nbsp;deletedPredicate&nbsp;=3D&nbsp;<span class=3D"keyword">null</span><sp=
an>;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"keyword">if</span><span>&nbsp;(BaseDefaultModel.</span><span class=
=3D"keyword">class</span><span>.isAssignableFrom(</span><span class=3D"keyw=
ord">this</span><span>.domainClass))&nbsp;{&nbsp;&nbsp;</span></span></li><=
li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Path&lt;Boolean&gt=
;&nbsp;deletedPath&nbsp;=3D&nbsp;root.&lt;Boolean&gt;&nbsp;get(CustomSimple=
JpaRepository.DELETEED_FIELD);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deletedPredicate&nbsp;=3D&nbsp;builder=
.isFalse(deletedPath);&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&=
nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"comment">//&nbsp;=E5=9C=A8=E5=8E=9F=E6=9C=89=E6=9D=A1=E4=BB=B6=E5=9F=BA=
=E7=A1=80=E4=B8=8A=E7=BB=84=E5=90=88&nbsp;deleted&nbsp;=E6=9D=A1=E4=BB=B6</=
span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"keyword">if</span><span>&nbsp;(</span><span class=3D"keywor=
d">null</span><span>&nbsp;!=3D&nbsp;deletedPredicate)&nbsp;{&nbsp;&nbsp;</s=
pan></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p=
redicate&nbsp;=3D&nbsp;builder.and(predicate,&nbsp;deletedPredicate);&nbsp;=
&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></l=
i><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li><span>&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"keyword">return</span><span>&nbsp;</span>=
<span class=3D"keyword">this</span><span>.query.select(root).where(predicat=
e)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.orderBy(QueryUtils.toOrders(sort,&=
nbsp;root,&nbsp;builder));&nbsp;&nbsp;</span></li><li><span>}&nbsp;&nbsp;</=
span></li></ol></div><pre class=3D"java" name=3D"code" codeable_id=3D"16166=
51" codeable_type=3D"Blog" source_url=3D"http://someok.iteye.com/blog/16166=
51" pre_index=3D"1" title=3D"=E5=9C=A8 Spring Data Jpa =E4=B8=AD=E4=BD=BF=
=E7=94=A8=E9=80=BB=E8=BE=91=E5=88=A0=E9=99=A4=E9=9C=80=E5=81=9A=E7=9A=84=E5=
=B7=A5=E4=BD=9C" style=3D"display: none;">	protected CriteriaQuery&lt;Objec=
t&gt; complete(Predicate predicate, Sort sort,
			CriteriaQuery&lt;Object&gt; query, CriteriaBuilder builder, Root&lt;?&gt=
; root) {
	=09
		// =E5=A2=9E=E5=8A=A0=E4=BA=86=E5=88=A0=E9=99=A4=E6=9D=A1=E4=BB=B6=E5=88=
=A4=E6=96=AD=EF=BC=8C=E4=BB=8E=E8=80=8C=E5=B0=86=E8=A2=AB=E9=80=BB=E8=BE=91=
=E5=88=A0=E9=99=A4=E7=9A=84=E6=95=B0=E6=8D=AE=E8=BF=87=E6=BB=A4=E6=8E=89
		Predicate deletedPredicate =3D null;
		if (BaseDefaultModel.class.isAssignableFrom(this.domainClass)) {
			Path&lt;Boolean&gt; deletedPath =3D root.&lt;Boolean&gt; get(CustomSimpl=
eJpaRepository.DELETEED_FIELD);
			deletedPredicate =3D builder.isFalse(deletedPath);
		}
		// =E5=9C=A8=E5=8E=9F=E6=9C=89=E6=9D=A1=E4=BB=B6=E5=9F=BA=E7=A1=80=E4=B8=
=8A=E7=BB=84=E5=90=88 deleted =E6=9D=A1=E4=BB=B6
		if (null !=3D deletedPredicate) {
			predicate =3D builder.and(predicate, deletedPredicate);
		}
	=09
		return this.query.select(root).where(predicate)
				.orderBy(QueryUtils.toOrders(sort, root, builder));
	}
</pre>
&nbsp;
<p>&nbsp;</p>
<div>=E6=94=B6=E5=B7=A5=E8=B5=B0=E4=BA=BA=E3=80=82=E3=80=82=E3=80=82</div>
  </div>

 =20

 =20
 =20
  <iframe src=3D"http://someok.iteye.com/iframe_ggbd/187" scrolling=3D"no" =
width=3D"468" height=3D"60" frameborder=3D"0"></iframe>
 =20
  <div id=3D"bottoms" class=3D"clearfix">
    <div id=3D"digg_bottom" class=3D"clearfix"><div class=3D"digged"><stron=
g>2</strong> <br>=E9=A1=B6</div><div class=3D"digged"><strong>4</strong> <b=
r>=E8=B8=A9</div></div>
    <div id=3D"share_weibo">=E5=88=86=E4=BA=AB=E5=88=B0=EF=BC=9A
      <a data-type=3D"sina" href=3D"javascript:;" title=3D"=E5=88=86=E4=BA=
=AB=E5=88=B0=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A"><img src=3D"http://someok=
.iteye.com/images/sina.jpg"></a>
      <a data-type=3D"qq" href=3D"javascript:;" title=3D"=E5=88=86=E4=BA=AB=
=E5=88=B0=E8=85=BE=E8=AE=AF=E5=BE=AE=E5=8D=9A"><img src=3D"http://someok.it=
eye.com/images/tec.jpg"></a>
    </div>
  </div>

  <div class=3D"blog_nav">
    <div class=3D"pre_next">
     =20
     =20
      <a href=3D"http://someok.iteye.com/blog/1017528" class=3D"pre" title=
=3D"=E6=9E=84=E9=80=A0=E4=B8=AA=E5=85=A8=E9=80=8F=E6=98=8E=E7=9A=84Activity=
">=E6=9E=84=E9=80=A0=E4=B8=AA=E5=85=A8=E9=80=8F=E6=98=8E=E7=9A=84Activity</=
a>
    </div>
  </div>
  <div class=3D"blog_bottom">
    <ul>
      <li>2012-08-02 03:21</li>
      <li>=E6=B5=8F=E8=A7=88 9133</li>
      <li><a href=3D"http://someok.iteye.com/blog/1616651#comments">=E8=AF=
=84=E8=AE=BA(7)</a></li>
     =20
     =20
      <li>=E5=88=86=E7=B1=BB:<a href=3D"http://www.iteye.com/blogs/category=
/opensource">=E5=BC=80=E6=BA=90=E8=BD=AF=E4=BB=B6</a></li>     =20
      <li class=3D"last"><a href=3D"http://www.iteye.com/wiki/blog/1616651"=
 target=3D"_blank" class=3D"more">=E7=9B=B8=E5=85=B3=E6=8E=A8=E8=8D=90</a><=
/li>
    </ul>
  </div>

  <div class=3D"blog_comment">
    <h5>=E8=AF=84=E8=AE=BA</h5>
    <a id=3D"comments" name=3D"comments"></a>
    <div id=3D"bc2373977">
  <div class=3D"comment_title">
    7 =E6=A5=BC
    <a href=3D"http://3117491088.iteye.com/" target=3D"_blank" title=3D"spr=
ingdata-jpa">springdata-jpa</a>
    2015-06-25&nbsp;&nbsp;
   =20
   =20
  </div>
  <div class=3D"comment_content"><a rel=3D"nofollow" target=3D"_blank" href=
=3D"http://www.zuidaima.com/share/kjpa-p1-s1.htm">springdata jpa=E7=9B=B8=
=E5=85=B3demo=E6=BA=90=E4=BB=A3=E7=A0=81=E4=B8=8B=E8=BD=BD</a>=EF=BC=8C=E5=
=9C=B0=E5=9D=80=EF=BC=9A<br><a rel=3D"nofollow" target=3D"_blank" href=3D"h=
ttp://www.zuidaima.com/share/kjpa-p1-s1.htm">http://www.zuidaima.com/share/=
kjpa-p1-s1.htm</a></div>
</div>

<div id=3D"bc2287084">
  <div class=3D"comment_title">
    6 =E6=A5=BC
    <a href=3D"http://gozap-lanbo.iteye.com/" target=3D"_blank" title=3D"go=
zap_lanbo">gozap_lanbo</a>
    2012-10-29&nbsp;&nbsp;
   =20
   =20
  </div>
  <div class=3D"comment_content">=E6=9C=80=E8=BF=91=E6=88=91=E4=B9=9F=E5=9C=
=A8=E5=81=9A=E8=BF=99=E4=B8=AA=E4=BA=8B=E6=83=85=EF=BC=8C=E6=88=91=E6=83=B3=
=E9=97=AE=E4=B8=8B=E5=A6=82=E4=BD=95=E8=AE=A9=E8=87=AA=E5=B7=B1=E5=AE=9A=E4=
=B9=89=E7=9A=84JpaQueryCreator=E7=94=9F=E6=95=88=EF=BC=9F</div>
</div>

<div id=3D"bc2273739">
  <div class=3D"comment_title">
    5 =E6=A5=BC
    <a href=3D"http://tag13346.iteye.com/" target=3D"_blank" title=3D"tag13=
346">tag13346</a>
    2012-08-02&nbsp;&nbsp;
   =20
   =20
  </div>
  <div class=3D"comment_content">=E5=A5=BD=E4=B8=91=E7=9A=84API</div>
</div>

<div id=3D"bc2273737">
  <div class=3D"comment_title">
    4 =E6=A5=BC
    <a href=3D"http://docs.iteye.com/" target=3D"_blank" title=3D"kjj">kjj<=
/a>
    2012-08-02&nbsp;&nbsp;
   =20
   =20
  </div>
  <div class=3D"comment_content">=E6=9C=AC=E8=BA=AB=E5=B0=B1=E6=98=AF=E5=8F=
=98=E6=80=81=E7=9A=84=E5=81=9A=E6=B3=95</div>
</div>

<div id=3D"bc2273733">
  <div class=3D"comment_title">
    3 =E6=A5=BC
    <a href=3D"http://ufopw.iteye.com/" target=3D"_blank" title=3D"ufopw">u=
fopw</a>
    2012-08-02&nbsp;&nbsp;
   =20
   =20
  </div>
  <div class=3D"comment_content">update=E4=B8=8D=E8=A1=8C=EF=BC=9F</div>
</div>

<div id=3D"bc2273680">
  <div class=3D"comment_title">
    2 =E6=A5=BC
    <a href=3D"http://ynby369258.iteye.com/" target=3D"_blank" title=3D"ynb=
y369258">ynby369258</a>
    2012-08-02&nbsp;&nbsp;
   =20
   =20
  </div>
  <div class=3D"comment_content">=E4=BD=95=E5=BF=85=E8=BF=99=E4=B9=88=E9=BA=
=BB=E7=83=A6=E5=95=8A~ =E8=87=AA=E5=B7=B1=E5=86=8D=E5=AE=9A=E4=B9=89=E8=87=
=AA=E5=B7=B1=E7=9A=84=E6=8E=A5=E5=8F=A3=E4=BB=A5=E5=8F=8A=E6=8E=A5=E5=8F=A3=
=E5=AE=9E=E7=8E=B0=E3=80=82=E9=85=8D=E5=90=88datajpa=E4=BD=BF=E7=94=A8=E4=
=B8=8D=E6=98=AF=E5=BE=88=E5=A5=BD=E4=B9=88=EF=BC=9Fdatajpa=E4=B8=8D=E8=83=
=BD=E5=AE=8C=E5=85=A8=E6=BB=A1=E8=B6=B3=E6=88=91=E4=BB=AC=E7=9A=84=E8=A6=81=
=E6=B1=82=EF=BC=8C =E7=9C=8B=E7=9C=8Bspringside4=E7=9A=84=E5=81=9A=E6=B3=95=
=EF=BC=8C=E4=BD=A0=E5=B0=B1=E6=87=82=E4=BA=86...<img src=3D"http://someok.i=
teye.com/images/smiles/icon_cry.gif"> </div>
</div>

<div id=3D"bc2273674">
  <div class=3D"comment_title">
    1 =E6=A5=BC
    <a href=3D"http://jianglijia.iteye.com/" target=3D"_blank" title=3D"jia=
nglijia">jianglijia</a>
    2012-08-02&nbsp;&nbsp;
   =20
   =20
  </div>
  <div class=3D"comment_content">=E8=AF=B4=E4=BA=86=E4=B8=80=E5=A4=A7=E5=A0=
=86=EF=BC=8C=E8=BF=99=E6=98=AF=E5=98=9B=E5=95=8A=EF=BC=9F<img src=3D"http:/=
/someok.iteye.com/images/smiles/icon_surprised.gif"> </div>
</div>


   =20
   =20
  </div>

  <div class=3D"blog_comment">
    <h5>=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA</h5>
            <p style=3D"text-align:center; margin-top:30px;margin-bottom:0p=
x;"><a href=3D"http://someok.iteye.com/login" style=3D"background-color:whi=
te;"> <img src=3D"http://someok.iteye.com/images/login_icon.png" style=3D"v=
ertical-align:middle; margin-right: 10px;"></a><a href=3D"http://someok.ite=
ye.com/login">  =E6=82=A8=E8=BF=98=E6=B2=A1=E6=9C=89=E7=99=BB=E5=BD=95,=E8=
=AF=B7=E6=82=A8=E7=99=BB=E5=BD=95=E5=90=8E=E5=86=8D=E5=8F=91=E8=A1=A8=E8=AF=
=84=E8=AE=BA </a></p>
      </div>
</div>







        </div>

        <div id=3D"local">
          <div class=3D"local_top"></div>
          <div id=3D"blog_owner">
  <div id=3D"blog_owner_logo"><a href=3D"http://someok.iteye.com/"><img alt=
=3D"wjx=E7=9A=84=E5=8D=9A=E5=AE=A2" class=3D"logo" src=3D"http://www.iteye.=
com/upload/logo/user/70120/9d834a78-2719-41f5-b469-ab04e9c6bf55.gif?1236837=
039" title=3D"wjx=E7=9A=84=E5=8D=9A=E5=AE=A2: =E9=83=81=E4=B9=9F=E9=A3=8E -=
 =E6=8A=80=E6=9C=AF=E7=A2=8E=E7=89=87" width=3D""></a></div>
  <div id=3D"blog_owner_name">wjx</div>
</div>

          <div id=3D"blog_actions">
            <ul>
              <li>=E6=B5=8F=E8=A7=88: 33091 =E6=AC=A1</li>
              <li>=E6=80=A7=E5=88=AB: <img alt=3D"Icon_minigender_1" src=3D=
"http://www.iteye.com/images/icon_minigender_1.gif?1324994303" title=3D"=E7=
=94=B7"></li>
              <li>=E6=9D=A5=E8=87=AA: =E4=B8=8A=E6=B5=B7</li>
              <li><img src=3D"http://someok.iteye.com/images/status/offline=
.gif"></li>
             =20
            </ul>
          </div>
          <div id=3D"user_visits" class=3D"clearfix">
            <h5>=E6=9C=80=E8=BF=91=E8=AE=BF=E5=AE=A2 <span style=3D"font-we=
ight:normal;font-size:12px;padding-left:30px;"><a href=3D"http://someok.ite=
ye.com/blog/user_visits">=E6=9B=B4=E5=A4=9A=E8=AE=BF=E5=AE=A2&gt;&gt;</a></=
span></h5>
           =20
              <div class=3D"user_visit">
                <div class=3D"logo"><a href=3D"http://zqzqzq.iteye.com/" ta=
rget=3D"_blank"><img alt=3D"zqzqzq=E7=9A=84=E5=8D=9A=E5=AE=A2" class=3D"log=
o" src=3D"http://www.iteye.com/images/user-logo-thumb.gif?1324994303" title=
=3D"zqzqzq=E7=9A=84=E5=8D=9A=E5=AE=A2: " width=3D"48px"></a></div>
                <div class=3D"left"><a href=3D"http://zqzqzq.iteye.com/" ta=
rget=3D"_blank" title=3D"zqzqzq">zqzqzq</a></div>
              </div>
           =20
              <div class=3D"user_visit">
                <div class=3D"logo"><a href=3D"http://cxl2012.iteye.com/" t=
arget=3D"_blank"><img alt=3D"cxl2012=E7=9A=84=E5=8D=9A=E5=AE=A2" class=3D"l=
ogo" src=3D"http://www.iteye.com/images/user-logo-thumb.gif?1324994303" tit=
le=3D"cxl2012=E7=9A=84=E5=8D=9A=E5=AE=A2: =E8=90=BD=E5=8F=B6=E2=86=92=E7=9F=
=A5=E7=A7=8B" width=3D"48px"></a></div>
                <div class=3D"left"><a href=3D"http://cxl2012.iteye.com/" t=
arget=3D"_blank" title=3D"cxl2012">cxl2012</a></div>
              </div>
           =20
              <div class=3D"user_visit">
                <div class=3D"logo"><a href=3D"http://tangdudream.iteye.com=
/" target=3D"_blank"><img alt=3D"tangduDream=E7=9A=84=E5=8D=9A=E5=AE=A2" cl=
ass=3D"logo" src=3D"http://www.iteye.com/upload/logo/user/551309/25e47e5e-6=
0cd-3475-b734-2c644b452e55-thumb.jpg?1315444847" title=3D"tangduDream=E7=9A=
=84=E5=8D=9A=E5=AE=A2: " width=3D"48px"></a></div>
                <div class=3D"left"><a href=3D"http://tangdudream.iteye.com=
/" target=3D"_blank" title=3D"tangduDream">tangduDream</a></div>
              </div>
           =20
              <div class=3D"user_visit">
                <div class=3D"logo"><a href=3D"http://puff-pig.iteye.com/" =
target=3D"_blank"><img alt=3D"puff_pig=E7=9A=84=E5=8D=9A=E5=AE=A2" class=3D=
"logo" src=3D"http://www.iteye.com/images/user-logo-thumb.gif?1324994303" t=
itle=3D"puff_pig=E7=9A=84=E5=8D=9A=E5=AE=A2: " width=3D"48px"></a></div>
                <div class=3D"left"><a href=3D"http://puff-pig.iteye.com/" =
target=3D"_blank" title=3D"puff_pig">puff_pig</a></div>
              </div>
           =20
          </div>

         =20

                      <div id=3D"blog_menu">
              <h5>=E6=96=87=E7=AB=A0=E5=88=86=E7=B1=BB</h5>
              <ul>
                <li><a href=3D"http://someok.iteye.com/">=E5=85=A8=E9=83=A8=
=E5=8D=9A=E5=AE=A2 (10)</a></li>
               =20
                  <li><a href=3D"http://someok.iteye.com/category/13788">op=
en source (2)</a></li>
               =20
                  <li><a href=3D"http://someok.iteye.com/category/13789">gr=
oovy (1)</a></li>
               =20
                  <li><a href=3D"http://someok.iteye.com/category/13790">ja=
vascript (3)</a></li>
               =20
                  <li><a href=3D"http://someok.iteye.com/category/25544">EX=
T (1)</a></li>
               =20
                  <li><a href=3D"http://someok.iteye.com/category/15313">er=
ror (1)</a></li>
               =20
                  <li><a href=3D"http://someok.iteye.com/category/154355">=
=E4=B8=80=E8=84=91=E9=97=A8=E6=B1=97 (1)</a></li>
               =20
                  <li><a href=3D"http://someok.iteye.com/category/236476">s=
pring data (1)</a></li>
               =20
              </ul>
            </div>
            <div id=3D"month_blogs">
              <h5>=E7=A4=BE=E5=8C=BA=E7=89=88=E5=9D=97</h5>
              <ul>
                <li><a href=3D"http://someok.iteye.com/blog/news">=E6=88=91=
=E7=9A=84=E8=B5=84=E8=AE=AF</a> (0)</li>
                <li>
                  <a href=3D"http://someok.iteye.com/blog/post">=E6=88=91=
=E7=9A=84=E8=AE=BA=E5=9D=9B</a> (8)
                </li>
                <li><a href=3D"http://someok.iteye.com/blog/answered_proble=
ms">=E6=88=91=E7=9A=84=E9=97=AE=E7=AD=94</a> (0)</li>
              </ul>
            </div>
            <div id=3D"month_blogs">
              <h5>=E5=AD=98=E6=A1=A3=E5=88=86=E7=B1=BB</h5>
              <ul>
               =20
                  <li><a href=3D"http://someok.iteye.com/blog/monthblog/201=
2-08">2012-08</a> (1)</li>
               =20
                  <li><a href=3D"http://someok.iteye.com/blog/monthblog/201=
1-04">2011-04</a> (1)</li>
               =20
                  <li><a href=3D"http://someok.iteye.com/blog/monthblog/200=
8-01">2008-01</a> (2)</li>
               =20
                <li><a href=3D"http://someok.iteye.com/blog/monthblog_more"=
>=E6=9B=B4=E5=A4=9A=E5=AD=98=E6=A1=A3...</a></li>
              </ul>
            </div>
           =20
           =20

            <div id=3D"guest_books">
              <h5>=E6=9C=80=E6=96=B0=E8=AF=84=E8=AE=BA</h5>
              <ul>
               =20
                <li>
                  <a href=3D"http://3117491088.iteye.com/" target=3D"_blank=
" title=3D"springdata-jpa">springdata-jpa</a>=EF=BC=9A=20
                  springdata jpa=E7=9B=B8=E5=85=B3demo=E6=BA=90=E4=BB=A3=E7=
=A0=81=E4=B8=8B=E8=BD=BD=EF=BC=8C=E5=9C=B0=E5=9D=80=EF=BC=9Aht ...<br>
                  <a href=3D"http://someok.iteye.com/blog/1616651#bc2373977=
">=E5=9C=A8 Spring Data Jpa =E4=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=E8=BE=91=
=E5=88=A0=E9=99=A4=E9=9C=80=E5=81=9A=E7=9A=84=E5=B7=A5=E4=BD=9C</a>
                </li>
               =20
                <li>
                  <a href=3D"http://danny-chiu.iteye.com/" target=3D"_blank=
" title=3D"danny.chiu">danny.chiu</a>=EF=BC=9A=20
                  =E8=B0=A2=E8=B0=A2=E5=88=86=E4=BA=AB=EF=BC=8C=E4=B8=8D=E7=
=9F=A5=E9=81=93=E7=8E=B0=E5=9C=A8=E6=9C=89=E6=B2=A1=E6=9C=89=E6=9B=B4=E5=A5=
=BD=E7=9A=84=E5=8A=9E=E6=B3=95=EF=BC=8C=E9=80=8F=E6=98=8E=E7=B3=BB=E7=BB=9F=
=E4=B9=9F=E8=87=AA=E5=B8=A6=E4=B8=80=E4=B8=AA=EF=BC=8Can ...<br>
                  <a href=3D"http://someok.iteye.com/blog/1017528#bc2358709=
">=E6=9E=84=E9=80=A0=E4=B8=AA=E5=85=A8=E9=80=8F=E6=98=8E=E7=9A=84Activity</=
a>
                </li>
               =20
                <li>
                  <a href=3D"http://gozap-lanbo.iteye.com/" target=3D"_blan=
k" title=3D"gozap_lanbo">gozap_lanbo</a>=EF=BC=9A=20
                  =E6=9C=80=E8=BF=91=E6=88=91=E4=B9=9F=E5=9C=A8=E5=81=9A=E8=
=BF=99=E4=B8=AA=E4=BA=8B=E6=83=85=EF=BC=8C=E6=88=91=E6=83=B3=E9=97=AE=E4=B8=
=8B=E5=A6=82=E4=BD=95=E8=AE=A9=E8=87=AA=E5=B7=B1=E5=AE=9A=E4=B9=89=E7=9A=84=
JpaQuery ...<br>
                  <a href=3D"http://someok.iteye.com/blog/1616651#bc2287084=
">=E5=9C=A8 Spring Data Jpa =E4=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=E8=BE=91=
=E5=88=A0=E9=99=A4=E9=9C=80=E5=81=9A=E7=9A=84=E5=B7=A5=E4=BD=9C</a>
                </li>
               =20
                <li>
                  <a href=3D"http://tag13346.iteye.com/" target=3D"_blank" =
title=3D"tag13346">tag13346</a>=EF=BC=9A=20
                  =E5=A5=BD=E4=B8=91=E7=9A=84API<br>
                  <a href=3D"http://someok.iteye.com/blog/1616651#bc2273739=
">=E5=9C=A8 Spring Data Jpa =E4=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=E8=BE=91=
=E5=88=A0=E9=99=A4=E9=9C=80=E5=81=9A=E7=9A=84=E5=B7=A5=E4=BD=9C</a>
                </li>
               =20
                <li>
                  <a href=3D"http://docs.iteye.com/" target=3D"_blank" titl=
e=3D"kjj">kjj</a>=EF=BC=9A=20
                  =E6=9C=AC=E8=BA=AB=E5=B0=B1=E6=98=AF=E5=8F=98=E6=80=81=E7=
=9A=84=E5=81=9A=E6=B3=95<br>
                  <a href=3D"http://someok.iteye.com/blog/1616651#bc2273737=
">=E5=9C=A8 Spring Data Jpa =E4=B8=AD=E4=BD=BF=E7=94=A8=E9=80=BB=E8=BE=91=
=E5=88=A0=E9=99=A4=E9=9C=80=E5=81=9A=E7=9A=84=E5=B7=A5=E4=BD=9C</a>
                </li>
               =20
              </ul>
            </div>

            <div class=3D"local_bottom"></div>
         =20
        </div>
      </div>

      <div id=3D"footer" class=3D"clearfix">
        <div id=3D"copyright">
          <hr>
          =E5=A3=B0=E6=98=8E=EF=BC=9AITeye=E6=96=87=E7=AB=A0=E7=89=88=E6=9D=
=83=E5=B1=9E=E4=BA=8E=E4=BD=9C=E8=80=85=EF=BC=8C=E5=8F=97=E6=B3=95=E5=BE=8B=
=E4=BF=9D=E6=8A=A4=E3=80=82=E6=B2=A1=E6=9C=89=E4=BD=9C=E8=80=85=E4=B9=A6=E9=
=9D=A2=E8=AE=B8=E5=8F=AF=E4=B8=8D=E5=BE=97=E8=BD=AC=E8=BD=BD=E3=80=82=E8=8B=
=A5=E4=BD=9C=E8=80=85=E5=90=8C=E6=84=8F=E8=BD=AC=E8=BD=BD=EF=BC=8C=E5=BF=85=
=E9=A1=BB=E4=BB=A5=E8=B6=85=E9=93=BE=E6=8E=A5=E5=BD=A2=E5=BC=8F=E6=A0=87=E6=
=98=8E=E6=96=87=E7=AB=A0=E5=8E=9F=E5=A7=8B=E5=87=BA=E5=A4=84=E5=92=8C=E4=BD=
=9C=E8=80=85=E3=80=82<br>
          =C2=A9 2003-2015 ITeye.com.   All rights reserved.  [ =E4=BA=ACIC=
P=E8=AF=81110151=E5=8F=B7  =E4=BA=AC=E5=85=AC=E7=BD=91=E5=AE=89=E5=A4=87110=
105010620 ]
        </div>
      </div>
    </div>
    <img src=3D"http://stat.iteye.com/?url=3Dhttp%3A%2F%2Fsomeok.iteye.com%=
2Fblog%2F1616651&amp;referrer=3Dhttps%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3D=
i9mPbRutmgu5qE-GCjW0F6txhWgQTf6Z4EFMf1iGIqmmz1TOTWDMTg65TERZ5mMZ%26wd%3D%26=
eqid%3Df82deeed000095a60000000355f6908b&amp;user_id=3D" width=3D"0" height=
=3D"0">



   =20
   =20
 =20

</body></html>
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/line_gray.gif

R0lGODlhAQALAIAAAMzMzP///yH5BAAHAP8ALAAAAAABAAsAAAIDhI9QADs=
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/logo_bg.gif

R0lGODlhOAA4ALMAAMzMzPDw8NXV1f///93d3ff39+bm5tnY3f///wAAAAAAAAAAAAAAAAAAAAAA
AAAAACH5BAEHAAgALAAAAAA4ADgAAAT/EB1Aq704610P+t80jGRpnmiqkoAHAgMoz3Rt3/QABG+M
/8AgQmcofGDCpBKkIwSMyKUUqBMUEdGptlZ1Yn3bMBMgcBay4nD3iU5r12ew+002t+dL+B2f1Mv5
Sn6AU4KDeXVsf4ZUiHGLgY17jzaFk4xliZZBlZo3nJ1ckYqgMp+kpaKnlKmqOaytqJiOsLF2o6qm
rbm4r7RDvbS7p8KkxKDGnciaypbMk86P0IvShtSD1oDYfNp43HPebnAiK+Tl5jqNEhzr7O0VZWYf
AQYEAvb3+Pn6+/z99gQGnoCYR6CgwYMIEypcyLBgQIEDA0icSLGixYsYM1IsYEQGx48gCEOKHEmy
5MgIADs=
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/logo-small.gif

R0lGODlhSQAVAMQAAMfT3ixZg/H09+Pp7qq8zTpkjNXe5nORrbjH1khvlGWGpIGctZyxxeGHaddb
Mt98W9xxTeyyn9RQJPz08eedhPTTyOSSdumnkfrp5O+9rffe1o6mvVZ6nB5Oe////wAAACH/C1hN
UCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtj
OWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUg
WE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAi
PiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5
bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6
Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29t
L3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NU
eXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdp
bmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6Q0ZEMjQ1MjY1QUFCMTFFMDgzM0FBNzMw
NkNBMkU5MUUiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6Q0ZEMjQ1Mjc1QUFCMTFFMDgzM0FB
NzMwNkNBMkU5MUUiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
ZDpDRkQyNDUyNDVBQUIxMUUwODMzQUE3MzA2Q0EyRTkxRSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1w
LmRpZDpDRkQyNDUyNTVBQUIxMUUwODMzQUE3MzA2Q0EyRTkxRSIvPiA8L3JkZjpEZXNjcmlwdGlv
bj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf2
9fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769
vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWE
g4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxL
SklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMS
ERAPDg0MCwoJCAcGBQQDAgEAACH5BAAAAAAALAAAAABJABUAAAX/oCeO3mQ1ZKqubOu+reY41ATf
eI5DtBPpwKAuI7lIGj+hcqlqQBqPB4RJrVYqDwxnS/Bsv2COgWRgbDaI0QA8IDG+i5GAcCa0lZ38
xpPv+zsAIgAFfwF7Xn0KcgF9aQIHfx0cd0B9e5F+gQSYeRwCA5kikJ0eBoyYAWOVenycgAiueYob
fQUeAH4DAoSuAZQ4liQcfYEivJ0bo8S7fQwJwbS1CxvHHQerHYciw3nFm31ddAinHYqwkQUCHuQJ
nxsEyh3qOcEj3IAiC33X0QHfHQG2RUpjwM+nUwyOpaHHyh4xgXnS3MPVRwQoPxwE9clIUZK+hsBA
IuoGsUOXfvNSfETLo6pjAg8CTnXBI3KiiJUvPdD5RUJAnzgWQw3YUIxmNmEPS/lRcEfVinoinuUJ
UMypEKgj8ZXM8yxAyhRYz/UJQEhbEKw2LZLzc+2pSA/xxn7VgTapCAPV7JLAKgpT27M19cKkNvYA
TxF8BSnwk2BmlRwCABwOYsAqixAAOw==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/gray_east_arrow.gif

R0lGODlhCAALAJEAAKOjo////////wAAACH5BAEHAAIALAAAAAAIAAsAAAIRlH8AaLroXospPlsV
1Jt5UwAAOw==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/icon_more.gif

R0lGODlhKgALAIAAANl3Lv///yH5BAAHAP8ALAAAAAAqAAsAAAI/jI+pywsPo5y0RmOzzpjDACQh
Mh5T94ASxn6hq1bouL5gfJPiGtMXDHwJZb1eCqZL5Uy8jfPpg0opjar1GigAADs=
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/digged_bottom.gif

R0lGODlhSAA7ANUAAPd7StDR1fiVWf6RW/j9+szMzPeKVPf39/+ZZvV+UOvq6/yLU/aHUf+pcf+Z
Zvetcv2CUv+jZvaDS/////+sdPmiaP/09/+ta/mOWvmtiNHU0/2aXv+PWdTQz/+ESv+uefiGWf/7
7/f3//+ma/97Sv+ZZtbT1PDv8P+nff34/NPR1P39+NbTz////wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEHAC0ALAAAAABIADsAAAb/wJZw
SCwaj8ikcpn8OB+PhnRKrVqv1JF2y+2ONuBwWEA2Pj6piXrNZq/e77Z8vobb73g7g0F0hhoXWIIN
XoWGWxURihsYC46PkI8rBhlDFCkNKFqDV4eeW4qLGwakkaaOKXxCDRMXrhcUWJ+zWqG2AwMGe7u8
vbsTBkMPE4CuH7SftsrKYAu+DKeRwMLEUxfItMu2oxIS0NHgKwtDrFPY2dobHM694NET46vVVue1
2qGMGHuPu+6n8OTm1bN3D5+AZ7z8mQIob+CIgspw6ULYTyEkhi1Y1SsohtHEb5B8WbwYr8WICdgg
inFEEeHIRxhHrEDHMZ++iqaevXQUc+as/3thMGAgRZQozkhHLWLUWAhiBDAcOOwBQBVCy6svY6Js
mm6DxG4SqFa9ilVpyZOJnIIRSiqB27dvGRSdS7cuKZcwz06I8HBZmAEs4Qp2u8eu4boKtd6TaCCs
WACD41IsusswWYwVJlTY/Lfx48+PIcBtSZnXYcPihmQOaiAB6NewW+5UmFrIBgsGYH+GKzYyO5Ev
IQgfTpzUpCEQJuh+zPs1XLs7iRcnelxIAuXLqTaH7LY3YZ3BpQsvWr0FgBXZtb9l7nu2KfHjqQcT
cj499+7eB7t/D5/8fPPYZbfdfYKRldAp8EHg3xAABKibYOwNhlBkCUST4IL0obfcYBFS6P8hXPst
UN55rsEWWYcffhjiiMqt92CKMEa2z0jCMTABBAxqmB+Ezr1FHIUtiefhLzhat8KAu8Wo5GjgndIN
BCmAMEQCISQg2pJY+thfXRQpaMAKUgqhgRoHHDDBAXmkqeaabLb5RggTsDCEBnjQYeedeOYpxx0d
zLmCCHmmIOigKZRp6KGIJqqonmqkoUafQgRwB6MTEKDopZgayugdKgyhQqUEhEroqKQWmumpiJaq
6qATaDCECY2uuiqqtJY5gaxshEpAq6+CKquqtdL6a6m8CvGprsgmq2yowZ667LPIFtvCp2VCq2yz
2Cr6rLSwZuvtt5dyeya45IIrLbXlpot9LbeWqusurdJ2MG6tJ9Rb77vYEgBpC/Jmay++2LoqRL/Y
/gtwrRMUMES/9jbs8MMQRyzxxBQfQIDALRRwJsUcd+wxx7bu24GpB3xs8skgl7lvCh3sSunLMFNa
gAJDPFrAzTjnrPPOPPfs888+K3ACE0QXbfTRSCet9NJCBAEAOw==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/blog/search.gif

R0lGODlhFQAVALMAAM7OzsHBwfv7++Tk5Nzc3NfX183NzeDg4N3d3dPT0+3t7bi4uP///wAAAAAA
AAAAACH5BAAAAAAALAAAAAAVABUAAARqkMlJq704MwWWX4CiScVnLoWWeMGgKEPgJZgyC5SwLqLV
BbiKQAa4eAaYgcfIqy0tnp7FtmAiL8qqbwG0DEEXaiIo0XkOmF3rFfvQMKXT6R3ufACH3YI+mugN
fRV6CIEUBh4EhRQEiYoYEQA7
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/stylesheets/blog.css?1442202041

.stretch, .clear { clear: both; height: 1px; margin: 0px; padding: 0px; fon=
t-size: 15px; line-height: 1px; }

.clearfix::after { content: "."; display: block; height: 0px; clear: both; =
visibility: hidden; }

.clearfix { display: inline-table; }

* html .clearfix { height: 1%; }

* + html .clearfix { height: 1%; }

.clearfix { display: block; }

.replace { display: block; background-color: transparent; background-positi=
on: 0% 0%; background-repeat: no-repeat; }

.replace * { text-indent: -10000px; display: block; background-color: trans=
parent; background-position: 0% 0%; background-repeat: no-repeat; }

.replace a { text-indent: 0px; }

.replace a span { text-indent: -10000px; }

span.accesskey { text-decoration: none; }

.accessibility { position: absolute; top: -999em; left: -999em; }

body { text-align: left; font-family: Helvetica, Tahoma, Arial, sans-serif;=
 font-size: 12px; line-height: 1.5; color: black; }

img { border: 0px; }

h1 { font-size: 2em; line-height: 1.5em; margin: 0px 0px 0.5em; padding: 0p=
x; color: black; }

h2 { font-size: 1.5em; line-height: 1.5em; margin: 0px 0px 0.5em; padding: =
0px; color: black; }

h3 { font-size: 1.2em; line-height: 1.5em; margin: 0px 0px 0.5em; padding: =
0px; color: black; }

h4 { font-size: 1.15em; line-height: 1.3em; margin: 0px 0px 0.25em; padding=
: 0px; color: black; }

h5 { font-size: 1.1em; line-height: 1.3em; margin: 0px 0px 0.25em; padding:=
 0px; color: black; }

h6 { font-size: 1em; line-height: 1.3em; margin: 0px 0px 0.25em; padding: 0=
px; color: black; }

p { margin: 0px; padding: 0px; }

blockquote { border-left-width: 10px; border-left-style: solid; border-left=
-color: rgb(221, 221, 221); margin-left: 10px; }

pre { font-family: monospace; font-size: 1em; }

strong, b { font-weight: bold; }

em, i { font-style: italic; }

code { font-family: 'Courier New', Courier, monospace; font-size: 1em; whit=
e-space: pre; }

ul { margin: 0px 0px 1.5em; padding: 0px; }

ul li { margin: 0px 0px 0.25em 30px; padding: 0px; }

ol { font-size: 1em; line-height: 1.4em; margin: 0px 0px 1.5em; padding: 0p=
x; }

ol li { font-size: 1em; margin: 0px 0px 0.25em 30px; padding: 0px; }

dl { margin: 0px 0px 1.5em; padding: 0px; line-height: 1.4em; }

dl dt { margin: 0.25em 0px; padding: 0px; }

dl dd { margin: 0px 0px 0px 30px; padding: 0px; }

th { font-weight: bold; text-align: left; }

td { font-size: 1em; }

hr { height: 1px; margin: 1.5em 10px; border-bottom-color: black; border-bo=
ttom-width: thin; }

div.topic_page { color: rgb(0, 102, 153); }

form { margin: 0px; padding: 0px; clear: both; }

form div, form p { font-size: 1em; margin: 0px 0px 1em; padding: 0px; }

label { font-weight: bold; float: left; width: 25%; }

fieldset { border: 1px solid rgb(238, 238, 238); padding: 5px 10px; margin:=
 0px; }

fieldset legend { color: rgb(102, 102, 102); font-size: 1.1em; font-weight:=
 bold; margin: 0px; padding: 0px; }

* html fieldset legend { margin: 0px 0px 10px -10px; }

fieldset ul { list-style: none; margin: 0px 0px 1.5em; padding: 0px; }

fieldset ul li { list-style: none; margin: 0px 0px 0.5em; padding: 0px; }

input.text, select, textarea { margin: 0px; border: 1px solid rgb(0, 102, 1=
53); padding: 1px 3px; vertical-align: middle; }

input.text { height: 18px; font-family: Arial, sans-serif, Verdana, Tahoma,=
 Helvetica; }

input.check { border: none; width: auto; height: auto; margin: 0px; }

input.radio { border: none; width: auto; height: auto; margin: 0px; }

input.file { height: auto; width: 250px; }

input.readonly { border: none; background-color: transparent; }

input.button, input.submit { color: white; cursor: pointer; font-size: 1em;=
 height: 23px; padding: 2px 5px; border: 1px solid rgb(210, 243, 253); vert=
ical-align: middle; background: rgb(0, 102, 153); }

input.image { border: none; width: auto; height: auto; }

textarea { font-size: 1em; }

form div.submit { margin: 1em 0px; }

form div.submit input { height: 2em; width: 15em; }

div#nav div.wrapper { position: absolute; left: 0px; bottom: 0px; width: 10=
0%; font-size: 13px; padding-bottom: 6px; background: url(http://www.iteye.=
com/images/shadow.png) 0% 100% repeat-x rgb(98, 147, 187); }

div#nav ul { width: 100%; margin: 0px; padding: 0px; }

div#nav li { float: left; display: inline; list-style: none; margin: 0px; p=
adding: 0px 10px; line-height: 1em; background-image: url(http://www.iteye.=
com/images/line_white.gif); background-position: 100% 50%; background-repea=
t: no-repeat; }

div#nav li.last { background: none; }

div#nav a, div#nav a:link, div#nav a:active, div#nav a:visited { display: b=
lock; font-weight: bold; text-decoration: none; margin: 0px; padding: 7px 1=
3px; color: white; }

div#nav .subnav a, div#nav .subnav a:link, div#nav .subnav a:active, div#na=
v .subnav a:visited { display: inline-block; padding: 7px 6px; }

div#nav a:hover, div#nav a.selected { background-color: rgb(54, 113, 165); =
}

div#content { position: relative; width: 701px; margin: 0px auto 20px; padd=
ing: 0px; text-align: left; }

div#main { float: right; width: 500px; display: inline; }

div#local { float: left; width: 200px; display: inline; }

div#sub { display: none; }

div#nav { position: absolute; top: -15px; left: 0px; width: 100%; text-alig=
n: left; }

body { margin: 0px; padding: 0px; text-align: center; background: white; }

div#page { width: 950px; margin: 0px auto; padding: 0px; text-align: center=
; background: white; }

div#header { padding: 0px; margin: 0px; color: white; background-color: whi=
te; }

div#branding { float: left; width: 200px; margin: 1px 0px; text-align: left=
; }

div#search { float: right; width: 49%; margin: 0px; padding: 16px 20px 0px =
0px; text-align: right; }

div#content { width: 100%; margin-top: 35px; }

div#footer { color: black; background-color: white; }

div#footer p { font-size: 0.8em; margin: 0px; padding: 15px; }

ul.subnav { margin: 0px; padding: 0px; font-size: 0.8em; list-style: none; =
}

ul.subnav li { margin: 0px 0px 1em; padding: 0px; list-style: none; }

ul.subnav li a, ul.subnav li a:link, ul.subnav li a:visited, ul.subnav li a=
:active { text-decoration: none; font-weight: bold; color: black; }

ul.subnav li a:hover { text-decoration: underline; }

ul.subnav li strong { padding: 0px 0px 0px 12px; background: url(http://www=
.iteye.com/i/subnav-highlight.gif) 0% 0% no-repeat transparent; }

ul.subnav li strong a, ul.subnav li strong a:link, ul.subnav li strong a:vi=
sited, ul.subnav li strong a:active { color: white; background-color: black=
; }

.nav_side { margin: 0px 0px 10px; border: 1px solid rgb(202, 204, 201); bac=
kground: rgb(244, 246, 243); }

.nav_side ul { margin: 0px; }

.nav_side li { height: 37px; overflow: hidden; margin: 0px 5px; padding: 0p=
x; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-colo=
r: rgb(227, 234, 240); color: rgb(0, 102, 153); font-size: 14px; line-heigh=
t: 37px; text-indent: 38px; }

.nav_side li a { display: block; height: 37px; color: rgb(0, 102, 153); tex=
t-decoration: none; }

.nav_side li a:hover { color: rgb(255, 88, 10); text-decoration: none; }

.nav_side li.last { height: 38px; border-bottom-style: none; }

.nav_side li.select { height: 38px; margin: 0px; border-bottom-style: none;=
 background: url(http://www.iteye.com/images/sidenav_select_bg.gif) 0px 0px=
 no-repeat; }

.nav_side li.select a { height: 38px; color: rgb(255, 255, 255); font-weigh=
t: bold; }

.nav_side #mobile { background: url(http://www.iteye.com/images/icon_sidena=
v.png) 5px 3px no-repeat; }

.nav_side #web { background: url(http://www.iteye.com/images/icon_sidenav.p=
ng) 5px -49px no-repeat; }

.nav_side #architecture { background: url(http://www.iteye.com/images/icon_=
sidenav.png) 5px -102px no-repeat; }

.nav_side #language { background: url(http://www.iteye.com/images/icon_side=
nav.png) 5px -155px no-repeat; }

.nav_side #internet { background: url(http://www.iteye.com/images/icon_side=
nav.png) 5px -206px no-repeat; }

.nav_side #opensource { background: url(http://www.iteye.com/images/icon_si=
denav.png) 5px -260px no-repeat; }

.nav_side #os { background: url(http://www.iteye.com/images/icon_sidenav.pn=
g) 5px -310px no-repeat; }

.nav_side #database { background: url(http://www.iteye.com/images/icon_side=
nav.png) 5px -361px no-repeat; }

.nav_side #develop { background: url(http://www.iteye.com/images/icon_siden=
av.png) 5px -412px no-repeat; }

.nav_side #industry { background: url(http://www.iteye.com/images/icon_side=
nav.png) 5px -466px no-repeat; }

.nav_side #other { background: url(http://www.iteye.com/images/icon_sidenav=
.png) 5px -568px no-repeat; }

.nav_side #all { background: url(http://www.iteye.com/images/elite_sidenav.=
png) 5px -260px no-repeat; }

.nav_side li.select #mobile { background: url(http://www.iteye.com/images/i=
con_sidenav.png) 10px 3px no-repeat; }

.nav_side li.select #web { background: url(http://www.iteye.com/images/icon=
_sidenav.png) 10px -49px no-repeat; }

.nav_side li.select #architecture { background: url(http://www.iteye.com/im=
ages/icon_sidenav.png) 10px -102px no-repeat; }

.nav_side li.select #language { background: url(http://www.iteye.com/images=
/icon_sidenav.png) 10px -155px no-repeat; }

.nav_side li.select #internet { background: url(http://www.iteye.com/images=
/icon_sidenav.png) 10px -206px no-repeat; }

.nav_side li.select #opensource { background: url(http://www.iteye.com/imag=
es/icon_sidenav.png) 10px -260px no-repeat; }

.nav_side li.select #os { background: url(http://www.iteye.com/images/icon_=
sidenav.png) 10px -310px no-repeat; }

.nav_side li.select #database { background: url(http://www.iteye.com/images=
/icon_sidenav.png) 10px -361px no-repeat; }

.nav_side li.select #develop { background: url(http://www.iteye.com/images/=
icon_sidenav.png) 10px -412px no-repeat; }

.nav_side li.select #industry { background: url(http://www.iteye.com/images=
/icon_sidenav.png) 10px -466px no-repeat; }

.nav_side li.select #other { background: url(http://www.iteye.com/images/ic=
on_sidenav.png) 10px -568px no-repeat; }

.nav_side li.select #all { background: url(http://www.iteye.com/images/elit=
e_sidenav.png) 10px -259px no-repeat; }

a { color: rgb(0, 102, 153); text-decoration: none; }

a:hover, a:active { color: rgb(188, 42, 77); text-decoration: underline; }

blockquote { border: 1px solid rgb(204, 204, 204); background-color: rgb(25=
0, 250, 250); }

cite { font-weight: bold; margin-left: 3px; }

div#user_nav { margin: 3px 0px 0px; padding: 2px; text-align: right; float:=
 right; }

div#user_nav a.nobg { background: none; }

div#user_nav a.welcome { color: rgb(226, 136, 34); font-weight: bold; paddi=
ng-right: 10px; }

div#user_nav a:hover.welcome { text-decoration: none; color: rgb(226, 136, =
34); background-color: transparent; }

div#user_nav a.new_reply { color: red; padding-left: 0px; }

div#user_nav a:hover.new_reply { text-decoration: none; color: red; backgro=
und-color: transparent; }

div#user_nav a { text-decoration: none; padding: 2px 6px 1px; color: gray; =
line-height: 1em; background-image: url(http://www.iteye.com/images/line_gr=
ay.gif); background-position: 100% 50%; background-repeat: no-repeat; }

div#user_nav a:hover { text-decoration: underline; color: white; background=
-color: gray; }

div.quick_menu { border: 1px solid rgb(221, 221, 221); text-align: left; to=
p: 30px; position: absolute; width: 70px; z-index: 9999; background-color: =
white; }

div.quick_menu a { display: block !important; padding: 3px 6px 3px 10px !im=
portant; text-decoration: none !important; line-height: 20px !important; ba=
ckground-image: none !important; }

div#location_ad { float: left; margin-top: 5px; padding-left: 12px; backgro=
und-image: url(http://www.iteye.com/images/yellow_east_arrow.gif); backgrou=
nd-position: 0% 50%; background-repeat: no-repeat; }

div#site_nav ul { width: 100%; margin: 0px; padding: 0px; line-height: 1em;=
 list-style: none; }

div#site_nav li { display: inline; list-style: none; margin: 0px; padding: =
3px 10px; line-height: 1em; border-right-width: 1px; border-right-style: so=
lid; border-right-color: rgb(170, 170, 170); }

div#site_nav li.last { border-right-style: none; }

div#channel_nav { position: absolute; left: 0px; top: 0px; }

div#channel_nav ul { width: 100%; margin: 0px; padding: 0px; line-height: 1=
em; list-style: none; }

div#channel_nav li { display: inline; float: left; list-style: none; margin=
: 0px; line-height: 1em; border-width: 1px 0px 1px 1px; border-top-style: s=
olid; border-bottom-style: solid; border-left-style: solid; border-top-colo=
r: rgb(254, 221, 202); border-bottom-color: rgb(254, 221, 202); border-left=
-color: rgb(254, 221, 202); }

div#channel_nav li.last { border-right-width: 1px; border-right-style: soli=
d; border-right-color: rgb(254, 221, 202); }

div#channel_nav a { display: block; text-decoration: none; margin: 0px; pad=
ding: 4px 25px; color: green; }

div#channel_nav a:hover, div#channel_nav a.selected { background-color: rgb=
(254, 221, 202); }

div#gg { float: right; margin: 2px 0px; width: 728px; }

div#copyright { padding: 10px; }

.pagination { padding: 5px; float: right; }

.pagination a, .pagination a:link, .pagination a:visited { padding: 2px 5px=
; margin: 2px; border: 1px solid rgb(170, 170, 221); text-decoration: none;=
 color: rgb(0, 102, 153); }

.pagination a:hover, .pagination a:active { border: 1px solid rgb(0, 102, 1=
53); color: rgb(0, 0, 0); text-decoration: none; }

.pagination span.current { padding: 2px 5px; margin: 2px; border: 1px solid=
 rgb(0, 102, 153); font-weight: bold; color: rgb(255, 255, 255); background=
-color: rgb(0, 102, 153); }

.pagination span.disabled { padding: 2px 5px; margin: 2px; border: 1px soli=
d rgb(238, 238, 238); color: rgb(221, 221, 221); }

a.underline, .underline a { text-decoration: underline; }

.hilite1 { background-color: rgb(255, 255, 0); }

.hilite2 { background-color: rgb(85, 255, 85); }

.hilite3 { background-color: rgb(170, 255, 170); }

.hilite4 { background-color: rgb(0, 255, 255); }

span.arrow { font-weight: normal; font-size: 0.9em; color: rgb(153, 153, 15=
3); }

.validation-advice { margin: 0px; padding: 0px 0px 0px 3px; color: rgb(255,=
 51, 0); font-weight: bold; }

.odd { background-color: rgb(239, 250, 255); }

.highlight, .highlight a, .highlight a:link, .highlight a:active, .highligh=
t a:visited { font-weight: bold; text-decoration: none; color: rgb(226, 136=
, 34); }

.highlight a:hover { text-decoration: none; color: rgb(255, 255, 255); back=
ground-color: rgb(226, 136, 34); }

.rss { margin-right: 5px; padding-right: 50px; background-image: url(http:/=
/www.iteye.com/images/rss.png); background-position: 100% 50%; background-r=
epeat: no-repeat; }

.row1 { width: 155px; font-weight: bold; background-color: rgb(239, 239, 23=
9); }

.row2 { background-color: rgb(222, 227, 231); }

.row3 { background-color: rgb(238, 238, 238); }

.crumbs a { text-decoration: underline; }

.flash_error, .flash_notice { font-weight: bold; padding: 10px 40px; margin=
: 0px 10px; background-repeat: no-repeat; }

.flash_error { color: rgb(255, 51, 0); background-image: url(http://www.ite=
ye.com/images/icon_error_lrg.gif); }

.flash_notice { background-image: url(http://www.iteye.com/images/icon_succ=
ess_lrg.gif); }

select.validation-failed, input.validation-failed, textarea.validation-fail=
ed { border: 3px solid rgb(255, 0, 0); }

* html select.validation-failed { background-color: rgb(255, 0, 0); }

span.field_error { display: none; }

div.quote_title { font-weight: bold; padding: 5px; margin: 5px 0px 0px 15px=
; }

div.quote_div { border: 1px solid rgb(204, 204, 204); margin: 0px 5px 5px 1=
5px; padding: 3px; background: rgb(250, 250, 250); }

div.attachments { border-top-width: 1px; border-top-style: solid; border-to=
p-color: rgb(153, 153, 153); margin-top: 10px; }

div.attachments ul, div.postauthor ul { list-style: none; }

div.attachments ul { margin: 5px; padding: 5px; border: 1px solid rgb(204, =
204, 204); }

img.magplus { cursor: url(http://www.iteye.com/images/magplus.gif), pointer=
; }

div.logo { float: left; padding: 2px 6px 6px 2px; background-image: url(htt=
p://www.iteye.com/images/logo_bg.gif); background-repeat: no-repeat; }

span.thumb_box { display: table-cell; vertical-align: middle; height: 95px;=
 width: 130px; text-align: center; border: 1px solid rgb(204, 204, 204); }

span.thumb_box img { vertical-align: middle; }

.right { float: right; }

.left { float: left; }

table.bbcode { border: 1px solid rgb(204, 204, 204); }

table.bbcode td { border: 1px solid rgb(204, 204, 204); padding: 3px; }

div#search_engine_box { text-align: left; position: fixed; bottom: 0px; rig=
ht: 0px; width: 240px; border: 1px solid rgb(204, 204, 204); background-col=
or: white; }

#search_engine_box h2 { padding: 5px; color: white; font-size: 12px; font-w=
eight: normal; background-color: rgb(82, 110, 166); }

#search_engine_box h2 span { color: black; }

#search_engine_box h2 a { color: white; position: absolute; right: 5px; }

#search_engine_box div { padding: 0px 5px; }

#search_engine_box li { margin-left: 15px; list-style: square; }

* html div#search_engine_box { position: absolute; right: auto; bottom: aut=
o; }

div#chat_button { text-align: right; position: fixed; bottom: 0px; right: 1=
0px; width: 80px; border: 1px solid rgb(204, 204, 204); padding: 2px; verti=
cal-align: middle; background-color: rgb(238, 238, 238); }

div#chat_input { position: fixed; bottom: 25px; right: 10px; text-align: le=
ft; }

#chat_iframe { width: 360px; background-color: transparent; }

div#chat_button img { vertical-align: middle; }

* html div#chat_button { position: absolute; right: auto; bottom: auto; }

* html div#chat_input { position: absolute; right: auto; bottom: auto; }

.tooltip { overflow: hidden; font-size: 12px; position: absolute !important=
; z-index: 10000 !important; }

.tooltip .xtop, .tooltip .xbottom { display: block; font-size: 1px; backgro=
und: transparent; }

.tooltip .xb1, .tooltip .xb2, .tooltip .xb3, .tooltip .xb4 { display: block=
; overflow: hidden; }

.tooltip .xb1, .tooltip .xb2, .tooltip .xb3 { height: 1px; }

.tooltip .xb2, .tooltip .xb3, .tooltip .xb4 { border-left-width: 1px; borde=
r-left-style: solid; border-left-color: rgb(51, 51, 51); border-right-width=
: 1px; border-right-style: solid; border-right-color: rgb(51, 51, 51); back=
ground: rgb(102, 102, 102); }

.tooltip .xbottom .xb2, .tooltip .xbottom .xb3, .tooltip .xbottom .xb4 { ba=
ckground: rgb(102, 102, 102); }

.tooltip .xb1 { margin: 0px 5px; background: rgb(51, 51, 51); }

.tooltip .xb2 { margin: 0px 3px; border-width: 0px 2px; }

.tooltip .xb3 { margin: 0px 2px; }

.tooltip .xb4 { height: 2px; margin: 0px 1px; }

.tooltip .xboxcontent { margin: 0px; color: rgb(0, 0, 0); text-shadow: rgb(=
204, 204, 204) 2px 2px 0px; word-wrap: break-word; border-style: solid; bor=
der-color: rgb(51, 51, 51); border-width: 0px 1px; padding: 0px 20px; font-=
size: 125%; text-align: center; background-color: rgb(102, 102, 102); }

div#site_nav, div#channel_nav { z-index: 1; }

div#header { z-index: 2; position: relative; }

.logo a:hover { background-color: inherit; }

input#login_button { width: 147px; height: 34px; cursor: pointer; border: 0=
px none; font-size: 0px; color: rgb(0, 86, 173); background: url(http://www=
.iteye.com/images/login_button.jpg) no-repeat; }

#favorite_form_container { width: 580px; height: 250px; padding: 10px; text=
-align: left; position: absolute; z-index: 777; font-size: 12px; background=
: url(http://www.iteye.com/images/app/bg_new.png) no-repeat; }

#favorite_form_container .cont { width: 580px; height: 250px; background: r=
gb(255, 255, 255); }

#favorite_form_wrapper { position: relative; padding-left: 15px; }

#close_list { overflow: hidden; text-align: right; border-bottom-width: 1px=
; border-bottom-style: dashed; border-bottom-color: rgb(204, 204, 204); pad=
ding: 5px 10px; margin-bottom: 20px; width: 560px; background: rgb(238, 238=
, 238); }

#favorite_form_close { cursor: pointer; }

#favorite_form_success { text-align: center; font-size: 18px; margin-top: 7=
0px; }

#favorite_form_success img { vertical-align: bottom; margin-right: 10px; }

#current_tags_panel { margin: 10px 0px 0px; }

#current_tags_panel span { display: inline-block; margin: 0px 5px 5px 0px; =
padding: 0px 10px; color: rgb(255, 255, 255); border-radius: 30px; backgrou=
nd-color: rgb(93, 122, 155); }

#suggested_tags_panel { margin: 10px 0px 0px; }

#suggested_tags_panel a { display: inline-block; margin: 0px 5px 5px 0px; p=
adding: 0px 10px; border-radius: 30px; background-color: rgb(170, 181, 195)=
; }

#suggested_tags_panel a { color: rgb(255, 255, 255); text-decoration: none;=
 }

#suggested_tags_panel a:hover, #suggested_tags_panel a.added { background-c=
olor: rgb(248, 123, 0); }

.news_tag { clear: both; display: block; margin: 10px 0px 5px; line-height:=
 20px; }

.news_tag::after { content: "."; display: block; height: 0px; clear: both; =
visibility: hidden; }

.news_tag a { display: inline-block; margin: 0px 5px 5px 0px; padding: 0px =
10px; border-radius: 10px; color: rgb(255, 255, 255); text-decoration: none=
; background-color: rgb(170, 181, 195); }

.news_tag a:hover, #suggested_tags_panel a.added { background-color: rgb(24=
8, 123, 0); }

.news_tag span.hilite1 { background-color: transparent; }

.news_tag span.view_all { float: right; }

.news_tag span.view_all a { padding: 0px 6px; color: rgb(0, 102, 153); text=
-decoration: underline; background: none; }

.title .news_tag { text-align: center; }

.category_tags { margin-top: 10px; padding: 5px 0px; }

.category_tags a { display: inline-block; height: 20px; margin: 0px 6px 0px=
 0px; padding: 0px 0px 0px 12px; color: rgb(255, 255, 255); line-height: 20=
px; text-decoration: none; background: url(http://www.iteye.com/images/tag_=
bg.gif) 0% 0% no-repeat; }

.category_tags a span { display: inline-block; height: 20px; padding: 0px 1=
2px 0px 0px; background: url(http://www.iteye.com/images/tag_bg.gif) 100% 0=
% no-repeat; }

.category_tags a:hover, .category_tags a.pick_on { background: url(http://w=
ww.iteye.com/images/tag_bg_3.gif) 0% 0% no-repeat; }

.category_tags a:hover span, .category_tags a.pick_on span { background: ur=
l(http://www.iteye.com/images/tag_bg_3.gif) 100% 0% no-repeat; }

#user_nav #notifications_count { margin: 0px 0px 0px -5px; border: 1px soli=
d rgb(204, 204, 204); border-radius: 3px; font-weight: bold; text-decoratio=
n: none; line-height: 24px; background: rgb(255, 255, 255); }

#user_nav a:hover#notifications_count { border: 1px solid transparent; bord=
er-radius: 3px; color: rgb(255, 255, 255); background: rgb(0, 110, 181); }

#user_nav #notifications_count.new_notice { border: 1px solid transparent; =
border-radius: 3px; color: rgb(255, 255, 255); background: rgb(0, 110, 181)=
; }

#user_nav .clicked { color: rgb(255, 255, 255); background: url(http://www.=
iteye.com/images/sms_click_bg.gif) 50% 0% no-repeat !important; }

#notifications_menu { position: absolute; top: 26px; right: 10px; color: bl=
ack; width: 380px; text-align: left; border: 1px solid rgb(221, 221, 221); =
box-shadow: rgb(136, 136, 136) 0px 1px 5px; overflow: hidden; z-index: 999;=
 background-color: white; }

#notifications_loading { padding: 0px 5px; width: 60px; position: absolute;=
 left: 150px; background-color: yellow; }

#notifications_menu .menu_title { height: 36px; overflow: hidden; padding: =
0px 10px; border-bottom-style: solid; border-bottom-width: 1px; border-bott=
om-color: rgb(221, 221, 221); line-height: 34px; }

#notifications_menu .menu_title a { color: rgb(51, 51, 51); text-decoration=
: underline; }

#notifications_menu .menu_title a:hover { background: none; }

#notifications_menu .menu_title .title { float: left; }

#notifications_menu .menu_title .all { float: right; }

#notifications_menu .notification_summary { border-bottom-width: 1px; borde=
r-bottom-style: solid; border-bottom-color: rgb(221, 221, 221); padding: 10=
px; cursor: pointer; color: rgb(51, 51, 51); overflow: hidden; background-c=
olor: rgb(246, 250, 252); }

#notifications_menu .notification_summary .time { color: rgb(153, 153, 153)=
; }

#notifications_menu .notification_summary.unread { font-weight: bold; backg=
round-color: rgb(255, 255, 255); }

#notifications_menu .notification_summary.unread .time { color: rgb(51, 51,=
 51); font-weight: normal; }

#notifications_menu .notification_summary.current, #notifications_menu .not=
ification_summary:hover { background-color: rgb(219, 235, 244); }

#notifications_menu .show_all, #notifications_menu .return { cursor: pointe=
r; }

#notifications_menu .notification_detail { }

#notifications_menu .notification_detail_title { position: relative; margin=
: 0px 0px 5px; padding: 4px 10px; overflow: hidden; border-bottom-style: so=
lid; border-bottom-width: 1px; border-bottom-color: rgb(238, 238, 238); lin=
e-height: 26px; background: rgb(250, 250, 250); }

#notifications_menu .notification_detail_title .subject_link { display: blo=
ck; }

#notifications_menu .notification_detail_title .time { position: absolute; =
top: 4px; right: 10px; }

#notifications_menu .notification_detail_notice { margin: 5px 0px 0px; padd=
ing: 5px 10px 10px; color: rgb(153, 153, 153); background: url(http://www.i=
teye.com/images/line_1.gif) 50% 0% repeat-x; }

#notifications_menu .notification_detail_content { padding: 0px; }

#notifications_menu .system_message { padding: 0px 10px 10px; }

#notifications_menu .notification_detail_item { padding: 7px 10px; border-b=
ottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(230,=
 230, 230); overflow: hidden; }

#notifications_menu span.time { color: gray; float: right; }

#notifications_menu span.paginate { float: right; }

#notifications_menu span.paginate .separated { width: 10px; padding: 0px 10=
px; color: rgb(102, 102, 102); }

#notifications_menu span.paginate #prev_button { text-decoration: none; }

#notifications_menu span.paginate #next_button { text-decoration: none; }

#notifications_menu span.paginate a { cursor: pointer; padding-left: 3px; }

#notifications_menu span.paginate a.disable { cursor: default; color: rgb(1=
53, 153, 153); text-decoration: none; }

div#page { width: 100%; }

div#header { height: 30px; }

div#header, div#content, div#branding { margin: 0px auto; width: 950px; pos=
ition: relative; }

div#blog_site_nav { float: left; margin-top: 3px; }

div#blog_site_nav a.homepage { padding-left: 77px; background-image: url(ht=
tp://www.iteye.com/images/logo-small.gif); background-position: 0% 50%; bac=
kground-repeat: no-repeat; }

div#blog_site_nav a { padding: 3px 5px; line-height: 2.2em; }

a#msna { text-decoration: none; }

div#branding { float: none; padding: 10px 0px 0px; color: white; }

div#branding h1 { margin: 0px; padding-top: 8px; font-size: 30px; }

div#branding a, div#branding a:link, div#branding a:active, div#branding a:=
visited { color: white; text-decoration: underline; }

div#branding a:hover { color: white; text-decoration: none; }

div#branding h1 a, div#branding h1 a:link, div#branding h1 a:active, div#br=
anding h1 a:visited { text-decoration: none; }

div#local { overflow: hidden; }

div#local h5 { margin-left: 10px; }

div#local li { margin-left: 25px; line-height: 2.1em; list-style: square; }

#blog_name { padding-left: 38px; float: left; }

#blog_preview { text-align: right; height: 18px; width: 200px; float: right=
; }

#blog_preview img { vertical-align: middle; }

#blog_domain { padding: 35px 20px 0px 0px; float: right; }

div#content { margin-top: 5px; }

div#local { width: 188px; border: 1px solid black; padding: 10px 3px 0px; m=
argin: 3px 3px 0px 0px; }

div#main { width: 714px; border: 1px solid; padding: 5px 12px; margin: 3px =
0px 0px 5px; overflow: hidden; }

#blog_owner { text-align: center; padding: 0px 13px; }

div#blog_owner_logo { border: 1px solid rgb(204, 204, 204); padding: 10px; =
}

div#blog_owner_logo img { width: 120px !important; }

#blog_owner_name { padding-top: 5px; font-weight: bolder; }

#user_visits { margin-bottom: 20px; }

#user_visits div.left { width: 75px; overflow: hidden; }

div.user_visit { float: left; width: 75px; height: 90px; margin: 10px 0px 0=
px 5px; overflow: hidden; }

#blog_actions { margin-bottom: 20px; }

#blog_actions ul li { list-style: none; margin-left: 10px; }

#blog_actions a.profile, #blog_actions a.message, #blog_actions a.guest_boo=
k, #blog_actions a.subscription { padding: 0px 10px 0px 20px; background-po=
sition: 0% 50%; background-repeat: no-repeat; }

#blog_actions a.profile { background-image: url(http://www.iteye.com/images=
/blog/profile.png); }

#blog_actions a.message { background-image: url(http://www.iteye.com/images=
/blog/message.png); }

#blog_actions a.guest_book { background-image: url(http://www.iteye.com/ima=
ges/blog/guest_book.png); }

#blog_actions a.subscription { background-image: url(http://www.iteye.com/i=
mages/blog/subscription.png); }

div#rss li { list-style: none; }

div.blog_nav { right: 20px; margin-bottom: 15px; }

div.pre_next { float: right; text-align: right; padding-top: 5px; }

div.pre_next a { padding: 0px 15px; background-repeat: no-repeat; }

div.pre_next a.next { background-image: url(http://www.iteye.com/images/gra=
y_west_arrow.gif); background-position: 0% 50%; }

div.pre_next a.pre { background-image: url(http://www.iteye.com/images/gray=
_east_arrow.gif); background-position: 100% 50%; }

.blog_main { margin: auto auto 10px; width: 700px; border-bottom-width: 1px=
; border-bottom-style: dotted; padding: 10px 11px 15px; }

.blog_title { margin-bottom: 15px; }

.blog_title h3 .actions a { margin-left: 8px; background-color: transparent=
; }

.blog_bottom { padding: 15px 0px 5px; }

.blog_bottom li { list-style: none; display: inline; float: left; margin: 0=
px 10px 0px 0px; padding-right: 10px; border-right-width: 1px; border-right=
-style: solid; }

.blog_bottom li.last { border-right-style: none; }

.blog_bottom a.more { padding-right: 50px; background-image: url(http://www=
.iteye.com/images/icon_more.gif); background-position: 100% 50%; background=
-repeat: no-repeat; }

.blog_comment { margin-top: 15px; padding: 15px; border-top-width: 1px; bor=
der-top-style: solid; border-top-color: gray; width: 685px; }

.comment_title, .comment_content { padding: 3px; }

.comment_title .delete { position: absolute; right: 30px; }

.comment_content { margin-bottom: 10px; }

div.picture_thumb { float: left; width: 142px; height: 170px; margin: 0px 1=
2px; overflow: hidden; }

div.picture_thumb li { list-style: none; margin: 0px; }

div.picture_full { text-align: center; overflow: auto; border-top-width: 1p=
x; border-top-style: solid; border-top-color: gray; padding-top: 15px; widt=
h: 100%; }

div.picture_full ul { text-align: left; width: 100%; padding-bottom: 20px; =
margin: 10px 0px; }

div.picture_full li { list-style: none; margin: 0px; padding: 15px 0px 5px =
10px; }

.show_full_flag { float: right; margin-top: 10px; }

div.digg { float: right; width: 52px; padding: 0px 5px; text-align: center;=
 }

.digg h3, .digg div { padding: 7px 0px; background-image: url(http://www.it=
eye.com/images/digg.jpg); background-repeat: no-repeat; }

.digg h3.digged, .digg div.digged { background-image: url(http://www.iteye.=
com/images/digged.jpg); }

.digg h3 a, .digg h3 span, .digg div a, .digg div span { font-size: 14px; f=
ont-weight: normal; text-decoration: none; padding-left: 15px; background-p=
osition: 0% 50%; background-repeat: no-repeat; }

div.digg div.digg_admin { width: 100px; text-align: left; background: none;=
 }

div.digg div.digg_admin a { padding-left: 2px; }

.digg h3 a.digg, .digg h3 span.digg, .digg div a.digg, .digg div span.digg =
{ color: rgb(21, 47, 147); background-image: url(http://www.iteye.com/image=
s/icon_digg.gif); }

.digg h3 a.bury, .digg h3 span.bury, .digg div a.bury, .digg div span.bury =
{ color: rgb(160, 58, 50); background-image: url(http://www.iteye.com/image=
s/icon_bury.gif); }

div#digg_bottom { margin: 5px 0px; padding-left: 270px; display: inline-blo=
ck; }

div#digg_bottom div { width: 72px; height: 50px; float: left; text-align: c=
enter; padding-top: 9px; margin-right: 10px; font-size: 14px; line-height: =
25px; cursor: pointer; background-image: url(http://www.iteye.com/images/di=
gg_bottom.gif); }

div#digg_bottom strong { color: white; }

#share_weibo { display: inline-block; float: right; width: 160px; height: 3=
2px; margin: 0px; padding: 27px 5px 0px 0px; color: rgb(51, 51, 51); text-a=
lign: right; cursor: auto; font-style: normal !important; font-variant: nor=
mal !important; font-weight: normal !important; font-stretch: normal !impor=
tant; font-size: 12px !important; line-height: 32px !important; font-family=
: Arial, Helvetica, sans-serif !important; background: none; }

#share_weibo img { margin: 0px 5px; }

#share_weibo a { background: transparent; }

div#digg_bottom a { color: rgb(22, 7, 209); text-decoration: none; backgrou=
nd: transparent; }

div#digg_bottom div.digged { color: rgb(241, 78, 16); cursor: auto; backgro=
und-image: url(http://www.iteye.com/images/digged_bottom.gif); }

h3.type_good, h3.type_mid, h3.type_original, h3.type_translate, h3.type_rep=
rint { padding-left: 25px; background-position: 0px 13px; background-repeat=
: no-repeat; }

h3.type_good { background-image: url(http://www.iteye.com/images/blog/type_=
good.png); }

h3.type_mid { background-image: url(http://www.iteye.com/images/blog/type_m=
id.png); }

h3.type_original { background-image: url(http://www.iteye.com/images/blog/t=
ype_original.png); }

h3.type_translate { background-image: url(http://www.iteye.com/images/blog/=
type_translate.png); }

h3.type_reprint { background-image: url(http://www.iteye.com/images/blog/ty=
pe_reprint.png); }

#guest_book_emotes a { width: 125px; text-decoration: none; color: black; d=
isplay: block; float: left; background-color: transparent; }

#resume { width: 100%; }

#resume label.title { width: 200px; font-weight: normal; }

#resume label { width: 50px; font-weight: normal; }

div.group { height: 160px; }

div.group div.content { float: right; width: 630px; }

#blog_options li { list-style: none; margin-left: 0px; }

#blog_options label { width: 150px; }

td.row1 { width: 160px; vertical-align: top; background-color: transparent;=
 }

h3 span { padding-left: 30px; font-size: 12px; font-weight: normal; }

div.blog_title h3 { font-size: 16px; padding-top: 10px; }

div.blog_title h3 span { font-size: 12px; margin-left: 5px; font-weight: no=
rmal; }

div.blog_title h3 span a { margin-left: 8px; }

table.admin { width: 100%; margin-bottom: 20px; }

table.admin thead { font-weight: bold; font-size: 13px; }

table.admin tbody td { padding: 5px 0px; border-top-width: 1px; border-top-=
style: dashed; border-top-color: rgb(221, 221, 221); }

div#favorite_tag_list { padding-bottom: 20px; border-bottom-width: 1px; bor=
der-bottom-color: rgb(204, 204, 204); border-bottom-style: solid; margin-bo=
ttom: 20px; }

div#favorite_tag_list li { list-style: none; width: 120px; overflow: hidden=
; float: left; margin: 5px; }

div#favorite_tag_list input.text { width: 100px; }

#main_nav { border-bottom-width: 1px; border-bottom-style: solid; border-bo=
ttom-color: rgb(51, 102, 170); height: 25px; margin: 10px 0px 12px; }

#main_nav li { margin: 0px 12px; list-style: none; float: left; }

#main_nav a { display: block; color: black; text-decoration: none; padding:=
 0.25em 1em; border-top-width: 1px; border-right-width: 1px; border-left-wi=
dth: 1px; border-style: solid solid none; border-top-color: rgb(51, 102, 17=
0); border-right-color: rgb(51, 102, 170); border-left-color: rgb(51, 102, =
170); background: rgb(221, 221, 221); }

#main_nav li.activetab a, ul#main_nav a:hover { border-bottom-width: 1px; b=
order-bottom-style: solid; border-bottom-color: white; background: rgb(255,=
 255, 255); }

#main_nav li.nonetab { padding-left: 30px; }

#main_nav li.nonetab a { width: 200px; display: inline; border: none; paddi=
ng: 0px; background: transparent; }

div.activity { border-bottom-width: 1px; border-bottom-style: solid; border=
-bottom-color: rgb(216, 223, 234); padding: 7px 10px; margin-bottom: 10px; =
}

div.new_reply { background-color: rgb(238, 238, 238); }

.activity_content { float: left; width: 500px; padding-left: 22px; backgrou=
nd-repeat: no-repeat; }

.Topic .activity_content { background-image: url(http://www.iteye.com/image=
s/subscription/topic.gif); }

.Blog .activity_content { background-image: url(http://www.iteye.com/images=
/subscription/blog.gif); }

.BlogComment .activity_content { background-image: url(http://www.iteye.com=
/images/subscription/blog_comment.gif); }

.Post .activity_content { background-image: url(http://www.iteye.com/images=
/subscription/post.gif); }

.News .activity_content { background-image: url(http://www.iteye.com/images=
/subscription/news.gif); }

.NewsComment .activity_content { background-image: url(http://www.iteye.com=
/images/subscription/news_comment.gif); }

.Essence .activity_content { background-image: url(http://www.iteye.com/ima=
ges/subscription/essence.gif); }

.EssenceComment .activity_content { background-image: url(http://www.iteye.=
com/images/subscription/essence_comment.gif); }

.ArticleComment .activity_content { background-image: url(http://www.iteye.=
com/images/subscription/post.gif); }

.Picture .activity_content { background-image: url(http://www.iteye.com/ima=
ges/subscription/picture.gif); }

.PictureComment .activity_content { background-image: url(http://www.iteye.=
com/images/subscription/picture_comment.gif); }

.Problem .activity_content { background-image: url(http://www.iteye.com/ima=
ges/subscription/problem.gif); }

.Solution .activity_content { background-image: url(http://www.iteye.com/im=
ages/subscription/solution.gif); }

.GroupTopic .activity_content { background-image: url(http://www.iteye.com/=
images/subscription/group_topic.gif); }

.GroupPost .activity_content { background-image: url(http://www.iteye.com/i=
mages/subscription/group_post.gif); }

.Page .activity_content, .Card .activity_content { background-image: url(ht=
tp://www.iteye.com/images/subscription/page.gif); }

.PageComment .activity_content { background-image: url(http://www.iteye.com=
/images/subscription/page_comment.gif); }

.GuestBook .activity_content { background-image: url(http://www.iteye.com/i=
mages/subscription/guest_book.gif); }

.UserFavorite .activity_content { background-image: url(http://www.iteye.co=
m/images/subscription/user_favorite.gif); }

.Twitter .activity_content { background-image: url(http://www.iteye.com/ima=
ges/subscription/twitter.gif); }

.Subscription .activity_content { background-image: url(http://www.iteye.co=
m/images/subscription/subscription.gif); }

div.activity_summary { padding: 5px 5px 5px 0px; }

div.activity_summary img.thumb { border: 1px solid rgb(238, 238, 238); padd=
ing: 2px; }

div.activity_time { float: right; }

div#twitter_decorate { margin: 5px 13px 0px; background-image: url(http://w=
ww.iteye.com/images/blog/twitter_decorate.gif); background-position: 50% 10=
0%; background-repeat: no-repeat; }

div#twitter { margin: 0px 13px 5px; padding: 5px; border-right-width: 1px; =
border-bottom-width: 1px; border-left-width: 1px; border-style: none solid =
solid; border-right-color: rgb(204, 204, 204); border-bottom-color: rgb(204=
, 204, 204); border-left-color: rgb(204, 204, 204); }

div.twitter { padding-bottom: 10px; }

div.twitter em { color: rgb(153, 153, 153); font-size: 11px; }

div.twitter em a { color: rgb(153, 153, 153); text-decoration: none; }

div.twitter em a:hover { text-decoration: underline; background-color: tran=
sparent; }

div.single_twitter { font-size: 18px; }

div.twitter div.content { padding: 10px 10px 0px 20px; float: left; width: =
667px; height: 80px; margin-left: 2px; position: relative; background-image=
: url(http://www.iteye.com/images/app/twitter_sbg.png); background-repeat: =
no-repeat; }

div.twitter div.action { position: absolute; right: 10px; bottom: 5px; }

div.twitter div.action a:hover { background-color: transparent; }

ul.blog_categories { list-style-type: none; margin: 0px; }

ul.blog_categories li { list-style-type: none; display: inline; padding: 0p=
x; margin: 0px 5px 0px 0px; }

div#blog_content { font-size: 14px; line-height: 1.8em; }

#blog_navbar { margin: 0px auto; width: 950px; }

#blog_navbar li { padding: 0px; margin: 0px; }

#blog_navbar ul { margin-left: 210px; }

.blog_navbar_for { border-radius: 10px 10px 0px 0px; border: 0px; margin-to=
p: 10px; font-weight: bold; }

#blog_navbar li { line-height: 30px; height: 30px; float: left; list-style:=
 none; color: rgb(255, 255, 255); font-size: 15px; margin-top: 5px; padding=
: 0px 27px; }

#blog_navbar li a:visited { color: rgb(255, 255, 255); text-decoration: non=
e; }

#blog_navbar .search { float: left; border-radius: 2px; width: 200px; margi=
n: 5px; background: rgb(255, 255, 255); }

#blog_navbar input.button, input.submit_search { border: 0px !important; }

.submit_search { border: 0px none; height: 22px; width: 22px; background: u=
rl(http://www.iteye.com/images/blog/search.gif) no-repeat !important; }

input.search_text { border: 0px; width: 150px !important; height: 22px !imp=
ortant; }

#fd { clear: both; }

.blog_main_title { border-bottom-width: 1px; border-bottom-style: dotted; p=
adding: 10px 11px 5px; margin-bottom: 10px; }

.blog_main_title span { font-size: 14px; }

#guest_books li { padding: 12px 0px 5px; border-bottom-width: 1px; border-b=
ottom-color: rgb(204, 204, 204); border-bottom-style: dotted; margin-left: =
10px !important; list-style: none !important; }

#local a:hover a:active a:link a:visited { text-decoration: none !important=
; }

iframe #tweetList { height: auto !important; }

.notes { width: 85%; border: 1px solid rgb(204, 204, 204); margin: 0px auto=
 10px; padding: 5px 10px; color: rgb(153, 153, 153); }

.picture_upload { padding: 10px 20px; min-height: 400px; }

.picture_upload_notes { border: 1px solid rgb(204, 204, 204); padding: 3px;=
 margin: 15px auto; background: rgb(247, 247, 247); }

.picture_photo { border: 1px solid rgb(204, 204, 204); padding: 3px; width:=
 150px; height: 100px; background: rgb(255, 255, 255); }

.picture_photo img { width: 150px; height: 94px; }

.picture_photo_input1 { width: 100%; height: 50px; padding: 3px; border: 1p=
x solid rgb(204, 204, 204); background: rgb(255, 255, 255); }

.picture_photo_input2 { width: 100px; padding: 3px; border: 1px solid rgb(2=
04, 204, 204); background: rgb(255, 255, 255); }

.picture_info { }

.picture_info_img { text-align: center; }

.picture_info_notes { padding: 20px; }

.picture_info_notes span { color: rgb(153, 153, 153); }

.picture_info_text { margin-top: 10px; }

.picture_info_notes p span { color: black; line-height: 24px; }

.default { padding: 20px 20px 10px; min-height: 400px; text-align: center; =
font-size: 14px; color: rgb(153, 153, 153); }

.about_bar { margin: 10px 0px; padding: 5px 15px; font-weight: bold; }

.about_bar span { margin-left: 20px; }

.weight { font-weight: 100; }

.series { display: block; margin: 0px; padding: 5px 0px 10px; }

.series dt { display: inline-block; float: left; margin: 0px 10px; }

.series dt img { width: 48px; height: 48px; border: 1px solid rgb(204, 204,=
 204); padding: 1px; }

.series dd { float: left; margin: 0px; width: 90px; }

.series dd a { line-height: 18px; height: 36px; }

.series::after { clear: both; content: "."; display: block; height: 0px; vi=
sibility: hidden; }

.ico_img { }

.ico_img img { margin-right: 3px; vertical-align: middle; }

span.gold { padding-left: 12px; background-image: url(http://www.iteye.com/=
images/ask/medal-gold.gif); background-position: 0% 50%; background-repeat:=
 no-repeat; }

span.bronze { padding-left: 12px; background-image: url(http://www.iteye.co=
m/images/ask/medal-bronze.gif); background-position: 0% 50%; background-rep=
eat: no-repeat; }

span.silver { padding-left: 12px; background-image: url(http://www.iteye.co=
m/images/ask/medal-silver.gif); background-position: 0% 50%; background-rep=
eat: no-repeat; }

.material_classify_bottom { padding-bottom: 10px; border-bottom-width: 1px;=
 border-bottom-color: rgb(221, 221, 221); border-bottom-style: dashed; }

.material_classify_top { padding-top: 10px; }

.medal_bg { margin-right: 10px; vertical-align: top; display: block; backgr=
ound: url(http://www.iteye.com/images/ask/medal_bg.gif) 100% 3px no-repeat;=
 }

.medal_bg::after { content: "."; display: block; height: 0px; clear: both; =
visibility: hidden; }

.medal_bg img { float: left; margin: 0px !important; }

.medal_s_list { display: block; margin: 0px; }

.medal_s_list::after { content: "."; display: block; height: 0px; clear: bo=
th; visibility: hidden; }

.medal_s_list li { float: left; margin: 0px 10px 0px 0px; list-style: none;=
 }

.medal_number { float: left; padding: 1px 1px 1px 0px; color: rgb(255, 255,=
 255); }

.my_medal { margin: 20px 0px; display: block; }

.my_medal::after { content: "."; display: block; height: 0px; clear: both; =
visibility: hidden; }

.my_medal dt { float: left; margin-right: 20px; }

.my_medal dd { line-height: 24px; padding: 5px; }

.my_medal dd span { font-size: 16px; font-weight: bold; }

.medal_user_list { display: block; padding: 10px 0px; }

.medal_user_list::after { content: "."; display: block; height: 0px; clear:=
 both; visibility: hidden; }

span.open { display: block; padding-left: 20px; background: url(http://www.=
iteye.com/images/ask/ask.gif) 0% 50% no-repeat; }

span.close { display: block; padding-left: 20px; background: url(http://www=
.iteye.com/images/ask/greenright.gif) 0% 50% no-repeat; }

span.score { padding-left: 12px; margin-left: 10px; color: rgb(23, 163, 0);=
 background-image: url(http://www.iteye.com/images/ask/score.gif); backgrou=
nd-position: 0% 50%; background-repeat: no-repeat; }

.user_info { width: 160px; color: rgb(153, 153, 153); line-height: 17px; pa=
dding-top: 4px; }

.user_info img { float: left; }

.user_info span { margin-left: 10px; }

.user_info_border { float: left; border: 1px solid rgb(204, 204, 204); padd=
ing: 10px; margin: 0px 30px 20px 0px; }

#medal_top_list { display: block; padding-top: 10px; }

#medal_top_list::after { content: "."; display: block; height: 0px; clear: =
both; visibility: hidden; }

#medal_top_material { display: block; padding: 15px 0px 10px 12px; margin: =
10px 0px 15px; border: 1px solid rgb(194, 213, 227); background: rgb(250, 2=
50, 250); }

#medal_top_material::after { content: "."; display: block; height: 0px; cle=
ar: both; visibility: hidden; }

.medal_top_son { float: left; width: 165px; padding: 14px 0px 0px 5px; heig=
ht: 65px; overflow: hidden; margin: 5px 8px 9px 6px; border: 1px solid rgb(=
216, 230, 240); border-image-source: initial; border-image-slice: initial; =
border-image-width: initial; border-image-outset: initial; border-image-rep=
eat: initial; color: rgb(153, 153, 153); line-height: 17px; background: whi=
te; }

.medal_top_son::after { }

.medal_top_son:hover { width: 165px; height: 68px; overflow: hidden; margin=
: 0px 9px 7px 1px; padding: 20px 0px 0px 11px; border: none; cursor: pointe=
r; background: url(http://www.iteye.com/images/medal_list_bg.png) 0px 0px n=
o-repeat; }

.medal_top_son:hover a { color: rgb(188, 42, 77); }

.medal_top_son p { float: left; font-size: 18px; width: 20px; text-align: c=
enter; font-family: Arial; line-height: 50px; margin: 0px 10px; color: rgb(=
54, 113, 165); }

.medal_top_son h6 { }

.medal_top_son img { float: left; }

.medal_top_son span { margin-left: 10px; }

.medal_tag { margin: 10px; font-size: 14px; }

.medal_name { font-size: 12px; margin-bottom: 10px; }

.medal { border: 1px solid rgb(51, 51, 51); margin: 0px 8px 3px 0px; font-s=
ize: 14px; padding: 0px 10px; display: inline-block; text-decoration: none;=
 white-space: nowrap; line-height: 24px; border-radius: 6px; border-image-s=
ource: initial; border-image-slice: initial; border-image-width: initial; b=
order-image-outset: initial; border-image-repeat: initial; background-color=
: rgb(51, 51, 51); }

.medal:hover { border: 1px solid rgb(68, 68, 68); background-color: rgb(68,=
 68, 68); }

.medal_gold { color: rgb(255, 204, 51); }

.medal_silver { color: rgb(255, 255, 255); }

.medal_bronze { color: rgb(255, 153, 102); }

.medal_multiplier { font-size: 14px; font-weight: bold; margin-right: 4px; =
color: rgb(68, 68, 68); }

.medal_list { padding: 10px 40px; font-size: 14px; }

.medal_list dl { display: block; }

.medal_list dl::after { content: "."; display: block; height: 0px; clear: b=
oth; visibility: hidden; }

.medal_list dt { float: left; height: 30px; width: 150px; margin: 0.25em 0p=
x; }

.medal_list dd { float: left; height: 30px; width: 650px; margin: 0.25em 0p=
x; }

.medal_list_title { font-size: 16px; padding: 5px 0px; border-bottom-style:=
 solid; border-bottom-width: 1px; border-bottom-color: rgb(194, 213, 227); =
margin-bottom: 10px; }

p.medal_tag a:hover { background-color: rgb(255, 255, 255); }
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/stylesheets/themes/blog/blue.css?1326191326

div.topic_page, a { color: rgb(16, 138, 198); text-decoration: underline; }

a:hover { color: white; }

div.app_nav, div#page, .comment_title, tr.mouse_over { background-color: rg=
b(239, 250, 255); }

div#local, div#main, .blog_main, .pagination a:hover, .pagination a:active =
{ border-color: rgb(16, 138, 198); background-color: white; }

div.nav, div#app_list div.decorate, a:hover, div#branding, input.button, in=
put.submit, td.buttons a, .pagination span.current { background-color: rgb(=
16, 138, 198); }

.blog_bottom li { border-right-color: rgb(16, 138, 198); color: rgb(16, 138=
, 198); }

table.admin thead, .pagination a, .pagination a:visited { color: rgb(16, 13=
8, 198); }

div.app_nav, .pagination span.current { border-color: rgb(16, 138, 198); }

.blog_comment, div.picture_full { border-top-color: rgb(16, 138, 198); }

.white { color: rgb(255, 255, 255) !important; }

#blog_navbar { background-color: rgb(16, 138, 198); }

.blog_navbar_for { color: rgb(16, 138, 198); background-color: rgb(239, 250=
, 255); }

#blog_navbar .blog_navbar_for a:visited { color: rgb(16, 138, 198); backgro=
und-color: rgb(239, 250, 255); }

#blog_navbar .blog_navbar_for a:link { color: rgb(16, 138, 198); background=
-color: rgb(239, 250, 255); }

.blog_main_title { color: rgb(0, 0, 0); }

.about_bar { color: rgb(16, 138, 198); background: rgb(204, 204, 204); }

.view a:hover { color: rgb(16, 138, 198); }

.list_current { }

.list_current a { color: rgb(255, 102, 0); font-weight: bold; }

.list_current a:hover { color: rgb(255, 255, 255); background: rgb(255, 102=
, 0); }

#my_resume .editing a.del:hover, #my_resume .editing a.add:hover { color: r=
gb(16, 138, 198); }
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1348819953

.dp-highlighter { font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera =
Sans Mono', Consolas, 'Courier New', monospace; font-size: 12px; width: 97%=
; overflow: auto; margin-left: 9px; padding: 1px; word-break: break-all; wo=
rd-wrap: break-word; background-color: transparent; }

.dp-highlighter ol { border: 1px solid rgb(209, 215, 220); list-style: deci=
mal; margin: 0px 0px 1px; padding: 2px 0px; color: rgb(43, 145, 175); backg=
round-color: rgb(255, 255, 255); }

.dp-highlighter ol li, .dp-highlighter .columns div { border-left-width: 1p=
x; border-left-style: solid; border-left-color: rgb(209, 215, 220); padding=
-left: 10px; line-height: 18px; margin: 0px 0px 0px 38px; background-color:=
 rgb(250, 250, 250); }

.dp-highlighter .columns { color: gray; overflow: hidden; width: 100%; }

.dp-highlighter .columns div { padding-bottom: 5px; }

.dp-highlighter ol li span { color: black; }

.dp-highlighter .tools { padding: 3px; text-align: left; margin: 0px; color=
: black; font-weight: bold; }

.dp-about { margin: 0px; padding: 0px; background-color: rgb(255, 255, 255)=
; }

.dp-about table { width: 100%; height: 100%; font-size: 11px; font-family: =
Tahoma, Verdana, Arial, sans-serif !important; }

.dp-about td { padding: 10px; vertical-align: top; }

.dp-about .copy { border-bottom-width: 1px; border-bottom-style: solid; bor=
der-bottom-color: rgb(172, 168, 153); height: 95%; }

.dp-about .title { color: red; font-weight: bold; }

.dp-about .para { margin: 0px 0px 4px; }

.dp-about .footer { border-top-width: 1px; border-top-style: solid; border-=
top-color: rgb(255, 255, 255); text-align: right; background-color: rgb(236=
, 234, 219); }

.dp-about .close { font-size: 11px; width: 60px; height: 22px; font-family:=
 Tahoma, Verdana, Arial, sans-serif !important; background-color: rgb(236, =
234, 219); }

.dp-highlighter .comment, .dp-highlighter .comments { color: rgb(0, 130, 0)=
; padding: 0px; margin: 0px; width: auto; border: 0px; }

.dp-highlighter .string { color: blue; }

.dp-highlighter .keyword { color: rgb(127, 0, 85); font-weight: bold; }

.dp-highlighter .preprocessor { color: gray; }
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/icon_star.png

iVBORw0KGgoAAAANSUhEUgAAAA8AAAAOCAYAAADwikbvAAAACXBIWXMAAC4jAAAuIwF4pT92AAAK
T2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AU
kSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXX
Pues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgAB
eNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAt
AGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3
AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dX
Lh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+
5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk
5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd
0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA
4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzA
BhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/ph
CJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5
h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+
Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQ
AkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+Io
UspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdp
r+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZ
D5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61Mb
U2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY
/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllir
SKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79u
p+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6Vh
lWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1
mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lO
k06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7Ry
FDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3I
veRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+B
Z7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/
0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5q
PNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIs
OpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5
hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQ
rAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9
rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1d
T1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aX
Dm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7
vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3S
PVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKa
RptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO
32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21
e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfV
P1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i
/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8
IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
YAAAOpgAABdvkl/FRgAAAelJREFUeNqM0clqImEQwPF/dycuEaQRBT20ksWLKCIKggdBUMEnUO95
kHmUkBeI5uDBQJ5AhXZvFTcEhYBCm76IyxyGcZBkIHWq+vh+FFUlbDabE99ErVajWq0Si8XIZrPf
fUHkP6GqKqIo0mq10HX953i5XLJarcjlcgiCQL/f/zlWVRW73U44HOb29hZVVb/FV4vFgl6vx36/
Pz/W63Xi8TgAPp+PRqNBqVTCarVyPB4RBAGfz4fkdDp/jcdjLBYLhmGw3W6RZZloNIosy5jNZnRd
5/PzE8Mw2O12DIdDNE3jSlEUut0u9/f3xONxRPFyEofDQbFYPNeapjGdTvF4PAibzebUaDR4fX1F
lmXy+Twej+fLfLquUyqVGAwGJJNJUqnUHwwwHo95e3tju93y+PiILMtneDqdeHp64uPjg0wmQyQS
udz23d0dDw8PSJLEzc3NRVdBELDZbLhcrjO8wLvdjna7TTAYxGQyMRqNeH5+pl6vA+D3+5nP56xW
q3+n+pvMZjPW6zVer5dms0m5XOb6+prJZMJ6vSYQCCBJEp1OB7fbfYm73S6iKPL+/s5yuSSdTpNI
JOj1ery8vKBpGhaLhclk8rWzoiiMRiMOhwOFQoFAIABAKBTC5XJRqVQwDANFUc749wDhgMn/nJ9+
yAAAAABJRU5ErkJggg==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/spinner.gif

R0lGODlhEAAQAPYAAP///x5Hm9jf7aCx1HKMwFZ1s1l3tX+Wxay72uDl8K692j1gqUFjqkhprU1t
sFRzs3uTxMLN4zZbpYKZx+7x9u/y98nS5peq0GSAunCKv8XP5dXc7FFwsTFWo5mr0bPB3W+Jvoug
y+Xp85SnzypRoHmRw6e313eQwr7K4Vt5tiZOnrnF36Kz1TNYpCNLneru9fX2+oedyZKmzvb4+pCk
zbLA3Pr7/Pz8/cfR5dDY6fj5+9rh7rfE3vHz+Nfe7Ofr8+Hm8dPb68zV6MPO5OPo8tzi7/P1+d7k
74meyrzI4brH4GF9uGaCum2HvnSNwVh2tFJyssrU54acyEprruzv9kNlq5ut0muGvURmrDhcpqu6
2WJ/uS1TopWo0HaPwUtsr87X6NHZ6ujs9MDL4o2hzJ6w06m42GmEvJyu0198t116tztfqLC+2yxS
oShPn7XC3iFJnKW11z9iqS9Vok9vsISayEZorCVMnoCXxjpep2iDu32UxY6jzAAAAAAAAAAAACH/
C05FVFNDQVBFMi4wAwEAAAAh/h1CdWlsdCB3aXRoIEdJRiBNb3ZpZSBHZWFyIDQuMAAh/hVNYWRl
IGJ5IEFqYXhMb2FkLmluZm8AIfkECQoAAAAsAAAAABAAEAAAB42AAIKDhIWFGyMpLYaFCBwkKi6C
Njo3hQoLHSUrL4I3MD02gwIGEh6GNhQUlgADCxOMAD0/PYIEDBGxM0A/ggUNFLEAO0WCBg4VsTdB
PoIHDxaxFEI7gggGF7E+Q0SCCRAYH4Y7KxZGgxEZICYbMDMJOAg83YQaIScHMTQeLDwJjCJQsJDh
oUaOYMISBgIAIfkECQoAAAAsAAAAABAAEAAAB4yAAIKDhIWFOwNXWAxbXRuGADwYVQtZLVwkXyaF
Sk9TSBEUVEpeKlyERwRQm4UyhQoGI5CCN4NIS1GzADo2ggRMPbpGRoInTcSzFBWCF05BszpiywBJ
EAizVEDBAD8XUhqGLwJEvYI5MjRJCTo6L0VgG9ODQSZWLFofSkNhVJBUOUlqrBCSAIaugwACAQAh
+QQJCgAAACwAAAAAEAAQAAAHiYAAgoOEhYUJChNpBl4sAoYAQwdLBg8ODQxqbIU4XmdoURUVQ1Jr
DAiDImROPIZoLVAbgmMQZpAAEG1dgiwTPrdKbmqCMkgwt1QuLYIeNDO3hTUXR9CEYGVDtzY6gxQf
Zr+FOj3Pg0c1H0FUNzcwFC8VNoVAQyhDQkE7QC/chkYJG3L4IBKvWrVAACH5BAkKAAAALAAAAAAQ
ABAAAAePgACCg4SFhT8oHhBOIWxHhgA5FwcnGWdbak5KhUEjSGwbRj1CXQ9PPINUJjI4hmZfTDuC
OVYokABIDAOCSiwJtxFrV4JsZjq3FBJVgm9sx5BUHXKCFjxit0ptS4JHKD63TiojgkZgOCKQcA1B
gy9gOSIwgjf0AHGFFEUCCSJUPTM2bumgIEYMBRgBbykcFAgAIfkECQoAAAAsAAAAABAAEAAAB4yA
AIKDhIWFFGFvZR4mET+GAAkrcWUXNEgTMhaFRDwKFkAzMwIKJRAag0Y4PDuGSiATQIJAYxuQAGVb
bII+OFS3Qmp1gmFCN7cVD0u8QceQFQ4GswIwt0N2XoIVCb+QdXIDgjZiP9WFHlkpAoMzVBQzgysn
cwsKhTZGMDqCLm50CLduODMwwtatg4ICAQAh+QQJCgAAACwAAAAAEAAQAAAHiYAAgoOEhYUwQDko
KxFBFIYAVEE4Y0ofCHEKPoUVG2BHVDY6IhpWVkGDNkA+L4ZCNGVigj0JrZBvUhGCVEQzkAA+B2i7
sr9GXgeCFY/GTSeCMEY3v0JMZII2M9OQXWpsgzfbhSYPTkeGBCtUVGMxU09KhnZ3blwtWXIYPJBB
I2kLDM6U2fGr4KBAACH5BAkKAAAALAAAAAAQABAAAAeIgACCg4SFhTc9Pzs+OyIwhgA6VEQJAkFC
OFEihTYVLxUzADcVOyhJQIQwPTqGRx9KFYI3M6yQUWZBsjaQgkQsPLyFMx5lwYQzNB6CBi7AkAIx
JoIyKl68WgcRghsOXBeGPE58m4Jaay14YxQVFlZ6XjiFCE95cnYOD2p7Q89lGQ8GDiBIYMxYIAAh
+QQJCgAAACwAAAAAEAAQAAAHi4AAgoOEhYY3OkYVFUY2hoM2M0YUYkREPYUmhjoURTsUg0ENLo9U
QT4zgiMqTo8ACRZEgkskK64UQzmCC1xUrjZKY4IMLb6POh+2AGdZKK5EWhGCZQt1rhEsQYICS1hx
hhYXCMYAb1B0MlE9RkFsIRcbhSsgT2pMTV4HHmGPRwgxGU5cQPHDlcFBgQAAOwAAAAAAAAAAAA==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/sina.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAEAAQAwERAAIRAQMRAf/EAGsAAAMBAAAAAAAAAAAAAAAA
AAMHCAkBAAIDAQAAAAAAAAAAAAAAAAUHAgMICRAAAQUBAQADAQAAAAAAAAAABQIDBAYHAQgAERIT
EQACAgICAgMBAQAAAAAAAAACAwEEEQUSBhMHACEiIxT/2gAMAwEAAhEDEQA/ANifKXk096OzU3v2
v28NSaVOjE265ZbIMqDxzQbSw1KjSCs2w2xpLDAhk8x1l6VJW49NebeQnrf4698zz17rNzfVG7ra
WIRRmSgCLhyYcZjMkf1AwUYmZzJTExGMZ+de/b3uzrnqvf0PWvR9SW07OIIKylM2PFTQUAXAU18k
TiUXMVhAioSApg+Xj+Gv1Kr/AJewxUbZ6/UxeiWYbZrfkmu5HX2is8FZooV+TUoPdJrsYcEZjLPA
uj5cLqH3GuFGp0OT9MSOJlYqx13VCvcwEXm8jS9McpEoj8R5RwOOQ8SGYnHODAvyXyjU7xnuDvjb
nrhlg+sUfFW2Ws2TIULUSzFlkUXSbucKdD1OggEprHWsJ/qqZlfHfb2TgCOM91o6Hpdq88ZI1hRf
Et0p2gP00TaaxcWpxLRKYQpON7vyHYbmDidGH4xCuCy7KuuoilWkdbdbD67tOvU+sWyIVPpVv88o
sLZK4MWZlq5WixgmDHBkEoDj7gWRGJhh9v8AR/a72s3aenKbd1XZtxG2Daam3SG2xDqnjCjaC1tN
RJJquLz0zTdsViiAJ1M5ggJA6F7JrDOBWzx7gC7BrBTfNlj3+5HR9OKVWjAp0g2Lngc0wShElyra
qA6XHRf6EZ7I2S820mOiDzi+rSEs9jSGnPq+mhlg7lyGsKFkCxnkMiquucnjMRkigZmI4wH3n4yd
H6d2Fn2FV93exyqahHXevHRqJK2qzccPhYtt7b3F8a/OFsZxQkngJFLSsZHjP//Z
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/tec.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAEAAQAwERAAIRAQMRAf/EAG0AAAMBAAAAAAAAAAAAAAAA
AAUHCAkBAAIDAQAAAAAAAAAAAAAAAAQHBQYICRAAAQUBAAIBBQAAAAAAAAAABQIDBAYHAQARCCES
IhMVEQACAwACAgMBAQAAAAAAAAACAwEEBREGABIhEwcUIv/aAAwDAQACEQMRAD8A32zNAErT6Hdr
hU06retjs8+rZ1T1rGDlWEiESLZslkt9pkQ1k1p4TMMtNI5IYUtXHHHXkoT9NXaapXZfnUWBRzc+
qDbL5GTkIZBStal8+vMiElMyJcfAiMzPnMzrrxfn097ZQ7Z3t3SdVz6cMFUNJJALn2bHHvxBtABG
DCZmDM2QMeH9GFCRQ/U2hGfsYpsuJAoVxNVwXOHmxk6rzJA2Kix1ewoakFhJcRIPwXvXJz7bkdf4
qS6lSPA86RYNRjXjpde0iNS2kuVmDhEy+tgfAkJQs459BmCj5iRmJ8k95RIZporUWdf7z18E2X1g
dD0tqmxQS5Dp9mLYuXqLj7jEll/mRYMj5BuP/IMnk2HHJWnf3ID9E1IhnGbR4AQZy/5nZLgHjydY
soNZnsGTCPC6/X2Iw5LjzbUElOXK6lT7TH2Hdqv0tr9eqfm/U/5m7drrE7Fz7WmNZ1VFmKtFTZWJ
8g2yxks4AiNKfSOBI5lKdL7jpdP/ADW7udwG4tOf2JmdnwpATdo2Lavt0rCZb6SLl10gCOTEUvcT
piWAv1X9t+WQU4CtWd40O1i63jbZgUNfdP1YhHO6VbB8QhDeEUmthgjxRAuCRKQ4q5K1Tp0uX+lt
j2lpPE+MHF6VurYvX7uzGp5+cthVqef7/wAyiICg3tc4EyZCJFADCVgHMn8lPlO1v1qhar2et9Ar
79/e33oXd0dMoZesLBgEuqhSpbCgNgLlky5zG+gr5gIiPP/Z
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/smiles/icon_cry.gif

R0lGODlhEwATANUAAGAvH/THMumzIvbhq7qRKqOAKu3Kd869mfviRvz47Z8/H8mfOreeaeW0MfnX
P+TPov3tUtXHpsWoatSlKPbjs6qOS+i6RfXw5u69Kdu+dv3eQuK2QPbPOP///7WLKP3zV+GsJ/K+
Mc+fKeSwJuu+RvHRgfnVO+LRq/feQqiGOO/ZprGNPO/FRP7kSeu2Jd61Me24J/HDMfDPeMyiOuDB
etyuL+m0Jv///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAUUADcALAAAAAATABMAAAbhwJvw
1klQZKSGxUBJdIbQzoDF0bSupthGBRUmShyAGEK+igHRkgnwaQPKAI2jgSYOOOT2hwy5ajgcEw83
CSwtZDd7fH1/HBgzNxR4Q4p8LY03IicyDkMVnxV8oBVCEiQtXVdXCA4OAQFDDahQqqytMTFDFp1D
qletHAEYQwYctH5ywTEwMDcMFCEa0sgOJtYYGC4CBBE3Gxyt0hoK5OQCMAJQKg2AgAocuOgKAukH
QzQ1uMvozPTbDF0yTLCBjVm/CR4AdrnxYIGICSNGgBBBIIW9hUNOSFhRIAWDCBeeDAkCADs=
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/smiles/icon_surprised.gif

R0lGODlhEwATAMQAAFUfAP/fANSfANTfqqpfANS/qn9/VdSfVaqfqv/78Kp/Vf//VYCAgMDcwP+/
VdTfVX8fVf+/AKbK8KqfVdTf/9S/VYCAAH8fAP/fqtS/AP/fVf///6p/AP///wAAAAAAACH5BAUU
AB0ALAAAAAATABMAAAXTYCeOHeZUDpY0F8CQYwUAUKVpDqCIBmkCh8UEsFjcKhUYRlNsFm+PyaFA
qhgXGIWicFVsNknR7elNTJiayVcRZl7VG0UXYT5gltiiArE5GzkXCAoZBTdoCwoAgkYaBgAXHA4T
Vm4agJCGFQoWBxETDmNMFRwGNow4DpJ4aIaGGQ4BDhECVDaGp6MKArIVBwMdoK03GQoSFAo4GQcj
GcIaChQbZhkRCr8iGDYBGrEc0RsHDlMwBbupEQYNcaNUMCIVAhURBwQGHAcN7j4FE/0FFO5CAAA7
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/login_icon.png

iVBORw0KGgoAAAANSUhEUgAAABoAAAAgCAYAAAAMq2gFAAAACXBIWXMAAAsTAAALEwEAmpwYAAAK
TWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVN3WJP3Fj7f92UPVkLY8LGXbIEAIiOsCMgQ
WaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKgKLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec
5/zOec8PgBESJpHmomoAOVKFPDrYH49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28A
AgBw1S4kEsfh/4O6UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0
ST4FANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcCgL0FAHaO
WJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2XS9IzFLiV0Bp38vDg4iHi
wmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryM
AgQAEE7P79pf5eXWA3DHAbB1v2upWwDaVgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0l
YqG9MOOLPv8z4W/gi372/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHi
NLFcLBWK8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y0nYA
QH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESggSqwQQcMwRSswA6c
wR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqgEZrhELTBMTgN5+ASXIHrcBcGYBie
whi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJhSDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1c
QPqQ28ggMor8irxHMZSBslED1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqO
Y4DRMQ5mjNlhXIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hM
WEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+TSCQOyZLkTgoh
JZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BPkvvJw+S3FDrFiOJMCaIkUqSU
Eko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQL1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/p
dLoJ3YMeRZfQl9Jr6Afp5+mD9HcMDYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Y
b1VYKvYqfBWRyhKVOpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7O
UndSj1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L57Ex2Bfsb
di97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqtZq1+rTfaetq+2mLtcu0W
7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02PreekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83
MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGoEctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxr
PGFiaTLbpMSkxeS+Kc2Ua5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW
2pZ8ywWWTZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p0in1
U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTDqcSpw+lXZxtnoXOd
8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt2W3U3cw9xX2r+00umxvJXcM970H0
8PdY4nHM452nm6fC85DnL152Xlle+70eT7OcJp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+H
vqa+It89viN+1n6Zfgf8nvs7+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsG
Lww+FUIMCQ1ZH3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjg
R2yIuB9pGZkX+X0UKSoyqi7qUbRTdHF09yzWrORZ+2e9jvGPqYy5O9tqtnJ2Z6xqbFJsY+ybuIC4
qriBeIf4RfGXEnQTJAntieTE2MQ9ieNzAudsmjOc5JpUlnRjruXcorkX5unOy553PFk1WZB8OIWY
EpeyP+WDIEJQLxhP5aduTR0T8oSbhU9FvqKNolGxt7hKPJLmnVaV9jjdO31D+miGT0Z1xjMJT1Ir
eZEZkrkj801WRNberM/ZcdktOZSclJyjUg1plrQr1zC3KLdPZisrkw3keeZtyhuTh8r35CP5c/Pb
FWyFTNGjtFKuUA4WTC+oK3hbGFt4uEi9SFrUM99m/ur5IwuCFny9kLBQuLCz2Lh4WfHgIr9FuxYj
i1MXdy4xXVK6ZHhp8NJ9y2jLspb9UOJYUlXyannc8o5Sg9KlpUMrglc0lamUycturvRauWMVYZVk
Ve9ql9VbVn8qF5VfrHCsqK74sEa45uJXTl/VfPV5bdra3kq3yu3rSOuk626s91m/r0q9akHV0Ibw
Da0b8Y3lG19tSt50oXpq9Y7NtM3KzQM1YTXtW8y2rNvyoTaj9nqdf13LVv2tq7e+2Sba1r/dd3vz
DoMdFTve75TsvLUreFdrvUV99W7S7oLdjxpiG7q/5n7duEd3T8Wej3ulewf2Re/ranRvbNyvv7+y
CW1SNo0eSDpw5ZuAb9qb7Zp3tXBaKg7CQeXBJ9+mfHvjUOihzsPcw83fmX+39QjrSHkr0jq/dawt
o22gPaG97+iMo50dXh1Hvrf/fu8x42N1xzWPV56gnSg98fnkgpPjp2Snnp1OPz3Umdx590z8mWtd
UV29Z0PPnj8XdO5Mt1/3yfPe549d8Lxw9CL3Ytslt0utPa49R35w/eFIr1tv62X3y+1XPK509E3r
O9Hv03/6asDVc9f41y5dn3m978bsG7duJt0cuCW69fh29u0XdwruTNxdeo94r/y+2v3qB/oP6n+0
/rFlwG3g+GDAYM/DWQ/vDgmHnv6U/9OH4dJHzEfVI0YjjY+dHx8bDRq98mTOk+GnsqcTz8p+Vv95
63Or59/94vtLz1j82PAL+YvPv655qfNy76uprzrHI8cfvM55PfGm/K3O233vuO+638e9H5ko/ED+
UPPR+mPHp9BP9z7nfP78L/eE8/sl0p8zAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAA
ADqYAAAXb5JfxUYAAAJjSURBVHjavJbBS1RRFMZ/584bGSEwJoLATQshaFWoRWpIRf9AJS7aFAy0
SWdcCC3aBu3GoVCCosCVZAUStGiliGU2IUSGi6BFZVAaE5I1Nve06GHPp867T9MD3+Zxvvud7553
7z2iqkSF9BRPA+eARuAQkABmgFlgGBjSfGOl6hrVhEzPy4PAbeBYRC2zwCWbbxqNLWRyU+3AE6AW
tygDGdvXPOgslMhNNgCTQJp4UQaOV/qOvlhT+LrqaL+gaUEJYEbQLkGbfGQEfRbKqRH0rpd7noh0
lMxOHPHdBGME6FgutJTDCySzEzeAy6HPHcuFluGqjgS9EKpyUdCL64n4+TnfbZDTGbl1gm0TLAGM
lAutCxs2pdBaEexgiHMyWkj1gKgSwOvIc6Y6HuKkU91j6Q2FUt2ju0BrQAmgFP2zaSnEAXTv6p3K
TbGV0HyTU55hh0Ikt3K22oFe/y6r3+K6i0ARGLT55jt/hbKTAFmgb5vMDAHnPUHbtlEEoBOY9gR7
ZQda1OuJalscxv49KWqThreff8ShpT3B1rlmZ1r20d/ZAMCt8Tm67r9zVjKiFlfkTtSvEt2dMs5c
T7DOVdUm5d+bZYS6lOH7khvfM2o33WGjFld+LEfr3PS48j1xmIKq3Nq48nfOUZweWbu6+l/l3849
MqGXsSoeT8+tEMdm55lf/OnM9SSGo6sP3vDq/TdSyQQPi5+Iw/UEuxBnfntU/BDoEXFuhjXv/Xbg
oxHsdcFW4vRqE7hm/GkzI+hSaDb7X7j5deDMgEEVVO+hehjVIVRL/retoILqU1RPfRk42wXwZwAN
Ts5Uo85DgAAAAABJRU5ErkJggg==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/user/70120/9d834a78-2719-41f5-b469-ab04e9c6bf55.gif?1236837039

R0lGODlheAB4APIEAP8AAP8/P/9/f/+/v////wAAAAAAAAAAACH5BAAAAAAALAAAAAB4AHgAAAP+
SLrc/jDKSau9OOvNu/9gKI5kaZ5oqq5s675wLM90bWNAru987//AoHAIPBGPyKQyOVo6n1AlKEqt
WnWeq3a77HC/4OImTC7nxuY0V6P+DgiCMLutDSyQAYE+MJw79XpvDAMCfF92C4SAcTsCghGEPX5H
gReKAgqGS5UUOY8VmgCTPJgmjEd5nxWFGaeiGUClJaFCqhcAiBeuo40YihOufRuGDYSanwM8vDq5
DYBCnArJTBh6Oww+g5KwQJ+FS7m0wpDivQo9j9PK3GIE5Ud3SnaRZwvieTqyOwHpP8s7glwBYrDo
Wb1gf7A5cmBIXw5Z7trdClKKlS9cChDKs3D+KhFEOEH+5cs4phSVZhM0SVCXjd2Piun0EOSTZw8A
k1BQDop2baVEC9Ay3txGINa5P7aEjjxaT8I7kQ+Z8sh1KU6ePFKPJMVmrigWCuWg3jzHTyZHnEm2
3lnEtWlErA3EiY2nAS44B4QmsFwQ7COtuUd3xkwlFG1aBnw+OtildF/cnjhCBs70lSXOUu9qERjQ
EBhkhDohTxTDSFpPV4KigqwC8dur1U0R2hIN1OhqpXDhDNysWmOXxrEhs9QZ8WvkH4KI6VLtlUqi
HISBP1o66K/LqfEU+xxL2bln47oX+7sO0DR3aQszFlRpHop2Z+UhsCQ6GrtSTPTqqcMnOjP+kfcE
dTWTEMs0Ywh/zDSGCWMe+fdTVXwJyBk85KEUxCM02UPdAwYRqKE5AkWIxCSKBRNdStBVMIQs853X
lW/jHXeehsSB4sl3FH1oDkuPwNiSjB9NQwEgfHySIiREtAWiaD7SVxtzlClmTDunbNVijBohEkqA
I7rUzDTNuBbEPDzYcmWMQARgHXDj1PdacTeJCQUySdjh4DpseigjAG9MCEZNTVoxHTV70qEGP352
WaihjCrqZqOQtvlkpJRKtmilmLo1aaacvrlpp5iKBaqhoo7aRqmmpoFqqmWsyqoc5L1KaqyyCnEn
hZfWilx7ULhKipxpZKbkE76m91gZiFz+CVEVvBSEi1kR+FbQtMD+YGAPy/pQU5LXARhtHMbmKiBC
2ZLynJ5ueiselLSae+6zxl4SgYO8cOSuBi3OU5NaHDTZLI6OoVHmCpKq6CSXMS4GLcK0mXDnMrYE
+mU5n5SjrgeBemrwvbyZaxN475TLMQQf86kjlLg+6pYr/GhDnW1ZxUcytvHg2Ry6n97IV7gnO+SD
yNg+UzF9P2ascSc/U9CizzTXvOKwbhWdcs4z4mWx0xwjAXRTV55sqcpVJ5IZ01lTAvVr5GL9NdXa
NUm2gI7ebJw4b/+08cgZy5Kly9yqXfe7BSPddMdBW8OcOtGI2HfMr3Sdp92C35v2uxf5M4yzDwMo
6/Xad78oIGxhS2D0m2e+pDbnkXve8rE68FsMoaA/DefibINF3y9WS3F2mqODR7VeCa+x+0muQSy6
RMJ7NO2t2gakaeehPy5a8pZ02ENuTNX7QOnTbxECWxz63rmUzA//hOshNJz6R70jtkWNIzDoZo+b
nE58yXHuhq/Nm/KaRN104BmK1DcBZXBPM4xj1OoGSEAJTCUKgMOUtzTiK1tJj1IngsNT2vUEw+kK
dQX8IKMqKELviKuEXxAYCs2gwhWSgQMubBUMYwirGdLQex+4oRaaoMNe3eCHQAyiEIdIxCIa8YhI
TKISl8jEJjrxiVAsQQIAADs=
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/icon_minigender_1.gif?1324994303

R0lGODlhCwALALMAADFjdCt4kTKOrjikyGWarFexz2vQ8YGXnoKcpZKxu7S5u4m0wqC9xp/O3sDA
wAAAACH5BAEAAA4ALAAAAAALAAsAAAQ80EnZamWTml1WdgyzCcTnNItAno1RLcQSEFVRbGUiIE0B
EIOBIGMIKE6FAHHg6SknjMGNADh8FsKANRMBADs=
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://someok.iteye.com/images/status/offline.gif

R0lGODlhWQAaAMQAAGZmZu/v76WlpZmZmcXFxXx8fP///7W1td3d3ff394yMjK2trb29vczMzIWF
hZmZmeXl5dbW1v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEH
ABIALAAAAABZABoAAAX/oCSOZGmeaKqubOu+cCzPdG3fIyIMRID/wFFjNygeIAFdcclsOp/QqFQq
aKgEhQLzEOgmENOweEzOLkwIhQJhaAd4iIa8MRAk2vi8fs/v+/9+DWo+Iw52eWACB4sLAg4DAYCS
k5SUbwpCDnsBRAI7DoZ3laOkowkOCCILA3wEq00NfgAGs7N8ALi4e7Z/vHq8tXoNDiJFfAkMDAQE
DAcMu7ltttPRwNK52NXZ2XjWtHnDIp57CXQCyTsCPbfSu93fvu19wcHv09d44RKeCf39EAc8EQFV
ZwEEf9uy9QOAMAFDhv4cLozYUKJFiw9zUdTHzx+EZgtCehqgRkDIgxEh/0JEqPHhxYsrU0p0uRBX
RZv9ONrxR+BAyJ+eFDhQ4PMAxYwTk858uTImS4U3sW0ktm9nuSILfAoUINTQDgJPl1Zc2jSjVIov
J+JUGVGnP5IDgI7sWkeNQ5ppY+LdizbhWr1p3faD+xMoyQIKFtiNmlQj2bFOMapN2VSp4KtbCx8e
wEBABMpskTaGObahQpVlxZaj6qlLlwhbnS0LaPIAAte5XHfBpZv3bt8B/ALYrft3ceDBh3fRt6o4
AgZZCURAEIGZstvFs2vfzr279+36hmlH4ErggQZIvqtfz947A1QjFHhGQL++/fv48+vfz7+//+dF
kBCAGgskY+CBCCao4CeCDDbo4IOKKUAICQdkoQAZGGao4RMKZHGACgg0suGIJIaxQColhAAAOw==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/user-logo-thumb.gif?1324994303

R0lGODlhMAAwAMQAAOXl5eTk5Pv7++np6efn5/Pz8+bm5vz8/PHx8evr6+jo6PLy8vj4+O/v7/r6
+vn5+e3t7f39/fT09P7+/vf39/X19fb29uzs7PDw8O7u7urq6v///+Pj4wAAAAAAAAAAACH/C1hN
UCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtj
OWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUg
WE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAi
PiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5
bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6
Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29t
L3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NU
eXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdp
bmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MkIzMkFGRUQ1QUFEMTFFMDk2MEJERjMw
QTkyQzUyNDYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MkIzMkFGRUU1QUFEMTFFMDk2MEJE
RjMwQTkyQzUyNDYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
ZDoyQjMyQUZFQjVBQUQxMUUwOTYwQkRGMzBBOTJDNTI0NiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1w
LmRpZDoyQjMyQUZFQzVBQUQxMUUwOTYwQkRGMzBBOTJDNTI0NiIvPiA8L3JkZjpEZXNjcmlwdGlv
bj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf2
9fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769
vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWE
g4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxL
SklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMS
ERAPDg0MCwoJCAcGBQQDAgEAACH5BAAAAAAALAAAAAAwADAAAAX/ICeOZGmeaKqubOu+cCzPdG3f
eK7vfO//wKBwSCwafQSL4lgiPBgZJknCYBQCUtEFUZAkEgTCd5xYigAEgygwGJg5gIFGDQ+vAobD
BoHY+P8FHAQSBxERDAkcDBsRZhR+CgAFhREPECoAAhsYGH9/CAaanhsQCn4UHBB+CwEPo3spmXtx
qhsLCgaPGwIFuhMGC34NDhsHAQV+BwUWE34aKLILIqYbUdQPBg0LFX4IAXp/EAERxQQQBcgbFdCa
0hwDwql+EATdDhESHBl/DO/dAX4KMIiA6kQ0EfA2NOBwQVgrBwMAGAAgYtGEAf42BLIgIAEeigbb
IYxHoNkBjHSmZ2xwcEZPhEQpY4nMuJADtw0THgi4UELCSiwc+vh54ADDCgB63CWsCWDRnwMgRXAT
ADSABU8TCGCy4KCmAqI81zRgIOBBgahBHVQAKgICBQFqtWaZS7eu3bt48+rdy7ev37+AAwuWEQIA
Ow==
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/user/551309/25e47e5e-60cd-3475-b734-2c644b452e55-thumb.jpg?1315444847

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcU
FhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAwADADASIA
AhEBAxEB/8QAGgAAAwADAQAAAAAAAAAAAAAABQYHAgQIA//EADAQAAIBAwMCBQIFBQEAAAAAAAEC
AwQFEQASIQYxBxMiQVEygRQVYXGRCCMkQqGx/8QAFwEBAQEBAAAAAAAAAAAAAAAABQMEAv/EACcR
AAIBBAEDAgcAAAAAAAAAAAECAwAEESExEiJhQZEFEzJRccHw/9oADAMBAAIRAxEAPwC0rTOAOQR8
657/AKj7vUebFbkkkw8piCK5C7RjJKjuSx9+MAavd0vdNbNiTpMzMM+leMfueNR/xWslPfeoKK5U
1Sz00LGoMaR8rIADhjj6Tt7+xJz7HXd5ONKDwdj3/dStGXrIPJ4pU8O+hIG6brmrUQ1dwoAYw3dN
zFgR+22P/wA0k9TWKp6RvEF2og4pRMroUkK4yu4puByMHcv211PQie92GjNnpaU00WyJStTkIqDb
hV7ISCCcdzjPbSl4tUrXy1wdPSU8cVWZBPH+HkM0i8fSqH6Qdq8DIG4n50crOHJP0nxSrdJULwR5
oz0j5lxtaOPQo2kK2cqrKGA/6RpmoqNYZVaTDtuGD8aw6Tsr2y1xJVBVmYBpEU8KcABfjgD+c6Nt
FGx7Dg+2nbZ2WFUbnFC3ABkLKNZoRerRBVxNUM8i1OFEbZyFPwFPHPvoA9vjs1ZK0x8yZGDQEEgK
CeGIHJOeAvvoxSXU1bxoRyh3AN/tpculzeJpqmpjkerhSSokj8sjZsQ4P7DgA9joGe5VyTGu/wAV
ptrdH7m3jfPsKRrZ1NU3DryuaauqIqVt8USQOIcbcnkLgEHaee/I1u+F/WFWK+4RTsrw58yNp1BZ
VLYw8v1e4GWJGdIPTNZBR3COeqkXG1yRtBOdvyQQc88aKeGgSe+11I8ImSstdZCYsZ3ZjLAY9/p7
aoiyZ6tjPrTkixfLK4BwKu1ntlnutHTV9HUVFRD6VX/J3qDGx9JxwSDx9hozabHTUDb6RGGIli3M
2chST/PPJ98D40neElohs9L+W2ubzbdt85trFwrkD1ZJ4LD2/TtqnIoSLaOce+k4pFZOoUDMZVYo
x1SlWdKgRR/gpGDg4bzTwR88DQbqK09RmxT2m1tFMahCGhEoX+3kbiC2ACeBjPudVFoYQm4vtAGS
d3/dIHVl9slymS0UEpnrVPmmeI4MABXID98kMvbIxnRaM8cgkYAAfau0t1Y4XmozReHV6q781Nc6
GutqrTTyrK8ShS6rlVDjKtkke+cZ1t+HVn6mt17oLpHYq+PyXDzPND5KeWR6vU2OCufvq69O0C/l
FHUtVVNXKyMHM85fBLEEYPHtj7aWeoaWOG+RJ59VNBFHG/4WWpZoz6jkEE8ggdjxrU/xgq7Bl0R/
etVS1Z+0HdMk1+ipIA60Mghb1KVKqGB5yPnvrUk6vjDKq0E7bjgYkXkfI+ftrKxdRWfqWmVKVtxI
DGnmTay8Zx8EgH2JxnXjcunmMnm0Ui7QwPkuBjg/PbP68HV7W8tpe1+1vPFYZ7eeM5XYr//Z
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5
Content-Type: text/html
Content-Transfer-Encoding: quoted-printable
Content-Location: http://someok.iteye.com/iframe_ggbd/187

<!--//--><html><head><meta http-equiv=3D"Content-Type" content=3D"text/html=
; charset=3DUTF-8"></head><body></body></html>
------=_NextPart_000_F938_CCE8DF41.AF1B9EC5--
